{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/stonks/pages/_app.tsx"],"sourcesContent":["import type { AppProps } from 'next/app'\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />\n} "],"names":[],"mappings":";;;;;AAEe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBAAO,qKAAC;QAAW,GAAG,SAAS;;;;;;AACjC"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/web/lib/util/local.ts"],"sourcesContent":["export interface Store {\n  getItem: (key: string) => string | null\n  setItem: (key: string, val: string) => void\n  removeItem: (key: string) => void\n}\n\nfunction getStorageProxy(store: Storage): Store | undefined {\n  try {\n    store.setItem('test', '')\n    store.getItem('test')\n    store.removeItem('test')\n  } catch (e) {\n    console.warn(e)\n    return undefined\n  }\n  return {\n    getItem: (key: string) => store.getItem(key) ?? null,\n    setItem: (key: string, value: string) => {\n      try {\n        store.setItem(key, value)\n      } catch (e) {\n        store.clear()\n        // try again\n        store.setItem(key, value)\n      }\n    },\n    removeItem: (key: string) => store.removeItem(key),\n  }\n}\n\nexport let safeLocalStorage: Store | undefined\nexport let safeSessionStorage: Store | undefined\n\ntry {\n  safeLocalStorage = getStorageProxy(localStorage)\n} catch {}\n\ntry {\n  safeSessionStorage = getStorageProxy(sessionStorage)\n} catch {}\n\nexport function newInMemoryStore(): Store {\n  const store: Record<string, string> = {}\n  return {\n    getItem: (key: string) => store[key],\n    setItem: (key: string, value: string) => {\n      store[key] = value\n    },\n    removeItem: (key: string) => {\n      delete store[key]\n    },\n  }\n}\n"],"names":[],"mappings":";;;;;AAMA,SAAS,gBAAgB,KAAc;IACrC,IAAI;QACF,MAAM,OAAO,CAAC,QAAQ;QACtB,MAAM,OAAO,CAAC;QACd,MAAM,UAAU,CAAC;IACnB,EAAE,OAAO,GAAG;QACV,QAAQ,IAAI,CAAC;QACb,OAAO;IACT;IACA,OAAO;QACL,SAAS,CAAC,MAAgB,MAAM,OAAO,CAAC,QAAQ;QAChD,SAAS,CAAC,KAAa;YACrB,IAAI;gBACF,MAAM,OAAO,CAAC,KAAK;YACrB,EAAE,OAAO,GAAG;gBACV,MAAM,KAAK;gBACX,YAAY;gBACZ,MAAM,OAAO,CAAC,KAAK;YACrB;QACF;QACA,YAAY,CAAC,MAAgB,MAAM,UAAU,CAAC;IAChD;AACF;AAEO,IAAI;AACJ,IAAI;AAEX,IAAI;IACF,mBAAmB,gBAAgB;AACrC,EAAE,OAAM,CAAC;AAET,IAAI;IACF,qBAAqB,gBAAgB;AACvC,EAAE,OAAM,CAAC;AAEF,SAAS;IACd,MAAM,QAAgC,CAAC;IACvC,OAAO;QACL,SAAS,CAAC,MAAgB,KAAK,CAAC,IAAI;QACpC,SAAS,CAAC,KAAa;YACrB,KAAK,CAAC,IAAI,GAAG;QACf;QACA,YAAY,CAAC;YACX,OAAO,KAAK,CAAC,IAAI;QACnB;IACF;AACF"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/web/lib/native/post-message.ts"],"sourcesContent":["import { webToNativeMessageType } from 'common/native-message'\nimport { getIsNative } from 'web/lib/native/is-native'\n\nexport const postMessageToNative = (\n  type: webToNativeMessageType,\n  data: any\n) => {\n  const isNative = getIsNative()\n  if (\n    isNative &&\n    (window as any).ReactNativeWebView &&\n    // NOTE: After the webview is killed on android due to OOM, postMessage will be undefined, see: https://github.com/react-native-webview/react-native-webview/issues/2680\n    typeof (window as any).ReactNativeWebView.postMessage === 'function'\n  ) {\n    ;(window as any).ReactNativeWebView?.postMessage(\n      JSON.stringify({\n        type,\n        data,\n      })\n    )\n  }\n}\n"],"names":[],"mappings":";;;AACA;;;;;;AAEO,MAAM,sBAAsB,CACjC,MACA;IAEA,MAAM,WAAW,CAAA,GAAA,6HAAA,CAAA,cAAW,AAAD;IAC3B,IACE,YACA,AAAC,OAAe,kBAAkB,IAClC,wKAAwK;IACxK,OAAO,AAAC,OAAe,kBAAkB,CAAC,WAAW,KAAK,YAC1D;;QACE,OAAe,kBAAkB,EAAE,YACnC,KAAK,SAAS,CAAC;YACb;YACA;QACF;IAEJ;AACF"}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/web/lib/native/native-messages.ts"],"sourcesContent":["import { postMessageToNative } from 'web/lib/native/post-message'\n\nexport const nativePassUsers = (userJson: string) => {\n  postMessageToNative('users', userJson)\n}\nexport const nativeSignOut = () => {\n  postMessageToNative('signOut', {})\n}\n"],"names":[],"mappings":";;;;AAAA;;;;;;AAEO,MAAM,kBAAkB,CAAC;IAC9B,CAAA,GAAA,gIAAA,CAAA,sBAAmB,AAAD,EAAE,SAAS;AAC/B;AACO,MAAM,gBAAgB;IAC3B,CAAA,GAAA,gIAAA,CAAA,sBAAmB,AAAD,EAAE,WAAW,CAAC;AAClC"}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/envs/prod.ts"],"sourcesContent":["export type EnvConfig = {\n  domain: string\n  loveDomain: string\n  loveDomainAlternate: string\n  firebaseConfig: FirebaseConfig\n  amplitudeApiKey: string\n  supabaseInstanceId: string\n  supabaseAnonKey: string\n  twitchBotEndpoint: string\n  apiEndpoint: string\n  googleAnalyticsId: string\n\n  // IDs for v2 cloud functions -- find these by deploying a cloud function and\n  // examining the URL, https://[name]-[cloudRunId]-[cloudRunRegion].a.run.app\n  cloudRunId: string\n  cloudRunRegion: string\n\n  // Access controls\n  adminIds: string[]\n  visibility: 'PRIVATE' | 'PUBLIC'\n\n  // Branding\n  moneyMoniker: string // e.g. 'Ṁ'\n  spiceMoniker: string // e.g. 'S'\n  bettor: string // e.g. 'predictor'\n  nounBet: string // e.g. 'prediction'\n  verbPastBet: string // e.g. 'predicted'\n  faviconPath: string // Should be a file in /public\n  newQuestionPlaceholders: string[]\n  expoConfig: {\n    iosClientId?: string\n    expoClientId?: string\n    androidClientId?: string\n  }\n}\n\ntype FirebaseConfig = {\n  apiKey: string\n  authDomain: string\n  projectId: string\n  region?: string\n  storageBucket: string\n  privateBucket: string\n  messagingSenderId: string\n  appId: string\n  measurementId: string\n}\n\nexport const PROD_CONFIG: EnvConfig = {\n  domain: 'manifold.markets',\n  loveDomain: 'manifold.love',\n  loveDomainAlternate: 'manifoldlove.com',\n  amplitudeApiKey: '2d6509fd4185ebb8be29709842752a15',\n  supabaseInstanceId: 'pxidrgkatumlvfqaxcll',\n  supabaseAnonKey:\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB4aWRyZ2thdHVtbHZmcWF4Y2xsIiwicm9sZSI6ImFub24iLCJpYXQiOjE2Njg5OTUzOTgsImV4cCI6MTk4NDU3MTM5OH0.d_yYtASLzAoIIGdXUBIgRAGLBnNow7JG2SoaNMQ8ySg',\n  googleAnalyticsId: 'GTM-MLMPXHJ6',\n  firebaseConfig: {\n    apiKey: 'AIzaSyDp3J57vLeAZCzxLD-vcPaGIkAmBoGOSYw',\n    authDomain: 'mantic-markets.firebaseapp.com',\n    projectId: 'mantic-markets',\n    region: 'us-central1',\n    storageBucket: 'mantic-markets.appspot.com',\n    privateBucket: 'mantic-markets-private',\n    messagingSenderId: '128925704902',\n    appId: '1:128925704902:web:f61f86944d8ffa2a642dc7',\n    measurementId: 'G-SSFK1Q138D',\n  },\n  twitchBotEndpoint: 'https://twitch-bot.manifold.markets',\n  apiEndpoint: 'api.manifold.markets',\n  cloudRunId: 'nggbo3neva',\n  cloudRunRegion: 'uc',\n\n  adminIds: [\n    'igi2zGXsfxYPgB0DJTXVJVmwCOr2', // Austin\n    'tlmGNz9kjXc2EteizMORes4qvWl2', // Stephen\n    '0k1suGSJKVUnHbCPEhHNpgZPkUP2', // Sinclair\n    'IPTOzEqrpkWmEzh6hwvAyY9PqFb2', // Manifold\n    'AJwLWoo3xue32XIiAVrL5SyR1WB2', // Ian\n    'uglwf3YKOZNGjjEXKc5HampOFRE2', // D4vid\n    'GRwzCexe5PM6ThrSsodKZT9ziln2', // Inga\n    '62TNqzdBx7X2q621HltsJm8UFht2', // Marshall\n    'z0cH5XmIM9XgWFOBAILQWt0fTHr1', // Rachel W\n    'cA1JupYR5AR8btHUs2xvkui7jA93', // Genzy\n    'vuI5upWB8yU00rP7yxj95J2zd952', // Manifold Politics\n    '8lZo8X5lewh4hnCoreI7iSc0GxK2', // Manifold AI\n    'mwaVAaKkabODsH8g5VrtbshsXz03', // Ian's alt\n  ],\n  visibility: 'PUBLIC',\n\n  moneyMoniker: 'Ṁ',\n  spiceMoniker: 'P',\n  bettor: 'trader',\n  verbPastBet: 'traded',\n  nounBet: 'trade',\n  faviconPath: '/favicon.ico',\n  newQuestionPlaceholders: [\n    'Will anyone I know get engaged this year?',\n    'Will humans set foot on Mars by the end of 2030?',\n    'Will any cryptocurrency eclipse Bitcoin by market cap this year?',\n    'Will the Democrats win the 2024 presidential election?',\n  ],\n  expoConfig: {\n    iosClientId:\n      '128925704902-n0ic4j1s5tk51t2vu8anu8glh3t5jimo.apps.googleusercontent.com',\n    expoClientId:\n      '128925704902-bpcbnlp2gt73au3rrjjtnup6cskr89p0.apps.googleusercontent.com',\n    androidClientId:\n      '128925704902-ur9hevfika2rs0sni6ju236u82hbct3i.apps.googleusercontent.com',\n  },\n}\n"],"names":[],"mappings":";;;AAgDO,MAAM,cAAyB;IACpC,QAAQ;IACR,YAAY;IACZ,qBAAqB;IACrB,iBAAiB;IACjB,oBAAoB;IACpB,iBACE;IACF,mBAAmB;IACnB,gBAAgB;QACd,QAAQ;QACR,YAAY;QACZ,WAAW;QACX,QAAQ;QACR,eAAe;QACf,eAAe;QACf,mBAAmB;QACnB,OAAO;QACP,eAAe;IACjB;IACA,mBAAmB;IACnB,aAAa;IACb,YAAY;IACZ,gBAAgB;IAEhB,UAAU;QACR;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,YAAY;IAEZ,cAAc;IACd,cAAc;IACd,QAAQ;IACR,aAAa;IACb,SAAS;IACT,aAAa;IACb,yBAAyB;QACvB;QACA;QACA;QACA;KACD;IACD,YAAY;QACV,aACE;QACF,cACE;QACF,iBACE;IACJ;AACF"}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/envs/dev.ts"],"sourcesContent":["import { EnvConfig, PROD_CONFIG } from './prod'\n\nexport const DEV_CONFIG: EnvConfig = {\n  ...PROD_CONFIG,\n  domain: 'dev.manifold.markets',\n  loveDomain: 'dev.manifold.love',\n  loveDomainAlternate: 'dev.manifoldlove.com',\n  googleAnalyticsId: '',\n  firebaseConfig: {\n    apiKey: 'AIzaSyBoq3rzUa8Ekyo3ZaTnlycQYPRCA26VpOw',\n    authDomain: 'dev-mantic-markets.firebaseapp.com',\n    projectId: 'dev-mantic-markets',\n    region: 'us-central1',\n    storageBucket: 'dev-mantic-markets.appspot.com',\n    privateBucket: 'dev-mantic-markets-private',\n    messagingSenderId: '134303100058',\n    appId: '1:134303100058:web:27f9ea8b83347251f80323',\n    measurementId: 'G-YJC9E37P37',\n  },\n  cloudRunId: 'w3txbmd3ba',\n  cloudRunRegion: 'uc',\n  amplitudeApiKey: 'fd8cbfd964b9a205b8678a39faae71b3',\n  supabaseInstanceId: 'mfodonznyfxllcezufgr',\n  supabaseAnonKey:\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1mb2RvbnpueWZ4bGxjZXp1ZmdyIiwicm9sZSI6ImFub24iLCJpYXQiOjE2Njc5ODgxNjcsImV4cCI6MTk4MzU2NDE2N30.RK8CA3G2_yccgiIFoxzweEuJ2XU5SoB7x7wBzMKitvo',\n  twitchBotEndpoint: 'https://dev-twitch-bot.manifold.markets',\n  apiEndpoint: 'api.dev.manifold.markets',\n  expoConfig: {\n    iosClientId:\n      '134303100058-lioqb7auc8minvqt9iamuit2pg10pubt.apps.googleusercontent.com',\n    expoClientId:\n      '134303100058-2uvio555s8mnhde20b4old97ptjnji3u.apps.googleusercontent.com',\n    androidClientId:\n      '134303100058-mu6dbubhks8khpqi3dq0fokqnkbputiq.apps.googleusercontent.com',\n  },\n  adminIds: [\n    'pfKxvtgSEua5DxoIfiPXxR4fAWd2',\n    '6hHpzvRG0pMq8PNJs7RZj2qlZGn2', // Ian\n    'MxyCh2xvsFMFywwjg3Az0w4xP5B3', // Dev Manifold\n    '2cO953kN1sTBpfbhPVnTjRNqLJh2', // Sinclair\n  ],\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,aAAwB;IACnC,GAAG,sHAAA,CAAA,cAAW;IACd,QAAQ;IACR,YAAY;IACZ,qBAAqB;IACrB,mBAAmB;IACnB,gBAAgB;QACd,QAAQ;QACR,YAAY;QACZ,WAAW;QACX,QAAQ;QACR,eAAe;QACf,eAAe;QACf,mBAAmB;QACnB,OAAO;QACP,eAAe;IACjB;IACA,YAAY;IACZ,gBAAgB;IAChB,iBAAiB;IACjB,oBAAoB;IACpB,iBACE;IACF,mBAAmB;IACnB,aAAa;IACb,YAAY;QACV,aACE;QACF,cACE;QACF,iBACE;IACJ;IACA,UAAU;QACR;QACA;QACA;QACA;KACD;AACH"}},
    {"offset": {"line": 348, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/envs/constants.ts"],"sourcesContent":["import { escapeRegExp } from 'lodash'\nimport { DEV_CONFIG } from './dev'\nimport { EnvConfig, PROD_CONFIG } from './prod'\n\nexport const ENV = (process.env.NEXT_PUBLIC_FIREBASE_ENV ?? 'PROD') as\n  | 'PROD'\n  | 'DEV'\n\nexport const CONFIGS: { [env: string]: EnvConfig } = {\n  PROD: PROD_CONFIG,\n  DEV: DEV_CONFIG,\n}\n\nexport const CASH_BETS_ENABLED = true\nexport const TWOMBA_CASHOUT_ENABLED = true\nexport const SPICE_PRODUCTION_ENABLED = false\nexport const SPICE_TO_MANA_CONVERSION_RATE = 1\nexport const CASH_TO_MANA_CONVERSION_RATE = 100\nexport const MIN_CASH_DONATION = 25\nexport const MIN_SPICE_DONATION = 25000\nexport const CHARITY_FEE = 0.05\nexport const CASH_TO_CHARITY_DOLLARS = 1\nexport const SPICE_TO_CHARITY_DOLLARS = (1 / 1000) * (1 - CHARITY_FEE) // prize points -> dollars\nexport const NY_FL_CASHOUT_LIMIT = 5000\nexport const DOLLAR_PURCHASE_LIMIT = 5000\n\nexport const SPICE_NAME = 'Prize Point'\nexport const SWEEPIES_NAME = 'sweepcash'\nexport const SPICE_MARKET_TOOLTIP = `Prize market! Earn ${SPICE_NAME}s on resolution`\nexport const SWEEPIES_MARKET_TOOLTIP = `Sweepstakes market! Win real cash prizes.`\nexport const CASH_SUFFIX = '--cash'\n\nexport const TRADE_TERM = 'trade'\nexport const TRADED_TERM = 'traded'\nexport const TRADING_TERM = 'trading'\nexport const TRADER_TERM = 'trader'\n\nexport const ENV_CONFIG = CONFIGS[ENV]\n\nexport function isAdminId(id: string) {\n  return ENV_CONFIG.adminIds.includes(id)\n}\n\nexport function isModId(id: string) {\n  return MOD_IDS.includes(id)\n}\nexport function isSweepstakesModId(id: string) {\n  return SWEEPSTAKES_MOD_IDS.includes(id)\n}\nexport const DOMAIN = ENV_CONFIG.domain\nexport const LOVE_DOMAIN = ENV_CONFIG.loveDomain\nexport const LOVE_DOMAIN_ALTERNATE = ENV_CONFIG.loveDomainAlternate\nexport const FIREBASE_CONFIG = ENV_CONFIG.firebaseConfig\nexport const PROJECT_ID = ENV_CONFIG.firebaseConfig.projectId\nexport const IS_PRIVATE_MANIFOLD = ENV_CONFIG.visibility === 'PRIVATE'\n\nexport const AUTH_COOKIE_NAME = `FBUSER_${PROJECT_ID.toUpperCase().replace(\n  /-/g,\n  '_'\n)}`\n\n// Manifold's domain or any subdomains thereof\nexport const CORS_ORIGIN_MANIFOLD = new RegExp(\n  '^https?://(?:[a-zA-Z0-9\\\\-]+\\\\.)*' + escapeRegExp(ENV_CONFIG.domain) + '$'\n)\n// Manifold love domain or any subdomains thereof\nexport const CORS_ORIGIN_MANIFOLD_LOVE = new RegExp(\n  '^https?://(?:[a-zA-Z0-9\\\\-]+\\\\.)*' +\n    escapeRegExp(ENV_CONFIG.loveDomain) +\n    '$'\n)\n// Manifold love domain or any subdomains thereof\nexport const CORS_ORIGIN_MANIFOLD_LOVE_ALTERNATE = new RegExp(\n  '^https?://(?:[a-zA-Z0-9\\\\-]+\\\\.)*' +\n    escapeRegExp(ENV_CONFIG.loveDomainAlternate) +\n    '$'\n)\n\nexport const CORS_ORIGIN_CHARITY = new RegExp(\n  '^https?://(?:[a-zA-Z0-9\\\\-]+\\\\.)*' + escapeRegExp('manifund.org') + '$'\n)\n\n// Vercel deployments, used for testing.\nexport const CORS_ORIGIN_VERCEL = new RegExp(\n  '^https?://[a-zA-Z0-9\\\\-]+' + escapeRegExp('mantic.vercel.app') + '$'\n)\n// Any localhost server on any port\nexport const CORS_ORIGIN_LOCALHOST = /^http:\\/\\/localhost:\\d+$/\n\n// TODO: These should maybe be part of the env config?\nexport const BOT_USERNAMES = [\n  'TenShinoe908',\n  'subooferbot',\n  'pos',\n  'v',\n  'acc',\n  'jerk',\n  'snap',\n  'ArbitrageBot',\n  'MarketManagerBot',\n  'Botlab',\n  'JuniorBot',\n  'ManifoldDream',\n  'ManifoldBugs',\n  'ACXBot',\n  'JamesBot',\n  'RyanBot',\n  'trainbot',\n  'runebot',\n  'LiquidityBonusBot',\n  '538',\n  'FairlyRandom',\n  'Anatolii',\n  'JeremyK',\n  'Botmageddon',\n  'SmartBot',\n  'ShifraGazsi',\n  'NiciusBot',\n  'Bot',\n  'Mason',\n  'VersusBot',\n  'GPT4',\n  'EntropyBot',\n  'veat',\n  'ms_test',\n  'arb',\n  'Turbot',\n  'MetaculusBot',\n  'burkebot',\n  'Botflux',\n  '7',\n  'hyperkaehler',\n  'NcyBot',\n  'ithaca',\n  'GigaGaussian',\n  'BottieMcBotface',\n  'Seldon',\n  'OnePercentBot',\n  'arrbit',\n  'ManaMaximizer',\n  'rita',\n  'uhh',\n  'ArkPoint',\n  'EliBot',\n  'manifestussy',\n  'mirrorbot',\n  'JakeBot',\n  'loopsbot',\n  'breezybot',\n  'echo',\n  'Sayaka',\n  'cc7',\n  'Yuna',\n  'ManifoldLove',\n  'chooterb0t',\n  'bonkbot',\n  'NermitBundaloy',\n  'FirstBot',\n  'bawt',\n  'FireTheCEO',\n  'JointBot',\n  'WrenTec',\n  'TigerMcBot',\n  'Euclidean',\n  'manakin',\n  'LUCAtheory',\n  'TunglBot',\n  'timetraveler',\n  'bayesianbot',\n  'CharlesLienBot',\n  'JaguarMcBot',\n  'AImogus',\n  'brake',\n  'brontobot',\n  'OracleBot',\n  'spacedroplet',\n  'AriZernerBot',\n  'PV_bot',\n]\n\nexport const MOD_IDS = [\n  'qnIAzz9RamaodeiJSiGZO6xRGC63', // Agh\n  'srFlJRuVlGa7SEJDM4cY9B5k4Lj2', //bayesian\n  'EJQOCF3MfLTFYbhiKncrNefQDBz1', // chrisjbillington\n  'MV9fTVHetcfp3h6CVYzpypIsbyN2', // CodeandSolder\n  'HTbxWFlzWGeHUTiwZvvF0qm8W433', // Conflux\n  '9dAaZrNSx5OT0su6rpusDoG9WPN2', // dglid\n  '5XMvQhA3YgcTzyoJRiNqGWyuB9k2', // dreev\n  '946iB1LqFIR06G7d8q89um57PHh2', // egroj\n  'hqdXgp0jK2YMMhPs067eFK4afEH3', // Eliza\n  'kbHiTAGBahXdX9Z4sW29JpNrB0l2', // Ernie\n  'W4yEF6idSMcNWEVUquowziSCZFI3', // EvanDaniel\n  '2VhlvfTaRqZbFn2jqxk2Am9jgsE2', // Gabrielle\n  'cA1JupYR5AR8btHUs2xvkui7jA93', // Gen\n  'YGZdZUSFQyM8j2YzPaBqki8NBz23', // jack\n  'cgrBqe2O3AU4Dnng7Nc9wuJHLKb2', // jskf\n  '4juQfJkFnwX9nws3dFOpz4gc1mi2', // jacksonpolack\n  'XeQf3ygmrGM1MxdsE3JSlmq8vL42', // Jacy\n  'eSqS9cD5mzYcP2o7FrST8aC5IWn2', // PlasmaBallin (previously JosephNoonan)\n  'JlVpsgzLsbOUT4pajswVMr0ZzmM2', // Joshua\n  '7HhTMy4xECaVKvl5MmEAfVUkRCS2', // KevinBurke\n  'jO7sUhIDTQbAJ3w86akzncTlpRG2', // MichaelWheatley\n  'lkkqZxiWCpOgtJ9ztJcAKz4d9y33', // NathanpmYoung\n  'fSrex43BDjeneNZ4ZLfxllSb8b42', // NcyRocks\n  'BgCeVUcOzkexeJpSPRNomWQaQaD3', // SemioticRivalry\n  'KHX2ThSFtLQlau58hrjtCX7OL2h2', // shankypanky (stefanie)\n  'hUM4SO8a8qhfqT1gEZ7ElTCGSEz2', // Stralor\n  'tO4DwIsujySUwtSnrr2hnU1WJtJ3', // WieDan\n  'oPxjIzlvC5fRbGCaVgkvAiyoXBB2', // mattyb\n]\n\nexport const SWEEPSTAKES_MOD_IDS = [\n  'uglwf3YKOZNGjjEXKc5HampOFRE2', //SirSalty\n]\n\nexport const MVP = ['Eliza', 'Gabrielle', 'jacksonpolack']\n\nexport const VERIFIED_USERNAMES = [\n  'EliezerYudkowsky',\n  'ScottAlexander',\n  'Aella',\n  'ZviMowshowitz',\n  'GavrielK',\n  'CGPGrey',\n  'LexFridman',\n  'patio11',\n  'RichardHanania',\n  'Qualy',\n  'Roko',\n  'JonathanBlow',\n  'DwarkeshPatel',\n  'ByrneHobart',\n  'RobertWiblin',\n  'KelseyPiper',\n  'SpencerGreenberg',\n  'PaulChristiano',\n  'BuckShlegeris',\n  'Natalia',\n  'zero',\n  'OzzieGooen',\n  'OliverHabryka',\n  'Alicorn',\n  'RazibKhan',\n  'JamesMedlock',\n  'Writer',\n  'GeorgeHotz',\n  'ShayneCoplan',\n  'SanghyeonSeo',\n  'KatjaGrace',\n  'EmmettShear',\n  'CateHall',\n  'RobertSKMiles',\n  'TarekMansour',\n  'DylanMatthews',\n  'RobinHanson',\n  'KevinRoose18ac',\n  'KnowNothing',\n  'SantaPawsSSB',\n  'AndersSandberg',\n  'JosephWeisenthal',\n  'LawrenceLessig',\n  'NatFriedman',\n  'patrissimo',\n  'postjawline',\n  'MatthewYglesias',\n  'MatthewYglesiasvuyf',\n  'BillyMcRascal',\n  'kyootbot',\n  'MaximLott',\n  'liron',\n  'LarsDoucet',\n  'PeterWildeford',\n  'SethWalder',\n  'SneakySly',\n  'ConorSen',\n  'transmissions11',\n  'DanHendrycks',\n  'Cremieux',\n  'tracewoodgrains',\n  'LuigiMangione',\n]\n\nexport const BANNED_TRADING_USER_IDS = [\n  'zgCIqq8AmRUYVu6AdQ9vVEJN8On1', //firstuserhere aka _deleted_\n  'LIBAoi7tpqeNLYM1xxJ1QJBQqW32', //lastuserhere\n  'p3ADzwIUS3fk0ka80XYEE3OM3S32', //PC\n  '4JuXgDx47xPagH5mcLDqLzUSN5g2', // BTE\n]\n\nexport const PARTNER_USER_IDS: string[] = [\n  'sTUV8ejuM2byukNZp7qKP2OKXMx2', // NFL\n  'rFJu0EIdR6RP8d1vHKSh62pbnbH2', // SimonGrayson\n  'cb6PJqGOSVPEUhprDHCKWWMuJqu1', // DanMan314\n  'HTbxWFlzWGeHUTiwZvvF0qm8W433', // Conflux\n  'YGZdZUSFQyM8j2YzPaBqki8NBz23', // jack\n  'hDq0cvn68jbAUVd6aWIU9aSv9ZA2', // strutheo\n  'OEbsAczmbBc4Sl1bacYZNPJLLLc2', // SirCryptomind\n  'JlVpsgzLsbOUT4pajswVMr0ZzmM2', // Joshua\n  'xQqqZqlgcoSxTgPe03BiXmVE2JJ2', // Soli\n  'Iiok8KHMCRfUiwtMq1tl5PeDbA73', // Lion\n  'SqOJYkeySMQjqP3UAypw6DxPx4Z2', // Shump\n  'hqdXgp0jK2YMMhPs067eFK4afEH3', // Eliza\n  'BgCeVUcOzkexeJpSPRNomWQaQaD3', // SemioticRivalry\n  'X1xu1kvOxuevx09xuR2urWfzf7i1', // KeenenWatts\n  '4juQfJkFnwX9nws3dFOpz4gc1mi2', // jacksonpolack\n  '8WEiWcxUd7QLeiveyI8iqbSIffU2', // goblinodds\n  'Iua2KQvL6KYcfGLGNI6PVeGkseo1', // Ziddletwix\n  'GRaWlYn2fNah0bvr6OW28l28nFn1', // cash\n  'ZKkL3lFRFaYfiaT9ZOdiv2iUJBM2', // mint\n  'hRbPwezgxnat6GpJQxoFxq1xgUZ2', // AmmonLam\n  'iPQVGUbwOfT3MmWIZs3JaruVzhV2', // Mugiwaraplus\n  'k9gKj9BgTLN5tkqYztHeNoSpwyl1', // OnePieceExplained\n  'foOeshHZOET3yMvRTMPINpnb8Bj2', // PunishedFurry\n  'EBGhoFSxRtVBu4617SLZUe1FeJt1', // FranklinBaldo\n  'GPlNcdBrcfZ3PiAfhnI9mQfHZbm1', // RemNi\n  '4xOTMCIOkGesdJft50wVFZFb5IB3', // Tripping\n  'hUM4SO8a8qhfqT1gEZ7ElTCGSEz2', // Stralor aka Pat Scott\n  'srFlJRuVlGa7SEJDM4cY9B5k4Lj2', // Bayesian\n  'H6b5PWELWfRV6HhyHAlCGq7yJJu2', // AndrewG\n  'EJQOCF3MfLTFYbhiKncrNefQDBz1', // chrisjbillington\n  '7HhTMy4xECaVKvl5MmEAfVUkRCS2', // KevinBurke\n  'oPxjIzlvC5fRbGCaVgkvAiyoXBB2', // mattyb\n]\n\nexport const NEW_USER_HERLPER_IDS = [\n  'cgrBqe2O3AU4Dnng7Nc9wuJHLKb2', // jskf\n  '2VhlvfTaRqZbFn2jqxk2Am9jgsE2', // Gabrielle\n  '4juQfJkFnwX9nws3dFOpz4gc1mi2', // jacksonpolack\n  'BgCeVUcOzkexeJpSPRNomWQaQaD3', // SemioticRivalry\n  'rQPOELuW5zaapaNPnBYQBMoonk92', // Tumbles\n  'igi2zGXsfxYPgB0DJTXVJVmwCOr2', // Austin\n  'tlmGNz9kjXc2EteizMORes4qvWl2', // Stephen\n  '0k1suGSJKVUnHbCPEhHNpgZPkUP2', // Sinclair\n  'AJwLWoo3xue32XIiAVrL5SyR1WB2', // Ian\n  'uglwf3YKOZNGjjEXKc5HampOFRE2', // D4vid\n  'GRwzCexe5PM6ThrSsodKZT9ziln2', // Inga\n  'cA1JupYR5AR8btHUs2xvkui7jA93', // Genzy\n  'hUM4SO8a8qhfqT1gEZ7ElTCGSEz2', // Stralor\n  'JlVpsgzLsbOUT4pajswVMr0ZzmM2', // Joshua\n  'srFlJRuVlGa7SEJDM4cY9B5k4Lj2', // Bayesian\n  'oPxjIzlvC5fRbGCaVgkvAiyoXBB2', // mattyb\n  'Gg7t9vPD4WPD1iPgj9RUFLYTxgH2', // nikki\n  'OdBj5DW6PbYtnImvybpyZzfhb133', // @jim\n]\n\nexport const OPTED_OUT_OF_LEAGUES = [\n  'vuI5upWB8yU00rP7yxj95J2zd952', // ManifoldPolitics\n  '8lZo8X5lewh4hnCoreI7iSc0GxK2', // ManifoldAI\n  'IPTOzEqrpkWmEzh6hwvAyY9PqFb2', // Manifold\n  'tRZZ6ihugZQLXPf6aPRneGpWLmz1', // ManifoldLove\n  'BhNkw088bMNwIFF2Aq5Gg9NTPzz1', // acc\n  'JlVpsgzLsbOUT4pajswVMr0ZzmM2', // Joshua\n  'oPxjIzlvC5fRbGCaVgkvAiyoXBB2', // mattyb\n  'NndHcEmeJhPQ6n7e7yqAPa3Oiih2', //josh\n]\n\nexport const HIDE_FROM_LEADERBOARD_USER_IDS = [\n  'BhNkw088bMNwIFF2Aq5Gg9NTPzz1', // acc\n  'tRZZ6ihugZQLXPf6aPRneGpWLmz1', // ManifoldLove\n]\n\nexport const INSTITUTIONAL_PARTNER_USER_IDS: string[] = []\n\nexport const BEING_DEAD_HEADS = [\n  '6hHpzvRG0pMq8PNJs7RZj2qlZGn2',\n  'AJwLWoo3xue32XIiAVrL5SyR1WB2',\n  'D8O4yNtFhEU8Y7Taf3BilznJOcu2',\n  'tlmGNz9kjXc2EteizMORes4qvWl2',\n]\n\nexport const HOUSE_BOT_USERNAME = 'acc'\n\nexport function supabaseUserConsolePath(userId: string) {\n  const tableId = ENV === 'DEV' ? 19247 : 25916\n  return `https://supabase.com/dashboard/project/${ENV_CONFIG.supabaseInstanceId}/editor/${tableId}/?filter=id%3Aeq%3A${userId}`\n}\n\nexport function supabasePrivateUserConsolePath(userId: string) {\n  const tableId = ENV === 'DEV' ? 2189688 : 153495548\n  return `https://supabase.com/dashboard/project/${ENV_CONFIG.supabaseInstanceId}/editor/${tableId}/?filter=id%3Aeq%3A${userId}`\n}\n\nexport function supabaseConsoleContractPath(contractId: string) {\n  const tableId = ENV === 'DEV' ? 19254 : 25924\n  return `https://supabase.com/dashboard/project/${ENV_CONFIG.supabaseInstanceId}/editor/${tableId}?filter=id%3Aeq%3A${contractId}`\n}\n\nexport function supabaseConsoleTxnPath(txnId: string) {\n  const tableId = ENV === 'DEV' ? 20014 : 25940\n  return `https://supabase.com/dashboard/project/${ENV_CONFIG.supabaseInstanceId}/editor/${tableId}?filter=id%3Aeq%3A${txnId}`\n}\n\nexport const GOOGLE_PLAY_APP_URL =\n  'https://play.google.com/store/apps/details?id=com.markets.manifold'\nexport const APPLE_APP_URL =\n  'https://apps.apple.com/us/app/manifold-markets/id6444136749'\n\nexport const TEN_YEARS_SECS = 60 * 60 * 24 * 365 * 10\n\nexport const DESTINY_GROUP_SLUG = 'destinygg'\nexport const PROD_MANIFOLD_LOVE_GROUP_SLUG = 'manifoldlove-relationships'\n\nexport const RATING_GROUP_SLUGS = ['nonpredictive', 'unsubsidized']\n\nexport const GROUP_SLUGS_TO_IGNORE_IN_MARKETS_EMAIL = [\n  'manifold-6748e065087e',\n  'manifold-features-25bad7c7792e',\n  'bugs',\n  'manifold-leagues',\n  ...RATING_GROUP_SLUGS,\n  DESTINY_GROUP_SLUG,\n  PROD_MANIFOLD_LOVE_GROUP_SLUG,\n]\n\n// - Hide markets from signed-out landing page\n// - Hide from onboarding topic selector\n// - De-emphasize markets in the very first feed items generated for new users\nexport const HIDE_FROM_NEW_USER_SLUGS = [\n  'fun',\n  'selfresolving',\n  'experimental',\n  'trading-bots',\n  'gambling',\n  'free-money',\n  'mana',\n  'whale-watching',\n  'spam',\n  'test',\n  'no-resolution',\n  'eto',\n  'friend-stocks',\n  'ancient-markets',\n  'jokes',\n  'planecrash',\n  'glowfic',\n  'all-stonks',\n  'the-market',\n  'nonpredictive-profits',\n  'personal-goals',\n  'personal',\n  'rationalussy',\n  'nsfw',\n  'manifold-6748e065087e',\n  'bugs',\n  'new-years-resolutions-2024',\n  'metamarkets',\n  'metaforecasting',\n  'death-markets',\n  ...GROUP_SLUGS_TO_IGNORE_IN_MARKETS_EMAIL,\n]\n\nexport const GROUP_SLUGS_TO_NOT_INTRODUCE_IN_FEED = [\n  'rationalussy',\n  'nsfw',\n  'planecrash',\n  'glowfic',\n  'no-resolution',\n  'the-market',\n  'spam',\n  'test',\n  'eto',\n  'friend-stocks',\n  'testing',\n  'all-stonks',\n  PROD_MANIFOLD_LOVE_GROUP_SLUG,\n]\n\nexport const EXTERNAL_REDIRECTS = ['/umami']\n\nexport const DISCORD_INVITE_LINK = 'https://discord.com/invite/eHQBNBqXuh'\nexport const DISCORD_BOT_INVITE_LINK =\n  'https://discord.com/api/oauth2/authorize?client_id=1074829857537663098&permissions=328565385280&scope=bot%20applications.commands'\n\nexport const YES_GRAPH_COLOR = '#11b981'\n\nexport const RESERVED_PATHS = [\n  '_next',\n  'about',\n  'ad',\n  'add-funds',\n  'ads',\n  'analytics',\n  'api',\n  'browse',\n  'calibration',\n  'card',\n  'cards',\n  'career',\n  'careers',\n  'charity',\n  'common',\n  'contact',\n  'contacts',\n  'cowp',\n  'create',\n  'date-docs',\n  'dashboard',\n  'discord',\n  'discord-bot',\n  'dream',\n  'embed',\n  'facebook',\n  'find',\n  'github',\n  'google',\n  'group',\n  'groups',\n  'help',\n  'home',\n  'jobs',\n  'leaderboard',\n  'leaderboards',\n  'league',\n  'leagues',\n  'link',\n  'linkAccount',\n  'links',\n  'live',\n  'login',\n  'lootbox',\n  'mana-auction',\n  'manifest',\n  'markets',\n  'messages',\n  'mtg',\n  'news',\n  'notifications',\n  'og-test',\n  'payments',\n  'portfolio',\n  'privacy',\n  'profile',\n  'public',\n  'questions',\n  'referral',\n  'referrals',\n  'send',\n  'server-sitemap',\n  'sign-in',\n  'sign-in-waiting',\n  'sitemap',\n  'slack',\n  'stats',\n  'styles',\n  'swipe',\n  'team',\n  'terms',\n  'tournament',\n  'tournaments',\n  'twitch',\n  'twitter',\n  'umami',\n  'user',\n  'users',\n  'versus',\n  'web',\n  'welcome',\n]\n\nexport const MANA_PURCHASE_RATE_CHANGE_DATE = new Date('2024-05-16T18:20:00Z')\nexport const MANA_PURCHASE_RATE_REVERT_DATE = new Date('2024-09-17T17:06:00Z') // commit date of sweepcash - PR #2840 5e8b46d8\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AADA;;;;AAGO,MAAM,MAAO,2CAAwC;AAIrD,MAAM,UAAwC;IACnD,MAAM,sHAAA,CAAA,cAAW;IACjB,KAAK,qHAAA,CAAA,aAAU;AACjB;AAEO,MAAM,oBAAoB;AAC1B,MAAM,yBAAyB;AAC/B,MAAM,2BAA2B;AACjC,MAAM,gCAAgC;AACtC,MAAM,+BAA+B;AACrC,MAAM,oBAAoB;AAC1B,MAAM,qBAAqB;AAC3B,MAAM,cAAc;AACpB,MAAM,0BAA0B;AAChC,MAAM,2BAA2B,AAAC,IAAI,OAAQ,CAAC,IAAI,WAAW,EAAE,0BAA0B;;AAC1F,MAAM,sBAAsB;AAC5B,MAAM,wBAAwB;AAE9B,MAAM,aAAa;AACnB,MAAM,gBAAgB;AACtB,MAAM,uBAAuB,CAAC,mBAAmB,EAAE,WAAW,eAAe,CAAC;AAC9E,MAAM,0BAA0B,CAAC,yCAAyC,CAAC;AAC3E,MAAM,cAAc;AAEpB,MAAM,aAAa;AACnB,MAAM,cAAc;AACpB,MAAM,eAAe;AACrB,MAAM,cAAc;AAEpB,MAAM,aAAa,OAAO,CAAC,IAAI;AAE/B,SAAS,UAAU,EAAU;IAClC,OAAO,WAAW,QAAQ,CAAC,QAAQ,CAAC;AACtC;AAEO,SAAS,QAAQ,EAAU;IAChC,OAAO,QAAQ,QAAQ,CAAC;AAC1B;AACO,SAAS,mBAAmB,EAAU;IAC3C,OAAO,oBAAoB,QAAQ,CAAC;AACtC;AACO,MAAM,SAAS,WAAW,MAAM;AAChC,MAAM,cAAc,WAAW,UAAU;AACzC,MAAM,wBAAwB,WAAW,mBAAmB;AAC5D,MAAM,kBAAkB,WAAW,cAAc;AACjD,MAAM,aAAa,WAAW,cAAc,CAAC,SAAS;AACtD,MAAM,sBAAsB,WAAW,UAAU,KAAK;AAEtD,MAAM,mBAAmB,CAAC,OAAO,EAAE,WAAW,WAAW,GAAG,OAAO,CACxE,MACA,MACC;AAGI,MAAM,uBAAuB,IAAI,OACtC,sCAAsC,CAAA,GAAA,iJAAA,CAAA,UAAY,AAAD,EAAE,WAAW,MAAM,IAAI;AAGnE,MAAM,4BAA4B,IAAI,OAC3C,sCACE,CAAA,GAAA,iJAAA,CAAA,UAAY,AAAD,EAAE,WAAW,UAAU,IAClC;AAGG,MAAM,sCAAsC,IAAI,OACrD,sCACE,CAAA,GAAA,iJAAA,CAAA,UAAY,AAAD,EAAE,WAAW,mBAAmB,IAC3C;AAGG,MAAM,sBAAsB,IAAI,OACrC,sCAAsC,CAAA,GAAA,iJAAA,CAAA,UAAY,AAAD,EAAE,kBAAkB;AAIhE,MAAM,qBAAqB,IAAI,OACpC,8BAA8B,CAAA,GAAA,iJAAA,CAAA,UAAY,AAAD,EAAE,uBAAuB;AAG7D,MAAM,wBAAwB;AAG9B,MAAM,gBAAgB;IAC3B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,UAAU;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,sBAAsB;IACjC;CACD;AAEM,MAAM,MAAM;IAAC;IAAS;IAAa;CAAgB;AAEnD,MAAM,qBAAqB;IAChC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,0BAA0B;IACrC;IACA;IACA;IACA;CACD;AAEM,MAAM,mBAA6B;IACxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,uBAAuB;IAClC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,uBAAuB;IAClC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,iCAAiC;IAC5C;IACA;CACD;AAEM,MAAM,iCAA2C,EAAE;AAEnD,MAAM,mBAAmB;IAC9B;IACA;IACA;IACA;CACD;AAEM,MAAM,qBAAqB;AAE3B,SAAS,wBAAwB,MAAc;IACpD,MAAM,UAAU,uCAAgB;IAChC,OAAO,CAAC,uCAAuC,EAAE,WAAW,kBAAkB,CAAC,QAAQ,EAAE,QAAQ,mBAAmB,EAAE,QAAQ;AAChI;AAEO,SAAS,+BAA+B,MAAc;IAC3D,MAAM,UAAU,uCAAgB;IAChC,OAAO,CAAC,uCAAuC,EAAE,WAAW,kBAAkB,CAAC,QAAQ,EAAE,QAAQ,mBAAmB,EAAE,QAAQ;AAChI;AAEO,SAAS,4BAA4B,UAAkB;IAC5D,MAAM,UAAU,uCAAgB;IAChC,OAAO,CAAC,uCAAuC,EAAE,WAAW,kBAAkB,CAAC,QAAQ,EAAE,QAAQ,kBAAkB,EAAE,YAAY;AACnI;AAEO,SAAS,uBAAuB,KAAa;IAClD,MAAM,UAAU,uCAAgB;IAChC,OAAO,CAAC,uCAAuC,EAAE,WAAW,kBAAkB,CAAC,QAAQ,EAAE,QAAQ,kBAAkB,EAAE,OAAO;AAC9H;AAEO,MAAM,sBACX;AACK,MAAM,gBACX;AAEK,MAAM,iBAAiB,KAAK,KAAK,KAAK,MAAM;AAE5C,MAAM,qBAAqB;AAC3B,MAAM,gCAAgC;AAEtC,MAAM,qBAAqB;IAAC;IAAiB;CAAe;AAE5D,MAAM,yCAAyC;IACpD;IACA;IACA;IACA;OACG;IACH;IACA;CACD;AAKM,MAAM,2BAA2B;IACtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;OACG;CACJ;AAEM,MAAM,uCAAuC;IAClD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,qBAAqB;IAAC;CAAS;AAErC,MAAM,sBAAsB;AAC5B,MAAM,0BACX;AAEK,MAAM,kBAAkB;AAExB,MAAM,iBAAiB;IAC5B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,iCAAiC,IAAI,KAAK;AAChD,MAAM,iCAAiC,IAAI,KAAK,wBAAwB,+CAA+C"}},
    {"offset": {"line": 932, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 938, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/web/lib/firebase/init.ts"],"sourcesContent":["import { getStorage } from 'firebase/storage'\nimport { getApp, getApps, initializeApp } from 'firebase/app'\nimport { FIREBASE_CONFIG } from 'common/envs/constants'\n\n// Initialize Firebase\nexport const app = getApps().length ? getApp() : initializeApp(FIREBASE_CONFIG)\nexport const storage = getStorage()\nexport const privateStorage = getStorage(\n  app,\n  'gs://' + FIREBASE_CONFIG.privateBucket\n)\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;;;;;AAGO,MAAM,MAAM,CAAA,GAAA,8HAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,8HAAA,CAAA,SAAM,AAAD,MAAM,CAAA,GAAA,8HAAA,CAAA,gBAAa,AAAD,EAAE,2HAAA,CAAA,kBAAe;AACvE,MAAM,UAAU,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD;AACzB,MAAM,iBAAiB,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EACrC,KACA,UAAU,2HAAA,CAAA,kBAAe,CAAC,aAAa"}},
    {"offset": {"line": 957, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 964, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/web/lib/firebase/users.ts"],"sourcesContent":["import { Contract } from 'common/contract'\nimport { PrivateUser, User } from 'common/user'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport {\n  GoogleAuthProvider,\n  OAuthProvider,\n  getAuth,\n  signInWithPopup,\n} from 'firebase/auth'\nimport { getIsNative } from 'web/lib/native/is-native'\nimport { nativeSignOut } from 'web/lib/native/native-messages'\nimport { app } from './init'\nimport { postMessageToNative } from 'web/lib/native/post-message'\n\ndayjs.extend(utc)\n\nexport type { User }\n\nexport const auth = getAuth(app)\n\nexport const CACHED_REFERRAL_USERNAME_KEY = 'CACHED_REFERRAL_KEY'\nconst CACHED_REFERRAL_CONTRACT_ID_KEY = 'CACHED_REFERRAL_CONTRACT_KEY'\n\nexport async function firebaseLogin() {\n  if (getIsNative()) {\n    // Post the message back to expo\n    postMessageToNative('loginClicked', {})\n    return\n  }\n  const provider = new GoogleAuthProvider()\n  return signInWithPopup(auth, provider).then(async (result) => {\n    return result\n  })\n}\n\nexport async function loginWithApple() {\n  const provider = new OAuthProvider('apple.com')\n  provider.addScope('email')\n  provider.addScope('name')\n\n  return signInWithPopup(auth, provider)\n    .then((result) => {\n      return result\n    })\n    .catch((error) => {\n      console.error(error)\n    })\n}\n\nexport async function firebaseLogout() {\n  if (getIsNative()) nativeSignOut()\n\n  await auth.signOut()\n}\n\nexport const isContractBlocked = (\n  privateUser: PrivateUser | undefined | null,\n  contract: Contract\n) => {\n  if (!privateUser) return false\n\n  const {\n    blockedContractIds,\n    blockedByUserIds,\n    blockedUserIds,\n    blockedGroupSlugs,\n  } = privateUser\n\n  return (\n    blockedContractIds?.includes(contract.id) ||\n    contract.groupSlugs?.some((slug) => blockedGroupSlugs?.includes(slug)) ||\n    blockedByUserIds?.includes(contract.creatorId) ||\n    blockedUserIds?.includes(contract.creatorId)\n  )\n}\n"],"names":[],"mappings":";;;;;;;;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAEA,mGAAA,CAAA,UAAK,CAAC,MAAM,CAAC,iJAAA,CAAA,UAAG;AAIT,MAAM,OAAO,CAAA,GAAA,gIAAA,CAAA,UAAO,AAAD,EAAE,uHAAA,CAAA,MAAG;AAExB,MAAM,+BAA+B;AAC5C,MAAM,kCAAkC;AAEjC,eAAe;IACpB,IAAI,CAAA,GAAA,6HAAA,CAAA,cAAW,AAAD,KAAK;QACjB,gCAAgC;QAChC,CAAA,GAAA,gIAAA,CAAA,sBAAmB,AAAD,EAAE,gBAAgB,CAAC;QACrC;IACF;IACA,MAAM,WAAW,IAAI,gIAAA,CAAA,qBAAkB;IACvC,OAAO,CAAA,GAAA,gIAAA,CAAA,kBAAe,AAAD,EAAE,MAAM,UAAU,IAAI,CAAC,OAAO;QACjD,OAAO;IACT;AACF;AAEO,eAAe;IACpB,MAAM,WAAW,IAAI,gIAAA,CAAA,gBAAa,CAAC;IACnC,SAAS,QAAQ,CAAC;IAClB,SAAS,QAAQ,CAAC;IAElB,OAAO,CAAA,GAAA,gIAAA,CAAA,kBAAe,AAAD,EAAE,MAAM,UAC1B,IAAI,CAAC,CAAC;QACL,OAAO;IACT,GACC,KAAK,CAAC,CAAC;QACN,QAAQ,KAAK,CAAC;IAChB;AACJ;AAEO,eAAe;IACpB,IAAI,CAAA,GAAA,6HAAA,CAAA,cAAW,AAAD,KAAK,CAAA,GAAA,mIAAA,CAAA,gBAAa,AAAD;IAE/B,MAAM,KAAK,OAAO;AACpB;AAEO,MAAM,oBAAoB,CAC/B,aACA;IAEA,IAAI,CAAC,aAAa,OAAO;IAEzB,MAAM,EACJ,kBAAkB,EAClB,gBAAgB,EAChB,cAAc,EACd,iBAAiB,EAClB,GAAG;IAEJ,OACE,oBAAoB,SAAS,SAAS,EAAE,KACxC,SAAS,UAAU,EAAE,KAAK,CAAC,OAAS,mBAAmB,SAAS,UAChE,kBAAkB,SAAS,SAAS,SAAS,KAC7C,gBAAgB,SAAS,SAAS,SAAS;AAE/C"}},
    {"offset": {"line": 1028, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1053, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/api/zod-types.ts"],"sourcesContent":["import { z } from 'zod'\nimport { type JSONContent } from '@tiptap/core'\n\nexport const contentSchema: z.ZodType<JSONContent> = z.lazy(() =>\n  z.intersection(\n    z.record(z.any()),\n    z.object({\n      type: z.string().optional(),\n      attrs: z.record(z.any()).optional(),\n      content: z.array(contentSchema).optional(),\n      marks: z\n        .array(\n          z.intersection(\n            z.record(z.any()),\n            z.object({\n              type: z.string(),\n              attrs: z.record(z.any()).optional(),\n            })\n          )\n        )\n        .optional(),\n      text: z.string().optional(),\n    })\n  )\n)\n\nexport const DashboardQuestionItemSchema = z\n  .object({\n    type: z.literal('question'),\n    slug: z.string(),\n  })\n  .strict()\n\nexport const DashboardLinkItemSchema = z\n  .object({\n    type: z.literal('link'),\n    url: z.string(),\n  })\n  .strict()\n\nexport const DashboardTextItemSchema = z\n  .object({\n    type: z.literal('text'),\n    id: z.string(),\n    content: contentSchema,\n  })\n  .strict()\n\nexport const DashboardItemSchema = z.union([\n  DashboardQuestionItemSchema,\n  DashboardLinkItemSchema,\n  DashboardTextItemSchema,\n])\n\n// Zod doesn't handle z.coerce.boolean() properly for GET requests\nexport const coerceBoolean = z\n  .union([z.boolean(), z.literal('true'), z.literal('false')])\n  .transform(\n    (value) => value === true || value === 'true'\n  ) as z.ZodType<boolean>\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;AAGO,MAAM,gBAAwC,sGAAA,CAAA,IAAC,CAAC,IAAI,CAAC,IAC1D,sGAAA,CAAA,IAAC,CAAC,YAAY,CACZ,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC,sGAAA,CAAA,IAAC,CAAC,GAAG,KACd,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACP,MAAM,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QACzB,OAAO,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC,sGAAA,CAAA,IAAC,CAAC,GAAG,IAAI,QAAQ;QACjC,SAAS,sGAAA,CAAA,IAAC,CAAC,KAAK,CAAC,eAAe,QAAQ;QACxC,OAAO,sGAAA,CAAA,IAAC,CACL,KAAK,CACJ,sGAAA,CAAA,IAAC,CAAC,YAAY,CACZ,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC,sGAAA,CAAA,IAAC,CAAC,GAAG,KACd,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACP,MAAM,sGAAA,CAAA,IAAC,CAAC,MAAM;YACd,OAAO,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC,sGAAA,CAAA,IAAC,CAAC,GAAG,IAAI,QAAQ;QACnC,KAGH,QAAQ;QACX,MAAM,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC3B;AAIG,MAAM,8BAA8B,sGAAA,CAAA,IAAC,CACzC,MAAM,CAAC;IACN,MAAM,sGAAA,CAAA,IAAC,CAAC,OAAO,CAAC;IAChB,MAAM,sGAAA,CAAA,IAAC,CAAC,MAAM;AAChB,GACC,MAAM;AAEF,MAAM,0BAA0B,sGAAA,CAAA,IAAC,CACrC,MAAM,CAAC;IACN,MAAM,sGAAA,CAAA,IAAC,CAAC,OAAO,CAAC;IAChB,KAAK,sGAAA,CAAA,IAAC,CAAC,MAAM;AACf,GACC,MAAM;AAEF,MAAM,0BAA0B,sGAAA,CAAA,IAAC,CACrC,MAAM,CAAC;IACN,MAAM,sGAAA,CAAA,IAAC,CAAC,OAAO,CAAC;IAChB,IAAI,sGAAA,CAAA,IAAC,CAAC,MAAM;IACZ,SAAS;AACX,GACC,MAAM;AAEF,MAAM,sBAAsB,sGAAA,CAAA,IAAC,CAAC,KAAK,CAAC;IACzC;IACA;IACA;CACD;AAGM,MAAM,gBAAgB,sGAAA,CAAA,IAAC,CAC3B,KAAK,CAAC;IAAC,sGAAA,CAAA,IAAC,CAAC,OAAO;IAAI,sGAAA,CAAA,IAAC,CAAC,OAAO,CAAC;IAAS,sGAAA,CAAA,IAAC,CAAC,OAAO,CAAC;CAAS,EAC1D,SAAS,CACR,CAAC,QAAU,UAAU,QAAQ,UAAU"}},
    {"offset": {"line": 1100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1107, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/tier.ts"],"sourcesContent":["import { MarketContract } from './contract'\nimport { getAnte, getTieredCost } from './economy'\n\n// Array of tiers in order\nexport const tiers = ['play', 'plus', 'premium', 'crystal'] as const\n\nexport type BinaryDigit = '0' | '1'\n\nexport type TierParamsType =\n  `${BinaryDigit}${BinaryDigit}${BinaryDigit}${BinaryDigit}${BinaryDigit}`\n\n// Derive the MarketTierType from the array\nexport type MarketTierType = (typeof tiers)[number]\n\n// For multi & mumeric markets this can only get the current tier, not back-calculate\nexport function getTierFromLiquidity(\n  contract: MarketContract,\n  liquidity: number\n): MarketTierType {\n  const { outcomeType } = contract\n\n  let numAnswers = undefined\n  if ('answers' in contract) {\n    numAnswers = contract.answers.length\n  }\n\n  const ante = getAnte(outcomeType, numAnswers)\n\n  // Iterate through the tiers from highest to lowest\n  for (let i = tiers.length - 1; i >= 0; i--) {\n    const tier = tiers[i]\n    const tierLiquidity = getTieredCost(ante, tier, outcomeType)\n\n    // Return the first tier where the liquidity is greater or equal to the tier's requirement\n    if (liquidity >= tierLiquidity) {\n      return tier as MarketTierType\n    }\n  }\n  // Default to the lowest tier if none of the conditions are met\n  return 'play'\n}\n"],"names":[],"mappings":";;;;AACA;;;;;;AAGO,MAAM,QAAQ;IAAC;IAAQ;IAAQ;IAAW;CAAU;AAWpD,SAAS,qBACd,QAAwB,EACxB,SAAiB;IAEjB,MAAM,EAAE,WAAW,EAAE,GAAG;IAExB,IAAI,aAAa;IACjB,IAAI,aAAa,UAAU;QACzB,aAAa,SAAS,OAAO,CAAC,MAAM;IACtC;IAEA,MAAM,OAAO,CAAA,GAAA,iHAAA,CAAA,UAAO,AAAD,EAAE,aAAa;IAElC,mDAAmD;IACnD,IAAK,IAAI,IAAI,MAAM,MAAM,GAAG,GAAG,KAAK,GAAG,IAAK;QAC1C,MAAM,OAAO,KAAK,CAAC,EAAE;QACrB,MAAM,gBAAgB,CAAA,GAAA,iHAAA,CAAA,gBAAa,AAAD,EAAE,MAAM,MAAM;QAEhD,0FAA0F;QAC1F,IAAI,aAAa,eAAe;YAC9B,OAAO;QACT;IACF;IACA,+DAA+D;IAC/D,OAAO;AACT"}},
    {"offset": {"line": 1142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1157, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/stonk.ts"],"sourcesContent":["import { StonkContract } from 'common/contract'\n\nexport const STONK_YES = 'BUY'\nexport const STONK_NO = 'SHORT'\nexport const STONK_INITIAL_PROB = 50\n\nconst DEFAULT_STONK_MULTIPLIER = 500\n// Doesn't seem necessary to show the max as *stocks* should be unbounded\nexport const getStonkPriceMax = () => {\n  return Math.round(getStonkPriceAtProb({} as StonkContract, 1))\n}\n\n// TODO: remove unused contract param if we ever settle on a pricing mechanism\nexport const getStonkPriceAtProb = (contract: StonkContract, prob: number) => {\n  const cappedProb = Math.min(Math.max(prob, 0.0001), 0.9999)\n  const logTerm = Math.log(cappedProb / (1 - cappedProb))\n  const maxTerm = Math.max(logTerm, cappedProb)\n  const stonkPrice = maxTerm * DEFAULT_STONK_MULTIPLIER\n  return stonkPrice\n}\n\nexport const getStonkDisplayShares = (\n  contract: StonkContract,\n  shares: number,\n  precision?: number\n) => {\n  if (precision !== undefined) {\n    return Number(\n      (Math.floor(shares) / getStonkPriceAtProb(contract, 1)).toPrecision(2)\n    )\n  }\n  return Number(\n    (Math.floor(shares) / getStonkPriceAtProb(contract, 1)).toFixed(5)\n  )\n}\n\nexport const getSharesFromStonkShares = (\n  contract: StonkContract,\n  displayShares: number,\n  totalShares: number\n) => {\n  const stonkShares = displayShares * getStonkPriceAtProb(contract, 1)\n  if (Math.abs(totalShares - stonkShares) < 1) {\n    return totalShares\n  }\n  return stonkShares\n}\n"],"names":[],"mappings":";;;;;;;;;AAEO,MAAM,YAAY;AAClB,MAAM,WAAW;AACjB,MAAM,qBAAqB;AAElC,MAAM,2BAA2B;AAE1B,MAAM,mBAAmB;IAC9B,OAAO,KAAK,KAAK,CAAC,oBAAoB,CAAC,GAAoB;AAC7D;AAGO,MAAM,sBAAsB,CAAC,UAAyB;IAC3D,MAAM,aAAa,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,MAAM,SAAS;IACpD,MAAM,UAAU,KAAK,GAAG,CAAC,aAAa,CAAC,IAAI,UAAU;IACrD,MAAM,UAAU,KAAK,GAAG,CAAC,SAAS;IAClC,MAAM,aAAa,UAAU;IAC7B,OAAO;AACT;AAEO,MAAM,wBAAwB,CACnC,UACA,QACA;IAEA,IAAI,cAAc,WAAW;QAC3B,OAAO,OACL,CAAC,KAAK,KAAK,CAAC,UAAU,oBAAoB,UAAU,EAAE,EAAE,WAAW,CAAC;IAExE;IACA,OAAO,OACL,CAAC,KAAK,KAAK,CAAC,UAAU,oBAAoB,UAAU,EAAE,EAAE,OAAO,CAAC;AAEpE;AAEO,MAAM,2BAA2B,CACtC,UACA,eACA;IAEA,MAAM,cAAc,gBAAgB,oBAAoB,UAAU;IAClE,IAAI,KAAK,GAAG,CAAC,cAAc,eAAe,GAAG;QAC3C,OAAO;IACT;IACA,OAAO;AACT"}},
    {"offset": {"line": 1193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1199, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/util/format.ts"],"sourcesContent":["import { ENV_CONFIG } from '../envs/constants'\nimport {\n  BinaryContract,\n  ContractToken,\n  CPMMMultiContract,\n  CPMMNumericContract,\n  PseudoNumericContract,\n  StonkContract,\n} from 'common/contract'\nimport { STONK_NO, STONK_YES } from 'common/stonk'\n\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  maximumFractionDigits: 0,\n  minimumFractionDigits: 0,\n})\n\nconst formatterWithFraction = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  maximumFractionDigits: 2,\n  minimumFractionDigits: 2,\n})\n\nexport const SWEEPIES_MONIKER = '𝕊'\n\nexport type InputTokenType = 'M$' | 'SPICE' | 'CASH'\n\nexport function formatWithToken(variables: {\n  amount: number\n  token: InputTokenType\n  toDecimal?: number\n  short?: boolean\n}) {\n  const { amount, token, toDecimal, short } = variables\n  if (token === 'CASH') {\n    return formatSweepies(amount, { toDecimal, short })\n  }\n  if (toDecimal) {\n    return formatMoneyWithDecimals(amount)\n  }\n  if (short) {\n    return formatMoneyShort(amount)\n  }\n  return formatMoney(amount)\n}\n\nexport function formatMoney(amount: number, token?: ContractToken) {\n  if (token === 'CASH') {\n    return formatSweepies(amount)\n  }\n  const newAmount = getMoneyNumber(amount)\n  return formatter.format(newAmount).replace('$', ENV_CONFIG.moneyMoniker)\n}\n\nexport function formatSweepies(\n  amount: number,\n  parameters?: {\n    toDecimal?: number\n    short?: boolean\n  }\n) {\n  const numberText = formatSweepiesNumber(amount, parameters)\n  const negative = numberText.startsWith('-')\n\n  return (negative ? '-' : '') + SWEEPIES_MONIKER + numberText.replace('-', '')\n}\n\nexport function formatSweepiesNumber(\n  amount: number,\n  parameters?: {\n    toDecimal?: number\n    short?: boolean\n  }\n) {\n  const { toDecimal, short } = parameters ?? {}\n  if (short) {\n    return formatLargeNumber(amount)\n  }\n  const toDecimalPlace = toDecimal ?? 2\n  // return amount.toFixed(toDecimal ?? 2)\n  return amount.toLocaleString('en-US', {\n    minimumFractionDigits: toDecimalPlace,\n    maximumFractionDigits: toDecimalPlace,\n  })\n}\n\nexport function formatSpice(amount: number) {\n  const newAmount = getMoneyNumber(amount)\n  return formatter.format(newAmount).replace('$', 'P ')\n}\n\nexport function formatMoneyNoMoniker(amount: number) {\n  const newAmount = getMoneyNumber(amount)\n  return formatter.format(newAmount).replace('$', '')\n}\n\nexport function formatMoneyShort(amount: number) {\n  const newAmount = getMoneyNumber(amount)\n  return ENV_CONFIG.moneyMoniker + formatLargeNumber(newAmount)\n}\n\nexport function formatMoneyUSD(amount: number, fraction?: boolean) {\n  if (fraction) {\n    return formatterWithFraction.format(amount)\n  }\n  const newAmount = getMoneyNumber(amount)\n  return formatter.format(newAmount)\n}\n\nexport function formatSweepsToUSD(amount: number) {\n  return formatterWithFraction.format(amount)\n}\n\nexport function formatMoneyNumber(amount: number) {\n  const newAmount = getMoneyNumber(amount)\n  return formatter.format(newAmount).replace('$', '')\n}\n\nexport function getMoneyNumber(amount: number) {\n  // Handle 499.9999999999999 case\n  const plusEpsilon = (amount > 0 ? Math.floor : Math.ceil)(\n    amount + 0.00000000001 * Math.sign(amount)\n  )\n  return Math.round(plusEpsilon) === 0 ? 0 : plusEpsilon\n}\n\nexport function getMoneyNumberToDecimal(amount: number) {\n  return Math.abs(amount - Math.round(amount)) < 0.0001\n    ? Math.round(amount).toFixed(0)\n    : amount.toFixed(1)\n}\n\nexport function formatMoneyWithDecimals(amount: number) {\n  return ENV_CONFIG.moneyMoniker + amount.toFixed(2)\n}\n\nexport function formatMoneyToDecimal(amount: number) {\n  return ENV_CONFIG.moneyMoniker + getMoneyNumberToDecimal(amount)\n}\n\nexport function formatWithCommas(amount: number) {\n  return formatter.format(Math.floor(amount)).replace('$', '')\n}\n\nexport function formatShares(amount: number, isCashContract: boolean) {\n  if (isCashContract) {\n    return amount.toLocaleString('en-US', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n  } else {\n    return formatWithCommas(amount)\n  }\n}\nexport function manaToUSD(mana: number) {\n  return (mana / 1000).toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  })\n}\n\nexport function formatPercentShort(zeroToOne: number) {\n  return getPercent(zeroToOne).toFixed(0) + '%'\n}\n\nexport function getPercent(zeroToOne: number) {\n  return Math.min(zeroToOne * 100, 99)\n}\n\nfunction getPercentDecimalPlaces(zeroToOne: number) {\n  return zeroToOne < 0.02 || zeroToOne > 0.98 ? 1 : 0\n}\n\nexport function formatPercent(zeroToOne: number) {\n  // Show 1 decimal place if <2% or >98%, giving more resolution on the tails\n  const decimalPlaces = getPercentDecimalPlaces(zeroToOne)\n  const percent = zeroToOne * 100\n  return percent.toFixed(decimalPlaces) + '%'\n}\n\nexport function formatPercentNumber(zeroToOne: number) {\n  // Show 1 decimal place if <2% or >98%, giving more resolution on the tails\n  const decimalPlaces = getPercentDecimalPlaces(zeroToOne)\n  return Number((zeroToOne * 100).toFixed(decimalPlaces))\n}\n\nconst showPrecision = (x: number, sigfigs: number) =>\n  // convert back to number for weird formatting reason\n  `${Number(x.toPrecision(sigfigs))}`\n\n// Eg 1234567.89 => 1.23M; 5678 => 5.68K\nexport function formatLargeNumber(num: number, sigfigs = 2): string {\n  const absNum = Math.abs(num)\n  if (absNum < 0.1) return showPrecision(num, 1)\n  if (absNum < 1) return showPrecision(num, sigfigs)\n\n  if (absNum < 100) return showPrecision(num, 2)\n  if (absNum < 1000) return showPrecision(num, 3)\n  if (absNum < 10000) return showPrecision(num, 4)\n\n  const suffix = ['', 'k', 'm', 'b', 't', 'q']\n  const i = Math.floor(Math.log10(absNum) / 3)\n\n  const numStr = showPrecision(num / Math.pow(10, 3 * i), sigfigs)\n  return `${numStr}${suffix[i] ?? ''}`\n}\n\nexport function shortFormatNumber(num: number): string {\n  if (num < 10 && num > -10) return showPrecision(num, 1)\n  if (num < 100 && num > -100) return showPrecision(num, 2)\n  if (num < 1000 && num > -1000) return showPrecision(num, 3)\n\n  const suffix = ['', 'k', 'm', 'b', 't', 'q']\n  const i = Math.floor(Math.log10(Math.abs(num)) / 3)\n\n  const numStr = showPrecision(num / Math.pow(10, 3 * i), 2)\n  return `${numStr}${suffix[i] ?? ''}`\n}\n\nexport function maybePluralize(\n  word: string,\n  num: number,\n  plural: string = 's'\n): string {\n  return num === 1 ? word : word + plural\n}\n\nexport function toCamelCase(words: string) {\n  const camelCase = words\n    .split(' ')\n    .map((word) => word.trim())\n    .filter((word) => word)\n    .map((word, index) =>\n      index === 0 ? word : word[0].toLocaleUpperCase() + word.substring(1)\n    )\n    .join('')\n\n  // Remove non-alpha-numeric-underscore chars.\n  const regex = /(?:^|\\s)(?:[a-z0-9_]+)/gi\n  return (camelCase.match(regex) || [])[0] ?? ''\n}\n\nexport const formatOutcomeLabel = (\n  contract:\n    | BinaryContract\n    | PseudoNumericContract\n    | StonkContract\n    | CPMMMultiContract\n    | CPMMNumericContract,\n  outcomeLabel: 'YES' | 'NO',\n  outcomePseudonym?: string\n) => {\n  if (outcomePseudonym) {\n    return outcomePseudonym\n  }\n  if (\n    contract.outcomeType === 'BINARY' ||\n    contract.mechanism === 'cpmm-multi-1'\n  ) {\n    return outcomeLabel\n  }\n  if (contract.outcomeType === 'STONK') {\n    return outcomeLabel === 'YES' ? STONK_YES : STONK_NO\n  }\n  return outcomeLabel === 'YES' ? 'HIGHER' : 'LOWER'\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1422, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1484, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/util/object.ts"],"sourcesContent":["import { isEqual, mapValues, union } from 'lodash'\n\nexport const removeUndefinedProps = <T extends object>(obj: T): T => {\n  const newObj: any = {}\n\n  for (const key of Object.keys(obj)) {\n    if ((obj as any)[key] !== undefined) newObj[key] = (obj as any)[key]\n  }\n\n  return newObj\n}\nexport const removeNullOrUndefinedProps = <T extends object>(\n  obj: T,\n  exceptions?: string[]\n): T => {\n  const newObj: any = {}\n\n  for (const key of Object.keys(obj)) {\n    if (\n      ((obj as any)[key] !== undefined && (obj as any)[key] !== null) ||\n      (exceptions ?? []).includes(key)\n    )\n      newObj[key] = (obj as any)[key]\n  }\n  return newObj\n}\n\nexport const addObjects = <T extends { [key: string]: number }>(\n  obj1: T,\n  obj2: T\n) => {\n  const keys = union(Object.keys(obj1), Object.keys(obj2))\n  const newObj = {} as any\n\n  for (const key of keys) {\n    newObj[key] = (obj1[key] ?? 0) + (obj2[key] ?? 0)\n  }\n\n  return newObj as T\n}\n\nexport const subtractObjects = <T extends { [key: string]: number }>(\n  obj1: T,\n  obj2: T\n) => {\n  const keys = union(Object.keys(obj1), Object.keys(obj2))\n  const newObj = {} as any\n\n  for (const key of keys) {\n    newObj[key] = (obj1[key] ?? 0) - (obj2[key] ?? 0)\n  }\n\n  return newObj as T\n}\n\nexport const hasChanges = <T extends object>(obj: T, partial: Partial<T>) => {\n  const currValues = mapValues(partial, (_, key: keyof T) => obj[key])\n  return !isEqual(currValues, partial)\n}\n\nexport const hasSignificantDeepChanges = <T extends object>(\n  obj: T,\n  partial: Partial<T>,\n  epsilonForNumbers: number\n): boolean => {\n  const compareValues = (currValue: any, partialValue: any): boolean => {\n    if (typeof currValue === 'number' && typeof partialValue === 'number') {\n      return Math.abs(currValue - partialValue) > epsilonForNumbers\n    }\n    if (typeof currValue === 'object' && typeof partialValue === 'object') {\n      return hasSignificantDeepChanges(\n        currValue,\n        partialValue,\n        epsilonForNumbers\n      )\n    }\n    return !isEqual(currValue, partialValue)\n  }\n\n  for (const key in partial) {\n    if (Object.prototype.hasOwnProperty.call(partial, key)) {\n      if (compareValues(obj[key], partial[key])) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AAAA;;;;AAEO,MAAM,uBAAuB,CAAmB;IACrD,MAAM,SAAc,CAAC;IAErB,KAAK,MAAM,OAAO,OAAO,IAAI,CAAC,KAAM;QAClC,IAAI,AAAC,GAAW,CAAC,IAAI,KAAK,WAAW,MAAM,CAAC,IAAI,GAAG,AAAC,GAAW,CAAC,IAAI;IACtE;IAEA,OAAO;AACT;AACO,MAAM,6BAA6B,CACxC,KACA;IAEA,MAAM,SAAc,CAAC;IAErB,KAAK,MAAM,OAAO,OAAO,IAAI,CAAC,KAAM;QAClC,IACE,AAAC,AAAC,GAAW,CAAC,IAAI,KAAK,aAAa,AAAC,GAAW,CAAC,IAAI,KAAK,QAC1D,CAAC,cAAc,EAAE,EAAE,QAAQ,CAAC,MAE5B,MAAM,CAAC,IAAI,GAAG,AAAC,GAAW,CAAC,IAAI;IACnC;IACA,OAAO;AACT;AAEO,MAAM,aAAa,CACxB,MACA;IAEA,MAAM,OAAO,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,OAAO,IAAI,CAAC,OAAO,OAAO,IAAI,CAAC;IAClD,MAAM,SAAS,CAAC;IAEhB,KAAK,MAAM,OAAO,KAAM;QACtB,MAAM,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;IAClD;IAEA,OAAO;AACT;AAEO,MAAM,kBAAkB,CAC7B,MACA;IAEA,MAAM,OAAO,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,OAAO,IAAI,CAAC,OAAO,OAAO,IAAI,CAAC;IAClD,MAAM,SAAS,CAAC;IAEhB,KAAK,MAAM,OAAO,KAAM;QACtB,MAAM,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;IAClD;IAEA,OAAO;AACT;AAEO,MAAM,aAAa,CAAmB,KAAQ;IACnD,MAAM,aAAa,CAAA,GAAA,2IAAA,CAAA,UAAS,AAAD,EAAE,SAAS,CAAC,GAAG,MAAiB,GAAG,CAAC,IAAI;IACnE,OAAO,CAAC,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,YAAY;AAC9B;AAEO,MAAM,4BAA4B,CACvC,KACA,SACA;IAEA,MAAM,gBAAgB,CAAC,WAAgB;QACrC,IAAI,OAAO,cAAc,YAAY,OAAO,iBAAiB,UAAU;YACrE,OAAO,KAAK,GAAG,CAAC,YAAY,gBAAgB;QAC9C;QACA,IAAI,OAAO,cAAc,YAAY,OAAO,iBAAiB,UAAU;YACrE,OAAO,0BACL,WACA,cACA;QAEJ;QACA,OAAO,CAAC,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,WAAW;IAC7B;IAEA,IAAK,MAAM,OAAO,QAAS;QACzB,IAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,MAAM;YACtD,IAAI,cAAc,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,GAAG;gBACzC,OAAO;YACT;QACF;IACF;IAEA,OAAO;AACT"}},
    {"offset": {"line": 1551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1557, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/fees.ts"],"sourcesContent":["import { addObjects } from 'common/util/object'\n\nexport const FEE_START_TIME = 1713292320000\n\nconst TAKER_FEE_CONSTANT = 0\nexport const getTakerFee = (shares: number, prob: number) => {\n  return TAKER_FEE_CONSTANT * prob * (1 - prob) * shares\n}\n\nexport const getFeesSplit = (totalFees: number) => {\n  return {\n    creatorFee: 0,\n    platformFee: totalFees,\n    liquidityFee: 0,\n  }\n}\n\nexport const FLAT_TRADE_FEE = 0\nexport const FLAT_COMMENT_FEE = 1\n\nexport const DPM_PLATFORM_FEE = 0.0\nexport const DPM_CREATOR_FEE = 0.0\nexport const DPM_FEES = DPM_PLATFORM_FEE + DPM_CREATOR_FEE\n\nexport type Fees = {\n  creatorFee: number\n  platformFee: number\n  liquidityFee: number\n}\n\nexport const noFees: Fees = {\n  creatorFee: 0,\n  platformFee: 0,\n  liquidityFee: 0,\n}\n\nexport const getFeeTotal = (fees: Fees) => {\n  return fees.creatorFee + fees.platformFee + fees.liquidityFee\n}\n\nexport const sumAllFees = (fees: Fees[]) => {\n  let totalFees = noFees\n  fees.forEach((totalFee) => (totalFees = addObjects(totalFees, totalFee)))\n  return getFeeTotal(totalFees)\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;AAEO,MAAM,iBAAiB;AAE9B,MAAM,qBAAqB;AACpB,MAAM,cAAc,CAAC,QAAgB;IAC1C,OAAO,qBAAqB,OAAO,CAAC,IAAI,IAAI,IAAI;AAClD;AAEO,MAAM,eAAe,CAAC;IAC3B,OAAO;QACL,YAAY;QACZ,aAAa;QACb,cAAc;IAChB;AACF;AAEO,MAAM,iBAAiB;AACvB,MAAM,mBAAmB;AAEzB,MAAM,mBAAmB;AACzB,MAAM,kBAAkB;AACxB,MAAM,WAAW,mBAAmB;AAQpC,MAAM,SAAe;IAC1B,YAAY;IACZ,aAAa;IACb,cAAc;AAChB;AAEO,MAAM,cAAc,CAAC;IAC1B,OAAO,KAAK,UAAU,GAAG,KAAK,WAAW,GAAG,KAAK,YAAY;AAC/D;AAEO,MAAM,aAAa,CAAC;IACzB,IAAI,YAAY;IAChB,KAAK,OAAO,CAAC,CAAC,WAAc,YAAY,CAAA,GAAA,wHAAA,CAAA,aAAU,AAAD,EAAE,WAAW;IAC9D,OAAO,YAAY;AACrB"}},
    {"offset": {"line": 1602, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1616, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/util/math.ts"],"sourcesContent":["import { sortBy, sum } from 'lodash'\n\nexport const logInterpolation = (min: number, max: number, value: number) => {\n  if (value <= min) return 0\n  if (value >= max) return 1\n\n  return Math.log(value - min + 1) / Math.log(max - min + 1)\n}\n\nexport const logit = (x: number) => Math.log(x / (1 - x))\n\nexport function median(xs: number[]) {\n  if (xs.length === 0) return NaN\n\n  const sorted = sortBy(xs, (x) => x)\n  const mid = Math.floor(sorted.length / 2)\n  if (sorted.length % 2 === 0) {\n    return (sorted[mid - 1] + sorted[mid]) / 2\n  }\n  return sorted[mid]\n}\n\nexport function average(xs: number[]) {\n  return xs.length === 0 ? 0 : sum(xs) / xs.length\n}\n\nexport function sumOfSquaredError(xs: number[]) {\n  const mean = average(xs)\n  let total = 0\n  for (const x of xs) {\n    const error = x - mean\n    total += error * error\n  }\n  return total\n}\n\nexport const EPSILON = 0.00000001\n\nexport function floatingEqual(a: number, b: number, epsilon = EPSILON) {\n  return Math.abs(a - b) < epsilon\n}\nexport function floatingGreater(a: number, b: number, epsilon = EPSILON) {\n  return a - epsilon > b\n}\n\nexport function floatingGreaterEqual(a: number, b: number, epsilon = EPSILON) {\n  return a + epsilon >= b\n}\n\nexport function floatingLesserEqual(a: number, b: number, epsilon = EPSILON) {\n  return a - epsilon <= b\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;AAAA;;;AAEO,MAAM,mBAAmB,CAAC,KAAa,KAAa;IACzD,IAAI,SAAS,KAAK,OAAO;IACzB,IAAI,SAAS,KAAK,OAAO;IAEzB,OAAO,KAAK,GAAG,CAAC,QAAQ,MAAM,KAAK,KAAK,GAAG,CAAC,MAAM,MAAM;AAC1D;AAEO,MAAM,QAAQ,CAAC,IAAc,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;AAEhD,SAAS,OAAO,EAAY;IACjC,IAAI,GAAG,MAAM,KAAK,GAAG,OAAO;IAE5B,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,UAAM,AAAD,EAAE,IAAI,CAAC,IAAM;IACjC,MAAM,MAAM,KAAK,KAAK,CAAC,OAAO,MAAM,GAAG;IACvC,IAAI,OAAO,MAAM,GAAG,MAAM,GAAG;QAC3B,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,IAAI;IAC3C;IACA,OAAO,MAAM,CAAC,IAAI;AACpB;AAEO,SAAS,QAAQ,EAAY;IAClC,OAAO,GAAG,MAAM,KAAK,IAAI,IAAI,CAAA,GAAA,+HAAA,CAAA,UAAG,AAAD,EAAE,MAAM,GAAG,MAAM;AAClD;AAEO,SAAS,kBAAkB,EAAY;IAC5C,MAAM,OAAO,QAAQ;IACrB,IAAI,QAAQ;IACZ,KAAK,MAAM,KAAK,GAAI;QAClB,MAAM,QAAQ,IAAI;QAClB,SAAS,QAAQ;IACnB;IACA,OAAO;AACT;AAEO,MAAM,UAAU;AAEhB,SAAS,cAAc,CAAS,EAAE,CAAS,EAAE,UAAU,OAAO;IACnE,OAAO,KAAK,GAAG,CAAC,IAAI,KAAK;AAC3B;AACO,SAAS,gBAAgB,CAAS,EAAE,CAAS,EAAE,UAAU,OAAO;IACrE,OAAO,IAAI,UAAU;AACvB;AAEO,SAAS,qBAAqB,CAAS,EAAE,CAAS,EAAE,UAAU,OAAO;IAC1E,OAAO,IAAI,WAAW;AACxB;AAEO,SAAS,oBAAoB,CAAS,EAAE,CAAS,EAAE,UAAU,OAAO;IACzE,OAAO,IAAI,WAAW;AACxB"}},
    {"offset": {"line": 1672, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1678, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/api/utils.ts"],"sourcesContent":["import { ENV_CONFIG } from 'common/envs/constants'\nimport { API, APIPath } from './schema'\n\ntype ErrorCode =\n  | 400 // your input is bad (like zod is mad)\n  | 401 // you aren't logged in / your account doesn't exist\n  | 403 // you aren't allowed to do it\n  | 404 // we can't find it\n  | 429 // you're too much for us\n  | 500 // we fucked up\n  | 503 // we're too busy to handle your request\n\nexport class APIError extends Error {\n  code: ErrorCode\n  details?: unknown\n  constructor(code: ErrorCode, message: string, details?: unknown) {\n    super(message)\n    this.code = code\n    this.name = 'APIError'\n    this.details = details\n  }\n}\n\nexport function getCloudRunServiceUrl(name: string) {\n  const { cloudRunId, cloudRunRegion } = ENV_CONFIG\n  return `https://${name}-${cloudRunId}-${cloudRunRegion}.a.run.app`\n}\n\nexport function pathWithPrefix(path: APIPath) {\n  return API[path].visibility === 'public' ? `v0/${path}` : path\n}\n\nexport function getWebsocketUrl() {\n  if (process.env.NEXT_PUBLIC_API_URL) {\n    return `ws://${process.env.NEXT_PUBLIC_API_URL}/ws`\n  } else {\n    const { apiEndpoint } = ENV_CONFIG\n    return `wss://${apiEndpoint}/ws`\n  }\n}\n\n// TODO: strictly type\nexport function getApiUrl(path: string) {\n  if (path in API) {\n    path = pathWithPrefix(path as APIPath)\n  }\n\n  if (process.env.NEXT_PUBLIC_API_URL) {\n    return `http://${process.env.NEXT_PUBLIC_API_URL}/${path}`\n  } else {\n    const { apiEndpoint } = ENV_CONFIG\n    return `https://${apiEndpoint}/${path}`\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;;;;;;;AAWO,MAAM,iBAAiB;IAC5B,KAAe;IACf,QAAiB;IACjB,YAAY,IAAe,EAAE,OAAe,EAAE,OAAiB,CAAE;QAC/D,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,OAAO,GAAG;IACjB;AACF;AAEO,SAAS,sBAAsB,IAAY;IAChD,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE,GAAG,2HAAA,CAAA,aAAU;IACjD,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE,WAAW,CAAC,EAAE,eAAe,UAAU,CAAC;AACpE;AAEO,SAAS,eAAe,IAAa;IAC1C,OAAO,uHAAA,CAAA,MAAG,CAAC,KAAK,CAAC,UAAU,KAAK,WAAW,CAAC,GAAG,EAAE,MAAM,GAAG;AAC5D;AAEO,SAAS;IACd,IAAI,QAAQ,GAAG,CAAC,mBAAmB,EAAE;QACnC,OAAO,CAAC,KAAK,EAAE,QAAQ,GAAG,CAAC,mBAAmB,CAAC,GAAG,CAAC;IACrD,OAAO;QACL,MAAM,EAAE,WAAW,EAAE,GAAG,2HAAA,CAAA,aAAU;QAClC,OAAO,CAAC,MAAM,EAAE,YAAY,GAAG,CAAC;IAClC;AACF;AAGO,SAAS,UAAU,IAAY;IACpC,IAAI,QAAQ,uHAAA,CAAA,MAAG,EAAE;QACf,OAAO,eAAe;IACxB;IAEA,IAAI,QAAQ,GAAG,CAAC,mBAAmB,EAAE;QACnC,OAAO,CAAC,OAAO,EAAE,QAAQ,GAAG,CAAC,mBAAmB,CAAC,CAAC,EAAE,MAAM;IAC5D,OAAO;QACL,MAAM,EAAE,WAAW,EAAE,GAAG,2HAAA,CAAA,aAAU;QAClC,OAAO,CAAC,QAAQ,EAAE,YAAY,CAAC,EAAE,MAAM;IACzC;AACF"}},
    {"offset": {"line": 1729, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1744, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/util/algos.ts"],"sourcesContent":["export function binarySearch(\n  min: number,\n  max: number,\n  comparator: (x: number) => number,\n  maxIterations = 50\n) {\n  let mid = 0\n  let i = 0\n  while (true) {\n    mid = min + (max - min) / 2\n\n    // Break once we've reached max precision.\n    if (mid === min || mid === max) break\n\n    const comparison = comparator(mid)\n    if (comparison === 0) break\n    else if (comparison > 0) {\n      max = mid\n    } else {\n      min = mid\n    }\n\n    i++\n    if (i >= maxIterations) {\n      break\n    }\n    if (i > 100000) {\n      throw new Error(\n        'Binary search exceeded max iterations' +\n          JSON.stringify({ min, max, mid, i }, null, 2)\n      )\n    }\n  }\n  return mid\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,aACd,GAAW,EACX,GAAW,EACX,UAAiC,EACjC,gBAAgB,EAAE;IAElB,IAAI,MAAM;IACV,IAAI,IAAI;IACR,MAAO,KAAM;QACX,MAAM,MAAM,CAAC,MAAM,GAAG,IAAI;QAE1B,0CAA0C;QAC1C,IAAI,QAAQ,OAAO,QAAQ,KAAK;QAEhC,MAAM,aAAa,WAAW;QAC9B,IAAI,eAAe,GAAG;aACjB,IAAI,aAAa,GAAG;YACvB,MAAM;QACR,OAAO;YACL,MAAM;QACR;QAEA;QACA,IAAI,KAAK,eAAe;YACtB;QACF;QACA,IAAI,IAAI,QAAQ;YACd,MAAM,IAAI,MACR,0CACE,KAAK,SAAS,CAAC;gBAAE;gBAAK;gBAAK;gBAAK;YAAE,GAAG,MAAM;QAEjD;IACF;IACA,OAAO;AACT"}},
    {"offset": {"line": 1776, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1782, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/calculate-cpmm-arbitrage.ts"],"sourcesContent":["import { Dictionary, first, groupBy, mapValues, sum, sumBy } from 'lodash'\nimport { Answer } from './answer'\nimport { Bet, LimitBet, maker } from './bet'\nimport {\n  calculateAmountToBuySharesFixedP,\n  getCpmmProbability,\n} from './calculate-cpmm'\nimport { binarySearch } from './util/algos'\nimport { computeFills } from './new-bet'\nimport { floatingEqual } from './util/math'\nimport { Fees, getFeesSplit, getTakerFee, noFees, sumAllFees } from './fees'\nimport { addObjects } from './util/object'\nimport { MAX_CPMM_PROB, MIN_CPMM_PROB } from 'common/contract'\n\nconst DEBUG = false\nexport type ArbitrageBetArray = ReturnType<typeof combineBetsOnSameAnswers>\nconst noFillsReturn = (\n  outcome: string,\n  answer: Answer,\n  collectedFees: Fees\n) => ({\n  newBetResult: {\n    outcome,\n    answer,\n    takers: [],\n    makers: [] as maker[],\n    ordersToCancel: [] as LimitBet[],\n    cpmmState: {\n      pool: { YES: answer.poolYes, NO: answer.poolNo },\n      p: 0.5,\n      collectedFees,\n    },\n    totalFees: { creatorFee: 0, liquidityFee: 0, platformFee: 0 },\n  },\n  otherBetResults: [] as ArbitrageBetArray,\n})\nexport function calculateCpmmMultiArbitrageBet(\n  answers: Answer[],\n  answerToBuy: Answer,\n  outcome: 'YES' | 'NO',\n  betAmount: number,\n  initialLimitProb: number | undefined,\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  collectedFees: Fees\n) {\n  const limitProb =\n    initialLimitProb !== undefined\n      ? initialLimitProb\n      : outcome === 'YES'\n      ? MAX_CPMM_PROB\n      : MIN_CPMM_PROB\n  if (\n    (answerToBuy.prob < MIN_CPMM_PROB && outcome === 'NO') ||\n    (answerToBuy.prob > MAX_CPMM_PROB && outcome === 'YES') ||\n    // Fixes limit order fills at current price when limitProb is set to a diff price and user has shares to redeem\n    (answerToBuy.prob > limitProb && outcome === 'YES') ||\n    (answerToBuy.prob < limitProb && outcome === 'NO')\n  ) {\n    return noFillsReturn(outcome, answerToBuy, collectedFees)\n  }\n  const result =\n    outcome === 'YES'\n      ? calculateCpmmMultiArbitrageBetYes(\n          answers,\n          answerToBuy,\n          betAmount,\n          limitProb,\n          unfilledBets,\n          balanceByUserId,\n          collectedFees\n        )\n      : calculateCpmmMultiArbitrageBetNo(\n          answers,\n          answerToBuy,\n          betAmount,\n          limitProb,\n          unfilledBets,\n          balanceByUserId,\n          collectedFees\n        )\n  if (floatingEqual(sumBy(result.newBetResult.takers, 'amount'), 0)) {\n    // No trades matched.\n    const { outcome, answer } = result.newBetResult\n    return noFillsReturn(outcome, answer, collectedFees)\n  }\n  return result\n}\n\nexport function calculateCpmmMultiArbitrageYesBets(\n  answers: Answer[],\n  answersToBuy: Answer[],\n  betAmount: number,\n  limitProb: number | undefined,\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  collectedFees: Fees\n) {\n  const result = calculateCpmmMultiArbitrageBetsYes(\n    answers,\n    answersToBuy,\n    betAmount,\n    limitProb,\n    unfilledBets,\n    balanceByUserId,\n    collectedFees\n  )\n  if (\n    floatingEqual(\n      sumBy(\n        result.newBetResults.map((r) => r.takers),\n        'amount'\n      ),\n      0\n    )\n  ) {\n    // No trades matched.\n    result.newBetResults.map((r) => {\n      return {\n        newBetResult: {\n          outcome: r.outcome,\n          answer: r.answer,\n          takers: [],\n          makers: [],\n          ordersToCancel: [],\n          cpmmState: {\n            pool: { YES: r.answer.poolYes, NO: r.answer.poolNo },\n            p: 0.5,\n            collectedFees,\n          },\n          totalFees: noFees,\n        },\n        otherBetResults: [],\n      }\n    })\n  }\n  return result\n}\n\nexport type PreliminaryBetResults = ReturnType<typeof computeFills> & {\n  answer: Answer\n}\nfunction calculateCpmmMultiArbitrageBetsYes(\n  initialAnswers: Answer[],\n  initialAnswersToBuy: Answer[],\n  initialBetAmount: number,\n  limitProb: number | undefined,\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  collectedFees: Fees\n) {\n  const unfilledBetsByAnswer = groupBy(unfilledBets, (bet) => bet.answerId)\n  const noBetResults: PreliminaryBetResults[] = []\n  const yesBetResults: PreliminaryBetResults[] = []\n\n  let updatedAnswers = initialAnswers\n  let amountToBet = initialBetAmount\n  while (amountToBet > 0.01) {\n    const answersToBuy = updatedAnswers.filter((a) =>\n      initialAnswersToBuy.map((an) => an.id).includes(a.id)\n    )\n    // buy equal number of shares in each answer\n    const yesSharePriceSum = sumBy(answersToBuy, 'prob')\n    const maxYesShares = amountToBet / yesSharePriceSum\n    let yesAmounts: number[] = []\n    binarySearch(0, maxYesShares, (yesShares) => {\n      yesAmounts = answersToBuy.map(({ id, poolYes, poolNo }) =>\n        calculateAmountToBuySharesFixedP(\n          { pool: { YES: poolYes, NO: poolNo }, p: 0.5, collectedFees },\n          yesShares,\n          'YES',\n          unfilledBetsByAnswer[id] ?? [],\n          balanceByUserId\n        )\n      )\n\n      const totalYesAmount = sum(yesAmounts)\n      return totalYesAmount - amountToBet\n    })\n\n    const { noBuyResults, yesBets, newUpdatedAnswers } =\n      getBetResultsAndUpdatedAnswers(\n        answersToBuy,\n        yesAmounts,\n        updatedAnswers,\n        limitProb,\n        unfilledBets,\n        balanceByUserId,\n        collectedFees\n      )\n    updatedAnswers = newUpdatedAnswers\n\n    amountToBet = noBuyResults.extraMana\n    noBetResults.push(...noBuyResults.noBetResults)\n    yesBetResults.push(...yesBets)\n  }\n\n  const noBetResultsOnBoughtAnswer = combineBetsOnSameAnswers(\n    noBetResults,\n    'NO',\n    updatedAnswers.filter((r) =>\n      initialAnswersToBuy.map((a) => a.id).includes(r.id)\n    ),\n    collectedFees\n  )\n  const extraFeesPerBoughtAnswer = Object.fromEntries(\n    noBetResultsOnBoughtAnswer.map((r) => [r.answer.id, r.totalFees])\n  )\n\n  const newBetResults = combineBetsOnSameAnswers(\n    yesBetResults,\n    'YES',\n    updatedAnswers.filter((a) =>\n      initialAnswersToBuy.map((an) => an.id).includes(a.id)\n    ),\n    collectedFees,\n    true,\n    extraFeesPerBoughtAnswer\n  )\n  // TODO: after adding limit orders, we need to keep track of the possible matchedBetIds in the no redemption bets we're throwing away\n  const otherBetResults = combineBetsOnSameAnswers(\n    noBetResults,\n    'NO',\n    updatedAnswers.filter(\n      (r) => !initialAnswersToBuy.map((a) => a.id).includes(r.id)\n    ),\n    collectedFees\n  )\n\n  return { newBetResults, otherBetResults, updatedAnswers }\n}\n\nexport const getBetResultsAndUpdatedAnswers = (\n  answersToBuy: Answer[],\n  yesAmounts: number[],\n  updatedAnswers: Answer[],\n  limitProb: number | undefined,\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  collectedFees: Fees,\n  answerIdsWithFees?: string[]\n) => {\n  const unfilledBetsByAnswer = groupBy(unfilledBets, (bet) => bet.answerId)\n  const yesBetResultsAndUpdatedAnswers = answersToBuy.map((answerToBuy, i) => {\n    const pool = { YES: answerToBuy.poolYes, NO: answerToBuy.poolNo }\n    const yesBetResult = {\n      ...computeFills(\n        { pool, p: 0.5, collectedFees },\n        'YES',\n        yesAmounts[i],\n        limitProb,\n        unfilledBetsByAnswer[answerToBuy.id] ?? [],\n        balanceByUserId,\n        undefined,\n        answerIdsWithFees && !answerIdsWithFees?.includes(answerToBuy.id)\n      ),\n      answer: answerToBuy,\n    }\n\n    const { cpmmState } = yesBetResult\n    const { pool: newPool, p } = cpmmState\n    const { YES: poolYes, NO: poolNo } = newPool\n    const prob = getCpmmProbability(newPool, p)\n    const newAnswerState = {\n      ...answerToBuy,\n      poolYes,\n      poolNo,\n      prob,\n    }\n    return { yesBetResult, newAnswerState }\n  })\n  const yesBets = yesBetResultsAndUpdatedAnswers.map((r) => r.yesBetResult)\n  const newAnswerStates = yesBetResultsAndUpdatedAnswers.map(\n    (r) => r.newAnswerState\n  )\n  const noBuyResults = buyNoSharesUntilAnswersSumToOne(\n    updatedAnswers.map(\n      (answer) =>\n        newAnswerStates.find(\n          (newAnswerState) => newAnswerState.id === answer.id\n        ) ?? answer\n    ),\n    unfilledBets,\n    balanceByUserId,\n    collectedFees,\n    answerIdsWithFees\n  )\n  // Update new answer states from bets placed on all answers\n  const newUpdatedAnswers = noBuyResults.noBetResults.map((noBetResult) => {\n    const { cpmmState } = noBetResult\n    const { pool: newPool, p } = cpmmState\n    const { YES: poolYes, NO: poolNo } = newPool\n    const prob = getCpmmProbability(newPool, p)\n    return {\n      ...noBetResult.answer,\n      poolYes,\n      poolNo,\n      prob,\n    }\n  })\n\n  return {\n    newUpdatedAnswers,\n    yesBets,\n    noBuyResults,\n  }\n}\n\nexport const combineBetsOnSameAnswers = (\n  bets: PreliminaryBetResults[],\n  outcome: 'YES' | 'NO',\n  updatedAnswers: Answer[],\n  collectedFees: Fees,\n  // The fills after the first are free bc they're due to arbitrage.\n  fillsFollowingFirstAreFree?: boolean,\n  extraFeesPerAnswer?: { [answerId: string]: Fees }\n) => {\n  return updatedAnswers.map((answer) => {\n    const betsForAnswer = bets.filter((bet) => bet.answer.id === answer.id)\n    const { poolYes, poolNo } = answer\n    const bet = betsForAnswer[0]\n    const extraFees = extraFeesPerAnswer?.[answer.id] ?? noFees\n    const totalFees = betsForAnswer.reduce(\n      (acc, b) => addObjects(acc, b.totalFees),\n      extraFees\n    )\n    return {\n      ...bet,\n      takers: fillsFollowingFirstAreFree\n        ? [\n            {\n              ...bet.takers[0],\n              shares: sumBy(\n                betsForAnswer.flatMap((r) => r.takers),\n                'shares'\n              ),\n            },\n          ]\n        : betsForAnswer.flatMap((r) => r.takers),\n      makers: betsForAnswer.flatMap((r) => r.makers),\n      ordersToCancel: betsForAnswer.flatMap((r) => r.ordersToCancel),\n      outcome,\n      cpmmState: { p: 0.5, pool: { YES: poolYes, NO: poolNo }, collectedFees },\n      answer,\n      totalFees,\n    }\n  })\n}\n\nfunction calculateCpmmMultiArbitrageBetYes(\n  answers: Answer[],\n  answerToBuy: Answer,\n  betAmount: number,\n  limitProb: number | undefined,\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  collectedFees: Fees\n) {\n  const startTime = Date.now()\n  const unfilledBetsByAnswer = groupBy(unfilledBets, (bet) => bet.answerId)\n\n  const noSharePriceSum = sumBy(\n    answers.filter((a) => a.id !== answerToBuy.id).map((a) => 1 - a.prob)\n  )\n  // If you spend all of amount on NO shares at current price. Subtract out from the price the redemption mana.\n  const maxNoShares = betAmount / (noSharePriceSum - answers.length + 2)\n\n  const noShares = binarySearch(0, maxNoShares, (noShares) => {\n    const result = buyNoSharesInOtherAnswersThenYesInAnswer(\n      answers,\n      answerToBuy,\n      unfilledBetsByAnswer,\n      balanceByUserId,\n      betAmount,\n      limitProb,\n      noShares,\n      collectedFees\n    )\n    if (!result) {\n      return 1\n    }\n    const newPools = [\n      ...result.noBetResults.map((r) => r.cpmmState.pool),\n      result.yesBetResult.cpmmState.pool,\n    ]\n    const diff = 1 - sumBy(newPools, (pool) => getCpmmProbability(pool, 0.5))\n    return diff\n  })\n\n  const result = buyNoSharesInOtherAnswersThenYesInAnswer(\n    answers,\n    answerToBuy,\n    unfilledBetsByAnswer,\n    balanceByUserId,\n    betAmount,\n    limitProb,\n    noShares,\n    collectedFees\n  )\n  if (!result) {\n    console.log('no result', result)\n    throw new Error('Invariant failed in calculateCpmmMultiArbitrageBetYes')\n  }\n\n  const { noBetResults, yesBetResult } = result\n\n  if (DEBUG) {\n    const endTime = Date.now()\n\n    const newPools = [\n      ...noBetResults.map((r) => r.cpmmState.pool),\n      yesBetResult.cpmmState.pool,\n    ]\n\n    console.log('time', endTime - startTime, 'ms')\n\n    console.log(\n      'bet amount',\n      betAmount,\n      'no bet amounts',\n      noBetResults.map((r) => r.takers.map((t) => t.amount)),\n      'yes bet amount',\n      sumBy(yesBetResult.takers, 'amount')\n    )\n\n    console.log(\n      'getBinaryBuyYes before',\n      answers.map((a) => a.prob),\n      answers.map((a) => `${a.poolYes}, ${a.poolNo}`),\n      'answerToBuy',\n      answerToBuy\n    )\n    console.log(\n      'getBinaryBuyYes after',\n      newPools,\n      newPools.map((pool) => getCpmmProbability(pool, 0.5)),\n      'prob total',\n      sumBy(newPools, (pool) => getCpmmProbability(pool, 0.5)),\n      'pool shares',\n      newPools.map((pool) => `${pool.YES}, ${pool.NO}`),\n      'no shares',\n      noShares,\n      'yes shares',\n      sumBy(yesBetResult.takers, 'shares')\n    )\n  }\n\n  const newBetResult = { ...yesBetResult, outcome: 'YES' }\n  const otherBetResults = noBetResults.map((r) => ({ ...r, outcome: 'NO' }))\n  return { newBetResult, otherBetResults }\n}\n\nconst buyNoSharesInOtherAnswersThenYesInAnswer = (\n  answers: Answer[],\n  answerToBuy: Answer,\n  unfilledBetsByAnswer: Dictionary<LimitBet[]>,\n  balanceByUserId: { [userId: string]: number },\n  betAmount: number,\n  limitProb: number | undefined,\n  noShares: number,\n  collectedFees: Fees\n) => {\n  const otherAnswers = answers.filter((a) => a.id !== answerToBuy.id)\n  const noAmounts = otherAnswers.map(({ id, poolYes, poolNo }) =>\n    calculateAmountToBuySharesFixedP(\n      { pool: { YES: poolYes, NO: poolNo }, p: 0.5, collectedFees },\n      noShares,\n      'NO',\n      unfilledBetsByAnswer[id] ?? [],\n      balanceByUserId,\n      true\n    )\n  )\n  const totalNoAmount = sum(noAmounts)\n\n  const noBetResults = noAmounts.map((noAmount, i) => {\n    const answer = otherAnswers[i]\n    const pool = { YES: answer.poolYes, NO: answer.poolNo }\n    return {\n      ...computeFills(\n        { pool, p: 0.5, collectedFees },\n        'NO',\n        noAmount,\n        undefined,\n        unfilledBetsByAnswer[answer.id] ?? [],\n        balanceByUserId,\n        undefined,\n        true\n      ),\n      answer,\n    }\n  })\n\n  // Identity: No shares in all other answers is equal to noShares * (n-2) mana + yes shares in answerToBuy (quantity: noShares)\n  const redeemedAmount = noShares * (answers.length - 2)\n  const netNoAmount = totalNoAmount - redeemedAmount\n  let yesBetAmount = betAmount - netNoAmount\n  if (floatingArbitrageEqual(yesBetAmount, 0)) {\n    yesBetAmount = 0\n  }\n  if (yesBetAmount < 0) {\n    return undefined\n  }\n\n  for (const noBetResult of noBetResults) {\n    const redemptionFill = {\n      matchedBetId: null,\n      amount: -sumBy(noBetResult.takers, 'amount'),\n      shares: -sumBy(noBetResult.takers, 'shares'),\n      timestamp: Date.now(),\n      fees: noFees,\n    }\n    noBetResult.takers.push(redemptionFill)\n  }\n\n  const pool = { YES: answerToBuy.poolYes, NO: answerToBuy.poolNo }\n  const yesBetResult = {\n    ...computeFills(\n      { pool, p: 0.5, collectedFees },\n      'YES',\n      yesBetAmount,\n      limitProb,\n      unfilledBetsByAnswer[answerToBuy.id] ?? [],\n      balanceByUserId\n    ),\n    answer: answerToBuy,\n  }\n\n  // Redeem NO shares in other answers to YES shares in this answer.\n  const redemptionFill = {\n    matchedBetId: null,\n    amount: netNoAmount,\n    shares: noShares,\n    timestamp: Date.now(),\n    fees: noFees,\n  }\n  yesBetResult.takers.push(redemptionFill)\n\n  return { noBetResults, yesBetResult }\n}\n\nfunction calculateCpmmMultiArbitrageBetNo(\n  answers: Answer[],\n  answerToBuy: Answer,\n  betAmount: number,\n  limitProb: number | undefined,\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  collectedFees: Fees\n) {\n  const startTime = Date.now()\n  const unfilledBetsByAnswer = groupBy(unfilledBets, (bet) => bet.answerId)\n\n  const yesSharePriceSum = sumBy(\n    answers.filter((a) => a.id !== answerToBuy.id),\n    'prob'\n  )\n  const maxYesShares = betAmount / yesSharePriceSum\n\n  const yesShares = binarySearch(0, maxYesShares, (yesShares) => {\n    const result = buyYesSharesInOtherAnswersThenNoInAnswer(\n      answers,\n      answerToBuy,\n      unfilledBetsByAnswer,\n      balanceByUserId,\n      betAmount,\n      limitProb,\n      yesShares,\n      collectedFees\n    )\n    if (!result) return 1\n    const { yesBetResults, noBetResult } = result\n    const newPools = [\n      ...yesBetResults.map((r) => r.cpmmState.pool),\n      noBetResult.cpmmState.pool,\n    ]\n    const diff = sumBy(newPools, (pool) => getCpmmProbability(pool, 0.5)) - 1\n    return diff\n  })\n\n  const result = buyYesSharesInOtherAnswersThenNoInAnswer(\n    answers,\n    answerToBuy,\n    unfilledBetsByAnswer,\n    balanceByUserId,\n    betAmount,\n    limitProb,\n    yesShares,\n    collectedFees\n  )\n  if (!result) {\n    throw new Error('Invariant failed in calculateCpmmMultiArbitrageBetNo')\n  }\n  const { yesBetResults, noBetResult } = result\n\n  if (DEBUG) {\n    const endTime = Date.now()\n\n    const newPools = [\n      ...yesBetResults.map((r) => r.cpmmState.pool),\n      noBetResult.cpmmState.pool,\n    ]\n\n    console.log('time', endTime - startTime, 'ms')\n\n    console.log(\n      'bet amount',\n      betAmount,\n      'yes bet amounts',\n      yesBetResults.map((r) => r.takers.map((t) => t.amount)),\n      'no bet amount',\n      sumBy(noBetResult.takers, 'amount')\n    )\n\n    console.log(\n      'getBinaryBuyYes before',\n      answers.map((a) => a.prob),\n      answers.map((a) => `${a.poolYes}, ${a.poolNo}`),\n      'answerToBuy',\n      answerToBuy\n    )\n    console.log(\n      'getBinaryBuyNo after',\n      newPools,\n      newPools.map((pool) => getCpmmProbability(pool, 0.5)),\n      'prob total',\n      sumBy(newPools, (pool) => getCpmmProbability(pool, 0.5)),\n      'pool shares',\n      newPools.map((pool) => `${pool.YES}, ${pool.NO}`),\n      'yes shares',\n      yesShares,\n      'no shares',\n      sumBy(noBetResult.takers, 'shares')\n    )\n  }\n\n  const newBetResult = { ...noBetResult, outcome: 'NO' }\n  const otherBetResults = yesBetResults.map((r) => ({ ...r, outcome: 'YES' }))\n  return { newBetResult, otherBetResults }\n}\n\nconst buyYesSharesInOtherAnswersThenNoInAnswer = (\n  answers: Answer[],\n  answerToBuy: Answer,\n  unfilledBetsByAnswer: Dictionary<LimitBet[]>,\n  balanceByUserId: { [userId: string]: number },\n  betAmount: number,\n  limitProb: number | undefined,\n  yesShares: number,\n  collectedFees: Fees\n) => {\n  const otherAnswers = answers.filter((a) => a.id !== answerToBuy.id)\n  const yesAmounts = otherAnswers.map(({ id, poolYes, poolNo }) =>\n    calculateAmountToBuySharesFixedP(\n      { pool: { YES: poolYes, NO: poolNo }, p: 0.5, collectedFees },\n      yesShares,\n      'YES',\n      unfilledBetsByAnswer[id] ?? [],\n      balanceByUserId,\n      true\n    )\n  )\n  const totalYesAmount = sum(yesAmounts)\n\n  const yesBetResults = yesAmounts.map((yesAmount, i) => {\n    const answer = otherAnswers[i]\n    const { poolYes, poolNo } = answer\n    return {\n      ...computeFills(\n        { pool: { YES: poolYes, NO: poolNo }, p: 0.5, collectedFees },\n        'YES',\n        yesAmount,\n        undefined,\n        unfilledBetsByAnswer[answer.id] ?? [],\n        balanceByUserId,\n        undefined,\n        true\n      ),\n      answer,\n    }\n  })\n\n  let noBetAmount = betAmount - totalYesAmount\n  if (floatingArbitrageEqual(noBetAmount, 0)) {\n    noBetAmount = 0\n  }\n  if (noBetAmount < 0) {\n    return undefined\n  }\n\n  for (const yesBetResult of yesBetResults) {\n    const redemptionFill = {\n      matchedBetId: null,\n      amount: -sumBy(yesBetResult.takers, 'amount'),\n      shares: -sumBy(yesBetResult.takers, 'shares'),\n      timestamp: Date.now(),\n      fees: noFees,\n    }\n    yesBetResult.takers.push(redemptionFill)\n  }\n\n  const pool = { YES: answerToBuy.poolYes, NO: answerToBuy.poolNo }\n  const noBetResult = {\n    ...computeFills(\n      { pool, p: 0.5, collectedFees },\n      'NO',\n      noBetAmount,\n      limitProb,\n      unfilledBetsByAnswer[answerToBuy.id] ?? [],\n      balanceByUserId\n    ),\n    answer: answerToBuy,\n  }\n  // Redeem YES shares in other answers to NO shares in this answer.\n  const redemptionFill = {\n    matchedBetId: null,\n    amount: totalYesAmount,\n    shares: yesShares,\n    timestamp: Date.now(),\n    fees: noFees,\n  }\n  noBetResult.takers.push(redemptionFill)\n\n  return { yesBetResults, noBetResult }\n}\n\nexport const buyNoSharesUntilAnswersSumToOne = (\n  answers: Answer[],\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  collectedFees: Fees,\n  answerIdsWithFees?: string[]\n) => {\n  const unfilledBetsByAnswer = groupBy(unfilledBets, (bet) => bet.answerId)\n\n  let maxNoShares = 10\n  do {\n    const result = buyNoSharesInAnswers(\n      answers,\n      unfilledBetsByAnswer,\n      balanceByUserId,\n      maxNoShares,\n      collectedFees,\n      answerIdsWithFees\n    )\n    const newPools = result.noBetResults.map((r) => r.cpmmState.pool)\n    const probSum = sumBy(newPools, (pool) => getCpmmProbability(pool, 0.5))\n    if (probSum < 1) break\n    maxNoShares *= 10\n  } while (true)\n\n  const noShares = binarySearch(0, maxNoShares, (noShares) => {\n    const result = buyNoSharesInAnswers(\n      answers,\n      unfilledBetsByAnswer,\n      balanceByUserId,\n      noShares,\n      collectedFees,\n      answerIdsWithFees\n    )\n    const newPools = result.noBetResults.map((r) => r.cpmmState.pool)\n    const diff = 1 - sumBy(newPools, (pool) => getCpmmProbability(pool, 0.5))\n    return diff\n  })\n\n  return buyNoSharesInAnswers(\n    answers,\n    unfilledBetsByAnswer,\n    balanceByUserId,\n    noShares,\n    collectedFees,\n    answerIdsWithFees\n  )\n}\n\nconst buyNoSharesInAnswers = (\n  answers: Answer[],\n  unfilledBetsByAnswer: Dictionary<LimitBet[]>,\n  balanceByUserId: { [userId: string]: number },\n  noShares: number,\n  collectedFees: Fees,\n  answerIdsWithFees?: string[]\n) => {\n  const noAmounts = answers.map(({ id, poolYes, poolNo }) =>\n    calculateAmountToBuySharesFixedP(\n      { pool: { YES: poolYes, NO: poolNo }, p: 0.5, collectedFees },\n      noShares,\n      'NO',\n      unfilledBetsByAnswer[id] ?? [],\n      balanceByUserId,\n      !answerIdsWithFees?.includes(id)\n    )\n  )\n  const totalNoAmount = sum(noAmounts)\n\n  const noBetResults = noAmounts.map((noAmount, i) => {\n    const answer = answers[i]\n    const pool = { YES: answer.poolYes, NO: answer.poolNo }\n    return {\n      ...computeFills(\n        { pool, p: 0.5, collectedFees },\n        'NO',\n        noAmount,\n        undefined,\n        unfilledBetsByAnswer[answer.id] ?? [],\n        balanceByUserId,\n        undefined,\n        !answerIdsWithFees?.includes(answer.id)\n      ),\n      answer,\n    }\n  })\n  // Identity: No shares in all other answers is equal to noShares * (n-1) mana\n  const redeemedAmount = noShares * (answers.length - 1)\n  // Fees on arbitrage bets are returned\n  const extraMana = redeemedAmount - totalNoAmount\n\n  for (const noBetResult of noBetResults) {\n    const redemptionFill = {\n      matchedBetId: null,\n      amount: -sumBy(noBetResult.takers, 'amount'),\n      shares: -sumBy(noBetResult.takers, 'shares'),\n      timestamp: Date.now(),\n      fees: noBetResult.totalFees,\n    }\n    noBetResult.takers.push(redemptionFill)\n  }\n\n  return { noBetResults, extraMana }\n}\n\nexport function calculateCpmmMultiArbitrageSellNo(\n  answers: Answer[],\n  answerToSell: Answer,\n  noShares: number,\n  limitProb: number | undefined,\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  collectedFees: Fees\n) {\n  const startTime = Date.now()\n  const unfilledBetsByAnswer = groupBy(unfilledBets, (bet) => bet.answerId)\n\n  const { id, poolYes, poolNo } = answerToSell\n  const pool = { YES: poolYes, NO: poolNo }\n  const answersWithoutAnswerToSell = answers.filter(\n    (a) => a.id !== answerToSell.id\n  )\n\n  // Strategy: We have noShares, and need that many yes shares to complete the sell.\n  // We buy some yes shares in the answer directly, and the rest is from converting No shares of all the other answers.\n  // The proportion of each is dependent on what leaves the final probability sum at 1.\n  // Which is what this binary search is discovering.\n  const yesShares = binarySearch(0, noShares, (yesShares) => {\n    const noSharesInOtherAnswers = noShares - yesShares\n    const yesAmount = calculateAmountToBuySharesFixedP(\n      { pool, p: 0.5, collectedFees },\n      yesShares,\n      'YES',\n      unfilledBetsByAnswer[id] ?? [],\n      balanceByUserId\n    )\n    const noAmounts = answersWithoutAnswerToSell.map(\n      ({ id, poolYes, poolNo }) =>\n        calculateAmountToBuySharesFixedP(\n          { pool: { YES: poolYes, NO: poolNo }, p: 0.5, collectedFees },\n          noSharesInOtherAnswers,\n          'NO',\n          unfilledBetsByAnswer[id] ?? [],\n          balanceByUserId,\n          true\n        )\n    )\n\n    const yesResult = computeFills(\n      { pool, p: 0.5, collectedFees },\n      'YES',\n      yesAmount,\n      limitProb,\n      unfilledBetsByAnswer[id] ?? [],\n      balanceByUserId\n    )\n    const noResults = answersWithoutAnswerToSell.map((answer, i) => {\n      const noAmount = noAmounts[i]\n      const pool = { YES: answer.poolYes, NO: answer.poolNo }\n      return {\n        ...computeFills(\n          { pool, p: 0.5, collectedFees },\n          'NO',\n          noAmount,\n          undefined,\n          unfilledBetsByAnswer[answer.id] ?? [],\n          balanceByUserId,\n          undefined,\n          true\n        ),\n        answer,\n      }\n    })\n\n    const newPools = [\n      yesResult.cpmmState.pool,\n      ...noResults.map((r) => r.cpmmState.pool),\n    ]\n    const diff = sumBy(newPools, (pool) => getCpmmProbability(pool, 0.5)) - 1\n    return diff\n  })\n\n  const noSharesInOtherAnswers = noShares - yesShares\n  const yesAmount = calculateAmountToBuySharesFixedP(\n    { pool, p: 0.5, collectedFees },\n    yesShares,\n    'YES',\n    unfilledBetsByAnswer[id] ?? [],\n    balanceByUserId\n  )\n  const noAmounts = answersWithoutAnswerToSell.map(({ id, poolYes, poolNo }) =>\n    calculateAmountToBuySharesFixedP(\n      { pool: { YES: poolYes, NO: poolNo }, p: 0.5, collectedFees },\n      noSharesInOtherAnswers,\n      'NO',\n      unfilledBetsByAnswer[id] ?? [],\n      balanceByUserId,\n      true\n    )\n  )\n  const yesBetResult = computeFills(\n    { pool, p: 0.5, collectedFees },\n    'YES',\n    yesAmount,\n    limitProb,\n    unfilledBetsByAnswer[id] ?? [],\n    balanceByUserId\n  )\n  const noBetResults = answersWithoutAnswerToSell.map((answer, i) => {\n    const noAmount = noAmounts[i]\n    const pool = { YES: answer.poolYes, NO: answer.poolNo }\n    return {\n      ...computeFills(\n        { pool, p: 0.5, collectedFees },\n        'NO',\n        noAmount,\n        undefined,\n        unfilledBetsByAnswer[answer.id] ?? [],\n        balanceByUserId,\n        undefined,\n        true\n      ),\n      answer,\n    }\n  })\n\n  const redeemedMana = noSharesInOtherAnswers * (answers.length - 2)\n  const netNoAmount = sum(noAmounts) - redeemedMana\n\n  const now = Date.now()\n  for (const noBetResult of noBetResults) {\n    const redemptionFill = {\n      matchedBetId: null,\n      amount: -sumBy(noBetResult.takers, 'amount'),\n      shares: -sumBy(noBetResult.takers, 'shares'),\n      timestamp: now,\n      fees: noFees,\n    }\n    noBetResult.takers.push(redemptionFill)\n  }\n\n  const arbitrageFee =\n    noSharesInOtherAnswers === 0\n      ? 0\n      : getTakerFee(\n          noSharesInOtherAnswers,\n          netNoAmount / noSharesInOtherAnswers\n        )\n  const arbitrageFees = getFeesSplit(arbitrageFee)\n  yesBetResult.takers.push({\n    matchedBetId: null,\n    amount: netNoAmount + arbitrageFee,\n    shares: noSharesInOtherAnswers,\n    timestamp: now,\n    fees: arbitrageFees,\n  })\n  yesBetResult.totalFees = addObjects(yesBetResult.totalFees, arbitrageFees)\n\n  if (DEBUG) {\n    const endTime = Date.now()\n\n    const newPools = [\n      ...noBetResults.map((r) => r.cpmmState.pool),\n      yesBetResult.cpmmState.pool,\n    ]\n\n    console.log('time', endTime - startTime, 'ms')\n\n    console.log(\n      'no shares to sell',\n      noShares,\n      'no bet amounts',\n      noBetResults.map((r) => r.takers.map((t) => t.amount)),\n      'yes bet amount',\n      sumBy(yesBetResult.takers, 'amount')\n    )\n\n    console.log(\n      'getBinaryBuyYes before',\n      answers.map((a) => a.prob),\n      answers.map((a) => `${a.poolYes}, ${a.poolNo}`),\n      'answerToBuy',\n      answerToSell\n    )\n    console.log(\n      'getBinaryBuyYes after',\n      newPools,\n      newPools.map((pool) => getCpmmProbability(pool, 0.5)),\n      'prob total',\n      sumBy(newPools, (pool) => getCpmmProbability(pool, 0.5)),\n      'pool shares',\n      newPools.map((pool) => `${pool.YES}, ${pool.NO}`),\n      'no shares',\n      noShares,\n      'yes shares',\n      sumBy(yesBetResult.takers, 'shares')\n    )\n  }\n\n  const newBetResult = { ...yesBetResult, outcome: 'YES' }\n  const otherBetResults = noBetResults.map((r) => ({ ...r, outcome: 'NO' }))\n  return { newBetResult, otherBetResults }\n}\n\nexport function calculateCpmmMultiArbitrageSellYes(\n  answers: Answer[],\n  answerToSell: Answer,\n  yesShares: number,\n  limitProb: number | undefined,\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  collectedFees: Fees\n) {\n  const startTime = Date.now()\n  const unfilledBetsByAnswer = groupBy(unfilledBets, (bet) => bet.answerId)\n\n  const { id, poolYes, poolNo } = answerToSell\n  const pool = { YES: poolYes, NO: poolNo }\n  const answersWithoutAnswerToSell = answers.filter(\n    (a) => a.id !== answerToSell.id\n  )\n\n  const noShares = binarySearch(0, yesShares, (noShares) => {\n    const yesSharesInOtherAnswers = yesShares - noShares\n    const noAmount = calculateAmountToBuySharesFixedP(\n      { pool, p: 0.5, collectedFees },\n      noShares,\n      'NO',\n      unfilledBetsByAnswer[id] ?? [],\n      balanceByUserId\n    )\n    const yesAmounts = answersWithoutAnswerToSell.map(\n      ({ id, poolYes, poolNo }) =>\n        calculateAmountToBuySharesFixedP(\n          { pool: { YES: poolYes, NO: poolNo }, p: 0.5, collectedFees },\n          yesSharesInOtherAnswers,\n          'YES',\n          unfilledBetsByAnswer[id] ?? [],\n          balanceByUserId,\n          true\n        )\n    )\n\n    const noResult = computeFills(\n      { pool, p: 0.5, collectedFees },\n      'NO',\n      noAmount,\n      limitProb,\n      unfilledBetsByAnswer[id] ?? [],\n      balanceByUserId\n    )\n    const yesResults = answersWithoutAnswerToSell.map((answer, i) => {\n      const yesAmount = yesAmounts[i]\n      const pool = { YES: answer.poolYes, NO: answer.poolNo }\n      return {\n        ...computeFills(\n          { pool, p: 0.5, collectedFees },\n          'YES',\n          yesAmount,\n          undefined,\n          unfilledBetsByAnswer[answer.id] ?? [],\n          balanceByUserId,\n          undefined,\n          true\n        ),\n        answer,\n      }\n    })\n\n    const newPools = [\n      noResult.cpmmState.pool,\n      ...yesResults.map((r) => r.cpmmState.pool),\n    ]\n    const diff = 1 - sumBy(newPools, (pool) => getCpmmProbability(pool, 0.5))\n    return diff\n  })\n\n  const yesSharesInOtherAnswers = yesShares - noShares\n  const noAmount = calculateAmountToBuySharesFixedP(\n    { pool, p: 0.5, collectedFees },\n    noShares,\n    'NO',\n    unfilledBetsByAnswer[id] ?? [],\n    balanceByUserId\n  )\n  const yesAmounts = answersWithoutAnswerToSell.map(({ id, poolYes, poolNo }) =>\n    calculateAmountToBuySharesFixedP(\n      { pool: { YES: poolYes, NO: poolNo }, p: 0.5, collectedFees },\n      yesSharesInOtherAnswers,\n      'YES',\n      unfilledBetsByAnswer[id] ?? [],\n      balanceByUserId,\n      true\n    )\n  )\n  const noBetResult = computeFills(\n    { pool, p: 0.5, collectedFees },\n    'NO',\n    noAmount,\n    limitProb,\n    unfilledBetsByAnswer[id] ?? [],\n    balanceByUserId\n  )\n  const yesBetResults = answersWithoutAnswerToSell.map((answer, i) => {\n    const yesAmount = yesAmounts[i]\n    const pool = { YES: answer.poolYes, NO: answer.poolNo }\n    return {\n      ...computeFills(\n        { pool, p: 0.5, collectedFees },\n        'YES',\n        yesAmount,\n        undefined,\n        unfilledBetsByAnswer[answer.id] ?? [],\n        balanceByUserId,\n        undefined,\n        true\n      ),\n      answer,\n    }\n  })\n\n  const totalYesAmount = sum(yesAmounts)\n\n  const now = Date.now()\n  for (const yesBetResult of yesBetResults) {\n    const redemptionFill = {\n      matchedBetId: null,\n      amount: -sumBy(yesBetResult.takers, 'amount'),\n      shares: -sumBy(yesBetResult.takers, 'shares'),\n      timestamp: now,\n      fees: noFees,\n    }\n    yesBetResult.takers.push(redemptionFill)\n  }\n\n  const arbitrageFee =\n    yesSharesInOtherAnswers === 0\n      ? 0\n      : getTakerFee(\n          yesSharesInOtherAnswers,\n          totalYesAmount / yesSharesInOtherAnswers\n        )\n  const arbitrageFees = getFeesSplit(arbitrageFee)\n  noBetResult.takers.push({\n    matchedBetId: null,\n    amount: totalYesAmount + arbitrageFee,\n    shares: yesSharesInOtherAnswers,\n    timestamp: now,\n    fees: arbitrageFees,\n  })\n  noBetResult.totalFees = addObjects(noBetResult.totalFees, arbitrageFees)\n\n  if (DEBUG) {\n    const endTime = Date.now()\n\n    const newPools = [\n      ...yesBetResults.map((r) => r.cpmmState.pool),\n      noBetResult.cpmmState.pool,\n    ]\n\n    console.log('time', endTime - startTime, 'ms')\n\n    console.log(\n      'no shares to sell',\n      noShares,\n      'no bet amounts',\n      yesBetResults.map((r) => r.takers.map((t) => t.amount)),\n      'yes bet amount',\n      sumBy(noBetResult.takers, 'amount')\n    )\n\n    console.log(\n      'getBinaryBuyYes before',\n      answers.map((a) => a.prob),\n      answers.map((a) => `${a.poolYes}, ${a.poolNo}`),\n      'answerToBuy',\n      answerToSell\n    )\n    console.log(\n      'getBinaryBuyYes after',\n      newPools,\n      newPools.map((pool) => getCpmmProbability(pool, 0.5)),\n      'prob total',\n      sumBy(newPools, (pool) => getCpmmProbability(pool, 0.5)),\n      'pool shares',\n      newPools.map((pool) => `${pool.YES}, ${pool.NO}`),\n      'no shares',\n      noShares,\n      'yes shares',\n      sumBy(noBetResult.takers, 'shares')\n    )\n  }\n\n  const newBetResult = {\n    ...noBetResult,\n    outcome: 'NO',\n  }\n  const otherBetResults = yesBetResults.map((r) => ({ ...r, outcome: 'YES' }))\n  return { newBetResult, otherBetResults }\n}\n\nexport const calculateCpmmMultiArbitrageSellYesEqually = (\n  initialAnswers: Answer[],\n  userBetsByAnswerIdToSell: { [answerId: string]: Bet[] },\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  collectedFees: Fees\n) => {\n  const unfilledBetsByAnswer = groupBy(unfilledBets, (bet) => bet.answerId)\n  const allAnswersToSell = initialAnswers.filter(\n    (a) => userBetsByAnswerIdToSell[a.id]?.length\n  )\n  const sharesByAnswerId = mapValues(userBetsByAnswerIdToSell, (bets) =>\n    sumBy(bets, (b) => b.shares)\n  )\n  const minShares = Math.min(...Object.values(sharesByAnswerId))\n  const saleBetResults: PreliminaryBetResults[] = []\n  const oppositeBuyResults: PreliminaryBetResults[] = []\n  let updatedAnswers = initialAnswers\n  let sharesToSell = minShares\n  while (sharesToSell > 0) {\n    const answersToSellNow = allAnswersToSell.filter(\n      (a) => sharesByAnswerId[a.id] >= sharesToSell\n    )\n    const answerIdsToSellNow = allAnswersToSell\n      .filter((a) => sharesByAnswerId[a.id] >= sharesToSell)\n      .map((a) => a.id)\n    // Buy yes shares in the answers opposite the answers to sell\n    const oppositeAnswersFromSaleToBuyYesShares = updatedAnswers.filter(\n      (a) => !answerIdsToSellNow.includes(a.id)\n    )\n    let saleBets: PreliminaryBetResults[]\n    if (answersToSellNow.length !== initialAnswers.length) {\n      const yesAmounts = oppositeAnswersFromSaleToBuyYesShares.map(\n        ({ id, poolYes, poolNo }) => {\n          return calculateAmountToBuySharesFixedP(\n            { pool: { YES: poolYes, NO: poolNo }, p: 0.5, collectedFees },\n            sharesToSell,\n            'YES',\n            unfilledBetsByAnswer[id] ?? [],\n            balanceByUserId,\n            // Zero fees on arbitrage bets\n            true\n          )\n        }\n      )\n      const { newUpdatedAnswers, yesBets, noBuyResults } =\n        getBetResultsAndUpdatedAnswers(\n          oppositeAnswersFromSaleToBuyYesShares,\n          yesAmounts,\n          updatedAnswers,\n          undefined,\n          unfilledBets,\n          balanceByUserId,\n          collectedFees,\n          // Charge fees on sale bets\n          answerIdsToSellNow\n        )\n      updatedAnswers = newUpdatedAnswers\n      for (const yesBet of yesBets) {\n        const redemptionFill = {\n          matchedBetId: null,\n          amount: -sumBy(yesBet.takers, 'amount'),\n          shares: -sumBy(yesBet.takers, 'shares'),\n          timestamp: first(yesBet.takers)?.timestamp ?? Date.now(),\n          fees: yesBet.totalFees,\n        }\n        yesBet.takers.push(redemptionFill)\n      }\n      oppositeBuyResults.push(...yesBets)\n      const totalYesAmount = sum(yesAmounts)\n      const { noBetResults, extraMana } = noBuyResults\n      saleBets = noBetResults\n        // TODO: after adding limit orders, we need to keep track of the matchedBetIds in the redemption bets we're throwing away\n        .filter((betResult) => answerIdsToSellNow.includes(betResult.answer.id))\n        .map((betResult) => {\n          const answer = updatedAnswers.find(\n            (a) => a.id === betResult.answer.id\n          )!\n          const { poolYes, poolNo } = answer\n          return {\n            ...betResult,\n            takers: [\n              {\n                matchedBetId: null,\n                amount:\n                  -(sharesToSell - totalYesAmount + extraMana) /\n                  answerIdsToSellNow.length,\n                shares: -sharesToSell,\n                timestamp: first(betResult.takers)?.timestamp ?? Date.now(),\n                isSale: true,\n                fees: betResult.totalFees,\n              },\n              //...betResult.takers, these are takers in the opposite outcome, not sure where to put them\n            ],\n            cpmmState: {\n              p: 0.5,\n              pool: { YES: poolYes, NO: poolNo },\n              collectedFees,\n            },\n            answer,\n          }\n        })\n    } else {\n      // If we have yes shares in ALL answers, redeem them for mana\n      saleBets = getSellAllRedemptionPreliminaryBets(\n        answersToSellNow,\n        sharesToSell,\n        collectedFees,\n        Date.now()\n      )\n    }\n    saleBetResults.push(...saleBets)\n    for (const answerIdToSell of answerIdsToSellNow) {\n      sharesByAnswerId[answerIdToSell] -= sharesToSell\n    }\n    const answersToSellRemaining = Object.values(sharesByAnswerId).filter(\n      (shares) => shares > 0\n    )\n    if (answersToSellRemaining.length === 0) break\n    sharesToSell = Math.min(...answersToSellRemaining)\n  }\n\n  const newBetResults = combineBetsOnSameAnswers(\n    saleBetResults,\n    'YES',\n    updatedAnswers.filter((a) =>\n      allAnswersToSell.map((an) => an.id).includes(a.id)\n    ),\n    collectedFees\n  )\n\n  const otherBetResults = combineBetsOnSameAnswers(\n    oppositeBuyResults,\n    'YES',\n    updatedAnswers.filter(\n      (r) => !allAnswersToSell.map((a) => a.id).includes(r.id)\n    ),\n    collectedFees\n  )\n  const totalFee = sumAllFees(\n    newBetResults.concat(otherBetResults).map((r) => r.totalFees)\n  )\n\n  return { newBetResults, otherBetResults, updatedAnswers, totalFee }\n}\n\nexport const getSellAllRedemptionPreliminaryBets = (\n  answers: Answer[],\n  sharesToSell: number,\n  collectedFees: Fees,\n  now: number\n) => {\n  return answers.map((answer) => {\n    const { poolYes, poolNo } = answer\n    return {\n      outcome: 'YES' as const,\n      takers: [\n        {\n          matchedBetId: null,\n          amount: -sharesToSell / answers.length,\n          shares: -sharesToSell,\n          timestamp: now,\n          isSale: true,\n          fees: noFees,\n        },\n      ],\n      makers: [],\n      totalFees: noFees,\n      cpmmState: { p: 0.5, pool: { YES: poolYes, NO: poolNo }, collectedFees },\n      ordersToCancel: [],\n      answer,\n    }\n  })\n}\n\nexport function floatingArbitrageEqual(a: number, b: number, epsilon = 0.001) {\n  return Math.abs(a - b) < epsilon\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAHA;AACA;AAHA;AAJA;AAKA;AAGA;;;;;;;;;;;;;;;;;;;AAGA,MAAM,QAAQ;AAEd,MAAM,gBAAgB,CACpB,SACA,QACA,gBACG,CAAC;QACJ,cAAc;YACZ;YACA;YACA,QAAQ,EAAE;YACV,QAAQ,EAAE;YACV,gBAAgB,EAAE;YAClB,WAAW;gBACT,MAAM;oBAAE,KAAK,OAAO,OAAO;oBAAE,IAAI,OAAO,MAAM;gBAAC;gBAC/C,GAAG;gBACH;YACF;YACA,WAAW;gBAAE,YAAY;gBAAG,cAAc;gBAAG,aAAa;YAAE;QAC9D;QACA,iBAAiB,EAAE;IACrB,CAAC;AACM,SAAS,+BACd,OAAiB,EACjB,WAAmB,EACnB,OAAqB,EACrB,SAAiB,EACjB,gBAAoC,EACpC,YAAwB,EACxB,eAA6C,EAC7C,aAAmB;IAEnB,MAAM,YACJ,qBAAqB,YACjB,mBACA,YAAY,QACZ,kHAAA,CAAA,gBAAa,GACb,kHAAA,CAAA,gBAAa;IACnB,IACE,AAAC,YAAY,IAAI,GAAG,kHAAA,CAAA,gBAAa,IAAI,YAAY,QAChD,YAAY,IAAI,GAAG,kHAAA,CAAA,gBAAa,IAAI,YAAY,SAEhD,YAAY,IAAI,GAAG,aAAa,YAAY,SAC5C,YAAY,IAAI,GAAG,aAAa,YAAY,MAC7C;QACA,OAAO,cAAc,SAAS,aAAa;IAC7C;IACA,MAAM,SACJ,YAAY,QACR,kCACE,SACA,aACA,WACA,WACA,cACA,iBACA,iBAEF,iCACE,SACA,aACA,WACA,WACA,cACA,iBACA;IAER,IAAI,CAAA,GAAA,sHAAA,CAAA,gBAAa,AAAD,EAAE,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,OAAO,YAAY,CAAC,MAAM,EAAE,WAAW,IAAI;QACjE,qBAAqB;QACrB,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,OAAO,YAAY;QAC/C,OAAO,cAAc,SAAS,QAAQ;IACxC;IACA,OAAO;AACT;AAEO,SAAS,mCACd,OAAiB,EACjB,YAAsB,EACtB,SAAiB,EACjB,SAA6B,EAC7B,YAAwB,EACxB,eAA6C,EAC7C,aAAmB;IAEnB,MAAM,SAAS,mCACb,SACA,cACA,WACA,WACA,cACA,iBACA;IAEF,IACE,CAAA,GAAA,sHAAA,CAAA,gBAAa,AAAD,EACV,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EACF,OAAO,aAAa,CAAC,GAAG,CAAC,CAAC,IAAM,EAAE,MAAM,GACxC,WAEF,IAEF;QACA,qBAAqB;QACrB,OAAO,aAAa,CAAC,GAAG,CAAC,CAAC;YACxB,OAAO;gBACL,cAAc;oBACZ,SAAS,EAAE,OAAO;oBAClB,QAAQ,EAAE,MAAM;oBAChB,QAAQ,EAAE;oBACV,QAAQ,EAAE;oBACV,gBAAgB,EAAE;oBAClB,WAAW;wBACT,MAAM;4BAAE,KAAK,EAAE,MAAM,CAAC,OAAO;4BAAE,IAAI,EAAE,MAAM,CAAC,MAAM;wBAAC;wBACnD,GAAG;wBACH;oBACF;oBACA,WAAW,8GAAA,CAAA,SAAM;gBACnB;gBACA,iBAAiB,EAAE;YACrB;QACF;IACF;IACA,OAAO;AACT;AAKA,SAAS,mCACP,cAAwB,EACxB,mBAA6B,EAC7B,gBAAwB,EACxB,SAA6B,EAC7B,YAAwB,EACxB,eAA6C,EAC7C,aAAmB;IAEnB,MAAM,uBAAuB,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,cAAc,CAAC,MAAQ,IAAI,QAAQ;IACxE,MAAM,eAAwC,EAAE;IAChD,MAAM,gBAAyC,EAAE;IAEjD,IAAI,iBAAiB;IACrB,IAAI,cAAc;IAClB,MAAO,cAAc,KAAM;QACzB,MAAM,eAAe,eAAe,MAAM,CAAC,CAAC,IAC1C,oBAAoB,GAAG,CAAC,CAAC,KAAO,GAAG,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE;QAEtD,4CAA4C;QAC5C,MAAM,mBAAmB,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,cAAc;QAC7C,MAAM,eAAe,cAAc;QACnC,IAAI,aAAuB,EAAE;QAC7B,CAAA,GAAA,uHAAA,CAAA,eAAY,AAAD,EAAE,GAAG,cAAc,CAAC;YAC7B,aAAa,aAAa,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,GACpD,CAAA,GAAA,2HAAA,CAAA,mCAAgC,AAAD,EAC7B;oBAAE,MAAM;wBAAE,KAAK;wBAAS,IAAI;oBAAO;oBAAG,GAAG;oBAAK;gBAAc,GAC5D,WACA,OACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B;YAIJ,MAAM,iBAAiB,CAAA,GAAA,+HAAA,CAAA,UAAG,AAAD,EAAE;YAC3B,OAAO,iBAAiB;QAC1B;QAEA,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,iBAAiB,EAAE,GAChD,+BACE,cACA,YACA,gBACA,WACA,cACA,iBACA;QAEJ,iBAAiB;QAEjB,cAAc,aAAa,SAAS;QACpC,aAAa,IAAI,IAAI,aAAa,YAAY;QAC9C,cAAc,IAAI,IAAI;IACxB;IAEA,MAAM,6BAA6B,yBACjC,cACA,MACA,eAAe,MAAM,CAAC,CAAC,IACrB,oBAAoB,GAAG,CAAC,CAAC,IAAM,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,IAEpD;IAEF,MAAM,2BAA2B,OAAO,WAAW,CACjD,2BAA2B,GAAG,CAAC,CAAC,IAAM;YAAC,EAAE,MAAM,CAAC,EAAE;YAAE,EAAE,SAAS;SAAC;IAGlE,MAAM,gBAAgB,yBACpB,eACA,OACA,eAAe,MAAM,CAAC,CAAC,IACrB,oBAAoB,GAAG,CAAC,CAAC,KAAO,GAAG,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,IAEtD,eACA,MACA;IAEF,qIAAqI;IACrI,MAAM,kBAAkB,yBACtB,cACA,MACA,eAAe,MAAM,CACnB,CAAC,IAAM,CAAC,oBAAoB,GAAG,CAAC,CAAC,IAAM,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,IAE5D;IAGF,OAAO;QAAE;QAAe;QAAiB;IAAe;AAC1D;AAEO,MAAM,iCAAiC,CAC5C,cACA,YACA,gBACA,WACA,cACA,iBACA,eACA;IAEA,MAAM,uBAAuB,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,cAAc,CAAC,MAAQ,IAAI,QAAQ;IACxE,MAAM,iCAAiC,aAAa,GAAG,CAAC,CAAC,aAAa;QACpE,MAAM,OAAO;YAAE,KAAK,YAAY,OAAO;YAAE,IAAI,YAAY,MAAM;QAAC;QAChE,MAAM,eAAe;YACnB,GAAG,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD,EACZ;gBAAE;gBAAM,GAAG;gBAAK;YAAc,GAC9B,OACA,UAAU,CAAC,EAAE,EACb,WACA,oBAAoB,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,EAC1C,iBACA,WACA,qBAAqB,CAAC,mBAAmB,SAAS,YAAY,EAAE,EACjE;YACD,QAAQ;QACV;QAEA,MAAM,EAAE,SAAS,EAAE,GAAG;QACtB,MAAM,EAAE,MAAM,OAAO,EAAE,CAAC,EAAE,GAAG;QAC7B,MAAM,EAAE,KAAK,OAAO,EAAE,IAAI,MAAM,EAAE,GAAG;QACrC,MAAM,OAAO,CAAA,GAAA,2HAAA,CAAA,qBAAkB,AAAD,EAAE,SAAS;QACzC,MAAM,iBAAiB;YACrB,GAAG,WAAW;YACd;YACA;YACA;QACF;QACA,OAAO;YAAE;YAAc;QAAe;IACxC;IACA,MAAM,UAAU,+BAA+B,GAAG,CAAC,CAAC,IAAM,EAAE,YAAY;IACxE,MAAM,kBAAkB,+BAA+B,GAAG,CACxD,CAAC,IAAM,EAAE,cAAc;IAEzB,MAAM,eAAe,gCACnB,eAAe,GAAG,CAChB,CAAC,SACC,gBAAgB,IAAI,CAClB,CAAC,iBAAmB,eAAe,EAAE,KAAK,OAAO,EAAE,KAChD,SAET,cACA,iBACA,eACA;IAEF,2DAA2D;IAC3D,MAAM,oBAAoB,aAAa,YAAY,CAAC,GAAG,CAAC,CAAC;QACvD,MAAM,EAAE,SAAS,EAAE,GAAG;QACtB,MAAM,EAAE,MAAM,OAAO,EAAE,CAAC,EAAE,GAAG;QAC7B,MAAM,EAAE,KAAK,OAAO,EAAE,IAAI,MAAM,EAAE,GAAG;QACrC,MAAM,OAAO,CAAA,GAAA,2HAAA,CAAA,qBAAkB,AAAD,EAAE,SAAS;QACzC,OAAO;YACL,GAAG,YAAY,MAAM;YACrB;YACA;YACA;QACF;IACF;IAEA,OAAO;QACL;QACA;QACA;IACF;AACF;AAEO,MAAM,2BAA2B,CACtC,MACA,SACA,gBACA,eACA,kEAAkE;AAClE,4BACA;IAEA,OAAO,eAAe,GAAG,CAAC,CAAC;QACzB,MAAM,gBAAgB,KAAK,MAAM,CAAC,CAAC,MAAQ,IAAI,MAAM,CAAC,EAAE,KAAK,OAAO,EAAE;QACtE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;QAC5B,MAAM,MAAM,aAAa,CAAC,EAAE;QAC5B,MAAM,YAAY,oBAAoB,CAAC,OAAO,EAAE,CAAC,IAAI,8GAAA,CAAA,SAAM;QAC3D,MAAM,YAAY,cAAc,MAAM,CACpC,CAAC,KAAK,IAAM,CAAA,GAAA,wHAAA,CAAA,aAAU,AAAD,EAAE,KAAK,EAAE,SAAS,GACvC;QAEF,OAAO;YACL,GAAG,GAAG;YACN,QAAQ,6BACJ;gBACE;oBACE,GAAG,IAAI,MAAM,CAAC,EAAE;oBAChB,QAAQ,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EACV,cAAc,OAAO,CAAC,CAAC,IAAM,EAAE,MAAM,GACrC;gBAEJ;aACD,GACD,cAAc,OAAO,CAAC,CAAC,IAAM,EAAE,MAAM;YACzC,QAAQ,cAAc,OAAO,CAAC,CAAC,IAAM,EAAE,MAAM;YAC7C,gBAAgB,cAAc,OAAO,CAAC,CAAC,IAAM,EAAE,cAAc;YAC7D;YACA,WAAW;gBAAE,GAAG;gBAAK,MAAM;oBAAE,KAAK;oBAAS,IAAI;gBAAO;gBAAG;YAAc;YACvE;YACA;QACF;IACF;AACF;AAEA,SAAS,kCACP,OAAiB,EACjB,WAAmB,EACnB,SAAiB,EACjB,SAA6B,EAC7B,YAAwB,EACxB,eAA6C,EAC7C,aAAmB;IAEnB,MAAM,YAAY,KAAK,GAAG;IAC1B,MAAM,uBAAuB,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,cAAc,CAAC,MAAQ,IAAI,QAAQ;IAExE,MAAM,kBAAkB,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAC1B,QAAQ,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,YAAY,EAAE,EAAE,GAAG,CAAC,CAAC,IAAM,IAAI,EAAE,IAAI;IAEtE,6GAA6G;IAC7G,MAAM,cAAc,YAAY,CAAC,kBAAkB,QAAQ,MAAM,GAAG,CAAC;IAErE,MAAM,WAAW,CAAA,GAAA,uHAAA,CAAA,eAAY,AAAD,EAAE,GAAG,aAAa,CAAC;QAC7C,MAAM,SAAS,yCACb,SACA,aACA,sBACA,iBACA,WACA,WACA,UACA;QAEF,IAAI,CAAC,QAAQ;YACX,OAAO;QACT;QACA,MAAM,WAAW;eACZ,OAAO,YAAY,CAAC,GAAG,CAAC,CAAC,IAAM,EAAE,SAAS,CAAC,IAAI;YAClD,OAAO,YAAY,CAAC,SAAS,CAAC,IAAI;SACnC;QACD,MAAM,OAAO,IAAI,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,UAAU,CAAC,OAAS,CAAA,GAAA,2HAAA,CAAA,qBAAkB,AAAD,EAAE,MAAM;QACpE,OAAO;IACT;IAEA,MAAM,SAAS,yCACb,SACA,aACA,sBACA,iBACA,WACA,WACA,UACA;IAEF,IAAI,CAAC,QAAQ;QACX,QAAQ,GAAG,CAAC,aAAa;QACzB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,GAAG;IAEvC,uCAAW;;IAuCX;IAEA,MAAM,eAAe;QAAE,GAAG,YAAY;QAAE,SAAS;IAAM;IACvD,MAAM,kBAAkB,aAAa,GAAG,CAAC,CAAC,IAAM,CAAC;YAAE,GAAG,CAAC;YAAE,SAAS;QAAK,CAAC;IACxE,OAAO;QAAE;QAAc;IAAgB;AACzC;AAEA,MAAM,2CAA2C,CAC/C,SACA,aACA,sBACA,iBACA,WACA,WACA,UACA;IAEA,MAAM,eAAe,QAAQ,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,YAAY,EAAE;IAClE,MAAM,YAAY,aAAa,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,GACzD,CAAA,GAAA,2HAAA,CAAA,mCAAgC,AAAD,EAC7B;YAAE,MAAM;gBAAE,KAAK;gBAAS,IAAI;YAAO;YAAG,GAAG;YAAK;QAAc,GAC5D,UACA,MACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B,iBACA;IAGJ,MAAM,gBAAgB,CAAA,GAAA,+HAAA,CAAA,UAAG,AAAD,EAAE;IAE1B,MAAM,eAAe,UAAU,GAAG,CAAC,CAAC,UAAU;QAC5C,MAAM,SAAS,YAAY,CAAC,EAAE;QAC9B,MAAM,OAAO;YAAE,KAAK,OAAO,OAAO;YAAE,IAAI,OAAO,MAAM;QAAC;QACtD,OAAO;YACL,GAAG,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD,EACZ;gBAAE;gBAAM,GAAG;gBAAK;YAAc,GAC9B,MACA,UACA,WACA,oBAAoB,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,EACrC,iBACA,WACA,KACD;YACD;QACF;IACF;IAEA,8HAA8H;IAC9H,MAAM,iBAAiB,WAAW,CAAC,QAAQ,MAAM,GAAG,CAAC;IACrD,MAAM,cAAc,gBAAgB;IACpC,IAAI,eAAe,YAAY;IAC/B,IAAI,uBAAuB,cAAc,IAAI;QAC3C,eAAe;IACjB;IACA,IAAI,eAAe,GAAG;QACpB,OAAO;IACT;IAEA,KAAK,MAAM,eAAe,aAAc;QACtC,MAAM,iBAAiB;YACrB,cAAc;YACd,QAAQ,CAAC,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,YAAY,MAAM,EAAE;YACnC,QAAQ,CAAC,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,YAAY,MAAM,EAAE;YACnC,WAAW,KAAK,GAAG;YACnB,MAAM,8GAAA,CAAA,SAAM;QACd;QACA,YAAY,MAAM,CAAC,IAAI,CAAC;IAC1B;IAEA,MAAM,OAAO;QAAE,KAAK,YAAY,OAAO;QAAE,IAAI,YAAY,MAAM;IAAC;IAChE,MAAM,eAAe;QACnB,GAAG,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD,EACZ;YAAE;YAAM,GAAG;YAAK;QAAc,GAC9B,OACA,cACA,WACA,oBAAoB,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,EAC1C,gBACD;QACD,QAAQ;IACV;IAEA,kEAAkE;IAClE,MAAM,iBAAiB;QACrB,cAAc;QACd,QAAQ;QACR,QAAQ;QACR,WAAW,KAAK,GAAG;QACnB,MAAM,8GAAA,CAAA,SAAM;IACd;IACA,aAAa,MAAM,CAAC,IAAI,CAAC;IAEzB,OAAO;QAAE;QAAc;IAAa;AACtC;AAEA,SAAS,iCACP,OAAiB,EACjB,WAAmB,EACnB,SAAiB,EACjB,SAA6B,EAC7B,YAAwB,EACxB,eAA6C,EAC7C,aAAmB;IAEnB,MAAM,YAAY,KAAK,GAAG;IAC1B,MAAM,uBAAuB,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,cAAc,CAAC,MAAQ,IAAI,QAAQ;IAExE,MAAM,mBAAmB,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAC3B,QAAQ,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,YAAY,EAAE,GAC7C;IAEF,MAAM,eAAe,YAAY;IAEjC,MAAM,YAAY,CAAA,GAAA,uHAAA,CAAA,eAAY,AAAD,EAAE,GAAG,cAAc,CAAC;QAC/C,MAAM,SAAS,yCACb,SACA,aACA,sBACA,iBACA,WACA,WACA,WACA;QAEF,IAAI,CAAC,QAAQ,OAAO;QACpB,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,GAAG;QACvC,MAAM,WAAW;eACZ,cAAc,GAAG,CAAC,CAAC,IAAM,EAAE,SAAS,CAAC,IAAI;YAC5C,YAAY,SAAS,CAAC,IAAI;SAC3B;QACD,MAAM,OAAO,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,UAAU,CAAC,OAAS,CAAA,GAAA,2HAAA,CAAA,qBAAkB,AAAD,EAAE,MAAM,QAAQ;QACxE,OAAO;IACT;IAEA,MAAM,SAAS,yCACb,SACA,aACA,sBACA,iBACA,WACA,WACA,WACA;IAEF,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,GAAG;IAEvC,uCAAW;;IAuCX;IAEA,MAAM,eAAe;QAAE,GAAG,WAAW;QAAE,SAAS;IAAK;IACrD,MAAM,kBAAkB,cAAc,GAAG,CAAC,CAAC,IAAM,CAAC;YAAE,GAAG,CAAC;YAAE,SAAS;QAAM,CAAC;IAC1E,OAAO;QAAE;QAAc;IAAgB;AACzC;AAEA,MAAM,2CAA2C,CAC/C,SACA,aACA,sBACA,iBACA,WACA,WACA,WACA;IAEA,MAAM,eAAe,QAAQ,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,YAAY,EAAE;IAClE,MAAM,aAAa,aAAa,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,GAC1D,CAAA,GAAA,2HAAA,CAAA,mCAAgC,AAAD,EAC7B;YAAE,MAAM;gBAAE,KAAK;gBAAS,IAAI;YAAO;YAAG,GAAG;YAAK;QAAc,GAC5D,WACA,OACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B,iBACA;IAGJ,MAAM,iBAAiB,CAAA,GAAA,+HAAA,CAAA,UAAG,AAAD,EAAE;IAE3B,MAAM,gBAAgB,WAAW,GAAG,CAAC,CAAC,WAAW;QAC/C,MAAM,SAAS,YAAY,CAAC,EAAE;QAC9B,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;QAC5B,OAAO;YACL,GAAG,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD,EACZ;gBAAE,MAAM;oBAAE,KAAK;oBAAS,IAAI;gBAAO;gBAAG,GAAG;gBAAK;YAAc,GAC5D,OACA,WACA,WACA,oBAAoB,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,EACrC,iBACA,WACA,KACD;YACD;QACF;IACF;IAEA,IAAI,cAAc,YAAY;IAC9B,IAAI,uBAAuB,aAAa,IAAI;QAC1C,cAAc;IAChB;IACA,IAAI,cAAc,GAAG;QACnB,OAAO;IACT;IAEA,KAAK,MAAM,gBAAgB,cAAe;QACxC,MAAM,iBAAiB;YACrB,cAAc;YACd,QAAQ,CAAC,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,aAAa,MAAM,EAAE;YACpC,QAAQ,CAAC,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,aAAa,MAAM,EAAE;YACpC,WAAW,KAAK,GAAG;YACnB,MAAM,8GAAA,CAAA,SAAM;QACd;QACA,aAAa,MAAM,CAAC,IAAI,CAAC;IAC3B;IAEA,MAAM,OAAO;QAAE,KAAK,YAAY,OAAO;QAAE,IAAI,YAAY,MAAM;IAAC;IAChE,MAAM,cAAc;QAClB,GAAG,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD,EACZ;YAAE;YAAM,GAAG;YAAK;QAAc,GAC9B,MACA,aACA,WACA,oBAAoB,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,EAC1C,gBACD;QACD,QAAQ;IACV;IACA,kEAAkE;IAClE,MAAM,iBAAiB;QACrB,cAAc;QACd,QAAQ;QACR,QAAQ;QACR,WAAW,KAAK,GAAG;QACnB,MAAM,8GAAA,CAAA,SAAM;IACd;IACA,YAAY,MAAM,CAAC,IAAI,CAAC;IAExB,OAAO;QAAE;QAAe;IAAY;AACtC;AAEO,MAAM,kCAAkC,CAC7C,SACA,cACA,iBACA,eACA;IAEA,MAAM,uBAAuB,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,cAAc,CAAC,MAAQ,IAAI,QAAQ;IAExE,IAAI,cAAc;IAClB,GAAG;QACD,MAAM,SAAS,qBACb,SACA,sBACA,iBACA,aACA,eACA;QAEF,MAAM,WAAW,OAAO,YAAY,CAAC,GAAG,CAAC,CAAC,IAAM,EAAE,SAAS,CAAC,IAAI;QAChE,MAAM,UAAU,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,UAAU,CAAC,OAAS,CAAA,GAAA,2HAAA,CAAA,qBAAkB,AAAD,EAAE,MAAM;QACnE,IAAI,UAAU,GAAG;QACjB,eAAe;IACjB,QAAS,KAAK;IAEd,MAAM,WAAW,CAAA,GAAA,uHAAA,CAAA,eAAY,AAAD,EAAE,GAAG,aAAa,CAAC;QAC7C,MAAM,SAAS,qBACb,SACA,sBACA,iBACA,UACA,eACA;QAEF,MAAM,WAAW,OAAO,YAAY,CAAC,GAAG,CAAC,CAAC,IAAM,EAAE,SAAS,CAAC,IAAI;QAChE,MAAM,OAAO,IAAI,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,UAAU,CAAC,OAAS,CAAA,GAAA,2HAAA,CAAA,qBAAkB,AAAD,EAAE,MAAM;QACpE,OAAO;IACT;IAEA,OAAO,qBACL,SACA,sBACA,iBACA,UACA,eACA;AAEJ;AAEA,MAAM,uBAAuB,CAC3B,SACA,sBACA,iBACA,UACA,eACA;IAEA,MAAM,YAAY,QAAQ,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,GACpD,CAAA,GAAA,2HAAA,CAAA,mCAAgC,AAAD,EAC7B;YAAE,MAAM;gBAAE,KAAK;gBAAS,IAAI;YAAO;YAAG,GAAG;YAAK;QAAc,GAC5D,UACA,MACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B,iBACA,CAAC,mBAAmB,SAAS;IAGjC,MAAM,gBAAgB,CAAA,GAAA,+HAAA,CAAA,UAAG,AAAD,EAAE;IAE1B,MAAM,eAAe,UAAU,GAAG,CAAC,CAAC,UAAU;QAC5C,MAAM,SAAS,OAAO,CAAC,EAAE;QACzB,MAAM,OAAO;YAAE,KAAK,OAAO,OAAO;YAAE,IAAI,OAAO,MAAM;QAAC;QACtD,OAAO;YACL,GAAG,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD,EACZ;gBAAE;gBAAM,GAAG;gBAAK;YAAc,GAC9B,MACA,UACA,WACA,oBAAoB,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,EACrC,iBACA,WACA,CAAC,mBAAmB,SAAS,OAAO,EAAE,EACvC;YACD;QACF;IACF;IACA,6EAA6E;IAC7E,MAAM,iBAAiB,WAAW,CAAC,QAAQ,MAAM,GAAG,CAAC;IACrD,sCAAsC;IACtC,MAAM,YAAY,iBAAiB;IAEnC,KAAK,MAAM,eAAe,aAAc;QACtC,MAAM,iBAAiB;YACrB,cAAc;YACd,QAAQ,CAAC,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,YAAY,MAAM,EAAE;YACnC,QAAQ,CAAC,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,YAAY,MAAM,EAAE;YACnC,WAAW,KAAK,GAAG;YACnB,MAAM,YAAY,SAAS;QAC7B;QACA,YAAY,MAAM,CAAC,IAAI,CAAC;IAC1B;IAEA,OAAO;QAAE;QAAc;IAAU;AACnC;AAEO,SAAS,kCACd,OAAiB,EACjB,YAAoB,EACpB,QAAgB,EAChB,SAA6B,EAC7B,YAAwB,EACxB,eAA6C,EAC7C,aAAmB;IAEnB,MAAM,YAAY,KAAK,GAAG;IAC1B,MAAM,uBAAuB,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,cAAc,CAAC,MAAQ,IAAI,QAAQ;IAExE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;IAChC,MAAM,OAAO;QAAE,KAAK;QAAS,IAAI;IAAO;IACxC,MAAM,6BAA6B,QAAQ,MAAM,CAC/C,CAAC,IAAM,EAAE,EAAE,KAAK,aAAa,EAAE;IAGjC,kFAAkF;IAClF,qHAAqH;IACrH,qFAAqF;IACrF,mDAAmD;IACnD,MAAM,YAAY,CAAA,GAAA,uHAAA,CAAA,eAAY,AAAD,EAAE,GAAG,UAAU,CAAC;QAC3C,MAAM,yBAAyB,WAAW;QAC1C,MAAM,YAAY,CAAA,GAAA,2HAAA,CAAA,mCAAgC,AAAD,EAC/C;YAAE;YAAM,GAAG;YAAK;QAAc,GAC9B,WACA,OACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B;QAEF,MAAM,YAAY,2BAA2B,GAAG,CAC9C,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,GACtB,CAAA,GAAA,2HAAA,CAAA,mCAAgC,AAAD,EAC7B;gBAAE,MAAM;oBAAE,KAAK;oBAAS,IAAI;gBAAO;gBAAG,GAAG;gBAAK;YAAc,GAC5D,wBACA,MACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B,iBACA;QAIN,MAAM,YAAY,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD,EAC3B;YAAE;YAAM,GAAG;YAAK;QAAc,GAC9B,OACA,WACA,WACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B;QAEF,MAAM,YAAY,2BAA2B,GAAG,CAAC,CAAC,QAAQ;YACxD,MAAM,WAAW,SAAS,CAAC,EAAE;YAC7B,MAAM,OAAO;gBAAE,KAAK,OAAO,OAAO;gBAAE,IAAI,OAAO,MAAM;YAAC;YACtD,OAAO;gBACL,GAAG,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD,EACZ;oBAAE;oBAAM,GAAG;oBAAK;gBAAc,GAC9B,MACA,UACA,WACA,oBAAoB,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,EACrC,iBACA,WACA,KACD;gBACD;YACF;QACF;QAEA,MAAM,WAAW;YACf,UAAU,SAAS,CAAC,IAAI;eACrB,UAAU,GAAG,CAAC,CAAC,IAAM,EAAE,SAAS,CAAC,IAAI;SACzC;QACD,MAAM,OAAO,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,UAAU,CAAC,OAAS,CAAA,GAAA,2HAAA,CAAA,qBAAkB,AAAD,EAAE,MAAM,QAAQ;QACxE,OAAO;IACT;IAEA,MAAM,yBAAyB,WAAW;IAC1C,MAAM,YAAY,CAAA,GAAA,2HAAA,CAAA,mCAAgC,AAAD,EAC/C;QAAE;QAAM,GAAG;QAAK;IAAc,GAC9B,WACA,OACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B;IAEF,MAAM,YAAY,2BAA2B,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,GACvE,CAAA,GAAA,2HAAA,CAAA,mCAAgC,AAAD,EAC7B;YAAE,MAAM;gBAAE,KAAK;gBAAS,IAAI;YAAO;YAAG,GAAG;YAAK;QAAc,GAC5D,wBACA,MACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B,iBACA;IAGJ,MAAM,eAAe,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD,EAC9B;QAAE;QAAM,GAAG;QAAK;IAAc,GAC9B,OACA,WACA,WACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B;IAEF,MAAM,eAAe,2BAA2B,GAAG,CAAC,CAAC,QAAQ;QAC3D,MAAM,WAAW,SAAS,CAAC,EAAE;QAC7B,MAAM,OAAO;YAAE,KAAK,OAAO,OAAO;YAAE,IAAI,OAAO,MAAM;QAAC;QACtD,OAAO;YACL,GAAG,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD,EACZ;gBAAE;gBAAM,GAAG;gBAAK;YAAc,GAC9B,MACA,UACA,WACA,oBAAoB,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,EACrC,iBACA,WACA,KACD;YACD;QACF;IACF;IAEA,MAAM,eAAe,yBAAyB,CAAC,QAAQ,MAAM,GAAG,CAAC;IACjE,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,UAAG,AAAD,EAAE,aAAa;IAErC,MAAM,MAAM,KAAK,GAAG;IACpB,KAAK,MAAM,eAAe,aAAc;QACtC,MAAM,iBAAiB;YACrB,cAAc;YACd,QAAQ,CAAC,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,YAAY,MAAM,EAAE;YACnC,QAAQ,CAAC,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,YAAY,MAAM,EAAE;YACnC,WAAW;YACX,MAAM,8GAAA,CAAA,SAAM;QACd;QACA,YAAY,MAAM,CAAC,IAAI,CAAC;IAC1B;IAEA,MAAM,eACJ,2BAA2B,IACvB,IACA,CAAA,GAAA,8GAAA,CAAA,cAAW,AAAD,EACR,wBACA,cAAc;IAEtB,MAAM,gBAAgB,CAAA,GAAA,8GAAA,CAAA,eAAY,AAAD,EAAE;IACnC,aAAa,MAAM,CAAC,IAAI,CAAC;QACvB,cAAc;QACd,QAAQ,cAAc;QACtB,QAAQ;QACR,WAAW;QACX,MAAM;IACR;IACA,aAAa,SAAS,GAAG,CAAA,GAAA,wHAAA,CAAA,aAAU,AAAD,EAAE,aAAa,SAAS,EAAE;IAE5D,uCAAW;;IAuCX;IAEA,MAAM,eAAe;QAAE,GAAG,YAAY;QAAE,SAAS;IAAM;IACvD,MAAM,kBAAkB,aAAa,GAAG,CAAC,CAAC,IAAM,CAAC;YAAE,GAAG,CAAC;YAAE,SAAS;QAAK,CAAC;IACxE,OAAO;QAAE;QAAc;IAAgB;AACzC;AAEO,SAAS,mCACd,OAAiB,EACjB,YAAoB,EACpB,SAAiB,EACjB,SAA6B,EAC7B,YAAwB,EACxB,eAA6C,EAC7C,aAAmB;IAEnB,MAAM,YAAY,KAAK,GAAG;IAC1B,MAAM,uBAAuB,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,cAAc,CAAC,MAAQ,IAAI,QAAQ;IAExE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;IAChC,MAAM,OAAO;QAAE,KAAK;QAAS,IAAI;IAAO;IACxC,MAAM,6BAA6B,QAAQ,MAAM,CAC/C,CAAC,IAAM,EAAE,EAAE,KAAK,aAAa,EAAE;IAGjC,MAAM,WAAW,CAAA,GAAA,uHAAA,CAAA,eAAY,AAAD,EAAE,GAAG,WAAW,CAAC;QAC3C,MAAM,0BAA0B,YAAY;QAC5C,MAAM,WAAW,CAAA,GAAA,2HAAA,CAAA,mCAAgC,AAAD,EAC9C;YAAE;YAAM,GAAG;YAAK;QAAc,GAC9B,UACA,MACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B;QAEF,MAAM,aAAa,2BAA2B,GAAG,CAC/C,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,GACtB,CAAA,GAAA,2HAAA,CAAA,mCAAgC,AAAD,EAC7B;gBAAE,MAAM;oBAAE,KAAK;oBAAS,IAAI;gBAAO;gBAAG,GAAG;gBAAK;YAAc,GAC5D,yBACA,OACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B,iBACA;QAIN,MAAM,WAAW,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD,EAC1B;YAAE;YAAM,GAAG;YAAK;QAAc,GAC9B,MACA,UACA,WACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B;QAEF,MAAM,aAAa,2BAA2B,GAAG,CAAC,CAAC,QAAQ;YACzD,MAAM,YAAY,UAAU,CAAC,EAAE;YAC/B,MAAM,OAAO;gBAAE,KAAK,OAAO,OAAO;gBAAE,IAAI,OAAO,MAAM;YAAC;YACtD,OAAO;gBACL,GAAG,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD,EACZ;oBAAE;oBAAM,GAAG;oBAAK;gBAAc,GAC9B,OACA,WACA,WACA,oBAAoB,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,EACrC,iBACA,WACA,KACD;gBACD;YACF;QACF;QAEA,MAAM,WAAW;YACf,SAAS,SAAS,CAAC,IAAI;eACpB,WAAW,GAAG,CAAC,CAAC,IAAM,EAAE,SAAS,CAAC,IAAI;SAC1C;QACD,MAAM,OAAO,IAAI,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,UAAU,CAAC,OAAS,CAAA,GAAA,2HAAA,CAAA,qBAAkB,AAAD,EAAE,MAAM;QACpE,OAAO;IACT;IAEA,MAAM,0BAA0B,YAAY;IAC5C,MAAM,WAAW,CAAA,GAAA,2HAAA,CAAA,mCAAgC,AAAD,EAC9C;QAAE;QAAM,GAAG;QAAK;IAAc,GAC9B,UACA,MACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B;IAEF,MAAM,aAAa,2BAA2B,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,GACxE,CAAA,GAAA,2HAAA,CAAA,mCAAgC,AAAD,EAC7B;YAAE,MAAM;gBAAE,KAAK;gBAAS,IAAI;YAAO;YAAG,GAAG;YAAK;QAAc,GAC5D,yBACA,OACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B,iBACA;IAGJ,MAAM,cAAc,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD,EAC7B;QAAE;QAAM,GAAG;QAAK;IAAc,GAC9B,MACA,UACA,WACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B;IAEF,MAAM,gBAAgB,2BAA2B,GAAG,CAAC,CAAC,QAAQ;QAC5D,MAAM,YAAY,UAAU,CAAC,EAAE;QAC/B,MAAM,OAAO;YAAE,KAAK,OAAO,OAAO;YAAE,IAAI,OAAO,MAAM;QAAC;QACtD,OAAO;YACL,GAAG,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD,EACZ;gBAAE;gBAAM,GAAG;gBAAK;YAAc,GAC9B,OACA,WACA,WACA,oBAAoB,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,EACrC,iBACA,WACA,KACD;YACD;QACF;IACF;IAEA,MAAM,iBAAiB,CAAA,GAAA,+HAAA,CAAA,UAAG,AAAD,EAAE;IAE3B,MAAM,MAAM,KAAK,GAAG;IACpB,KAAK,MAAM,gBAAgB,cAAe;QACxC,MAAM,iBAAiB;YACrB,cAAc;YACd,QAAQ,CAAC,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,aAAa,MAAM,EAAE;YACpC,QAAQ,CAAC,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,aAAa,MAAM,EAAE;YACpC,WAAW;YACX,MAAM,8GAAA,CAAA,SAAM;QACd;QACA,aAAa,MAAM,CAAC,IAAI,CAAC;IAC3B;IAEA,MAAM,eACJ,4BAA4B,IACxB,IACA,CAAA,GAAA,8GAAA,CAAA,cAAW,AAAD,EACR,yBACA,iBAAiB;IAEzB,MAAM,gBAAgB,CAAA,GAAA,8GAAA,CAAA,eAAY,AAAD,EAAE;IACnC,YAAY,MAAM,CAAC,IAAI,CAAC;QACtB,cAAc;QACd,QAAQ,iBAAiB;QACzB,QAAQ;QACR,WAAW;QACX,MAAM;IACR;IACA,YAAY,SAAS,GAAG,CAAA,GAAA,wHAAA,CAAA,aAAU,AAAD,EAAE,YAAY,SAAS,EAAE;IAE1D,uCAAW;;IAuCX;IAEA,MAAM,eAAe;QACnB,GAAG,WAAW;QACd,SAAS;IACX;IACA,MAAM,kBAAkB,cAAc,GAAG,CAAC,CAAC,IAAM,CAAC;YAAE,GAAG,CAAC;YAAE,SAAS;QAAM,CAAC;IAC1E,OAAO;QAAE;QAAc;IAAgB;AACzC;AAEO,MAAM,4CAA4C,CACvD,gBACA,0BACA,cACA,iBACA;IAEA,MAAM,uBAAuB,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,cAAc,CAAC,MAAQ,IAAI,QAAQ;IACxE,MAAM,mBAAmB,eAAe,MAAM,CAC5C,CAAC,IAAM,wBAAwB,CAAC,EAAE,EAAE,CAAC,EAAE;IAEzC,MAAM,mBAAmB,CAAA,GAAA,2IAAA,CAAA,UAAS,AAAD,EAAE,0BAA0B,CAAC,OAC5D,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,MAAM,CAAC,IAAM,EAAE,MAAM;IAE7B,MAAM,YAAY,KAAK,GAAG,IAAI,OAAO,MAAM,CAAC;IAC5C,MAAM,iBAA0C,EAAE;IAClD,MAAM,qBAA8C,EAAE;IACtD,IAAI,iBAAiB;IACrB,IAAI,eAAe;IACnB,MAAO,eAAe,EAAG;QACvB,MAAM,mBAAmB,iBAAiB,MAAM,CAC9C,CAAC,IAAM,gBAAgB,CAAC,EAAE,EAAE,CAAC,IAAI;QAEnC,MAAM,qBAAqB,iBACxB,MAAM,CAAC,CAAC,IAAM,gBAAgB,CAAC,EAAE,EAAE,CAAC,IAAI,cACxC,GAAG,CAAC,CAAC,IAAM,EAAE,EAAE;QAClB,6DAA6D;QAC7D,MAAM,wCAAwC,eAAe,MAAM,CACjE,CAAC,IAAM,CAAC,mBAAmB,QAAQ,CAAC,EAAE,EAAE;QAE1C,IAAI;QACJ,IAAI,iBAAiB,MAAM,KAAK,eAAe,MAAM,EAAE;YACrD,MAAM,aAAa,sCAAsC,GAAG,CAC1D,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;gBACtB,OAAO,CAAA,GAAA,2HAAA,CAAA,mCAAgC,AAAD,EACpC;oBAAE,MAAM;wBAAE,KAAK;wBAAS,IAAI;oBAAO;oBAAG,GAAG;oBAAK;gBAAc,GAC5D,cACA,OACA,oBAAoB,CAAC,GAAG,IAAI,EAAE,EAC9B,iBACA,8BAA8B;gBAC9B;YAEJ;YAEF,MAAM,EAAE,iBAAiB,EAAE,OAAO,EAAE,YAAY,EAAE,GAChD,+BACE,uCACA,YACA,gBACA,WACA,cACA,iBACA,eACA,2BAA2B;YAC3B;YAEJ,iBAAiB;YACjB,KAAK,MAAM,UAAU,QAAS;gBAC5B,MAAM,iBAAiB;oBACrB,cAAc;oBACd,QAAQ,CAAC,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,OAAO,MAAM,EAAE;oBAC9B,QAAQ,CAAC,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,OAAO,MAAM,EAAE;oBAC9B,WAAW,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,OAAO,MAAM,GAAG,aAAa,KAAK,GAAG;oBACtD,MAAM,OAAO,SAAS;gBACxB;gBACA,OAAO,MAAM,CAAC,IAAI,CAAC;YACrB;YACA,mBAAmB,IAAI,IAAI;YAC3B,MAAM,iBAAiB,CAAA,GAAA,+HAAA,CAAA,UAAG,AAAD,EAAE;YAC3B,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG;YACpC,WAAW,YACT,yHAAyH;aACxH,MAAM,CAAC,CAAC,YAAc,mBAAmB,QAAQ,CAAC,UAAU,MAAM,CAAC,EAAE,GACrE,GAAG,CAAC,CAAC;gBACJ,MAAM,SAAS,eAAe,IAAI,CAChC,CAAC,IAAM,EAAE,EAAE,KAAK,UAAU,MAAM,CAAC,EAAE;gBAErC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;gBAC5B,OAAO;oBACL,GAAG,SAAS;oBACZ,QAAQ;wBACN;4BACE,cAAc;4BACd,QACE,CAAC,CAAC,eAAe,iBAAiB,SAAS,IAC3C,mBAAmB,MAAM;4BAC3B,QAAQ,CAAC;4BACT,WAAW,CAAA,GAAA,mIAAA,CAAA,UAAK,AAAD,EAAE,UAAU,MAAM,GAAG,aAAa,KAAK,GAAG;4BACzD,QAAQ;4BACR,MAAM,UAAU,SAAS;wBAC3B;qBAED;oBACD,WAAW;wBACT,GAAG;wBACH,MAAM;4BAAE,KAAK;4BAAS,IAAI;wBAAO;wBACjC;oBACF;oBACA;gBACF;YACF;QACJ,OAAO;YACL,6DAA6D;YAC7D,WAAW,oCACT,kBACA,cACA,eACA,KAAK,GAAG;QAEZ;QACA,eAAe,IAAI,IAAI;QACvB,KAAK,MAAM,kBAAkB,mBAAoB;YAC/C,gBAAgB,CAAC,eAAe,IAAI;QACtC;QACA,MAAM,yBAAyB,OAAO,MAAM,CAAC,kBAAkB,MAAM,CACnE,CAAC,SAAW,SAAS;QAEvB,IAAI,uBAAuB,MAAM,KAAK,GAAG;QACzC,eAAe,KAAK,GAAG,IAAI;IAC7B;IAEA,MAAM,gBAAgB,yBACpB,gBACA,OACA,eAAe,MAAM,CAAC,CAAC,IACrB,iBAAiB,GAAG,CAAC,CAAC,KAAO,GAAG,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,IAEnD;IAGF,MAAM,kBAAkB,yBACtB,oBACA,OACA,eAAe,MAAM,CACnB,CAAC,IAAM,CAAC,iBAAiB,GAAG,CAAC,CAAC,IAAM,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,IAEzD;IAEF,MAAM,WAAW,CAAA,GAAA,8GAAA,CAAA,aAAU,AAAD,EACxB,cAAc,MAAM,CAAC,iBAAiB,GAAG,CAAC,CAAC,IAAM,EAAE,SAAS;IAG9D,OAAO;QAAE;QAAe;QAAiB;QAAgB;IAAS;AACpE;AAEO,MAAM,sCAAsC,CACjD,SACA,cACA,eACA;IAEA,OAAO,QAAQ,GAAG,CAAC,CAAC;QAClB,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;QAC5B,OAAO;YACL,SAAS;YACT,QAAQ;gBACN;oBACE,cAAc;oBACd,QAAQ,CAAC,eAAe,QAAQ,MAAM;oBACtC,QAAQ,CAAC;oBACT,WAAW;oBACX,QAAQ;oBACR,MAAM,8GAAA,CAAA,SAAM;gBACd;aACD;YACD,QAAQ,EAAE;YACV,WAAW,8GAAA,CAAA,SAAM;YACjB,WAAW;gBAAE,GAAG;gBAAK,MAAM;oBAAE,KAAK;oBAAS,IAAI;gBAAO;gBAAG;YAAc;YACvE,gBAAgB,EAAE;YAClB;QACF;IACF;AACF;AAEO,SAAS,uBAAuB,CAAS,EAAE,CAAS,EAAE,UAAU,KAAK;IAC1E,OAAO,KAAK,GAAG,CAAC,IAAI,KAAK;AAC3B"}},
    {"offset": {"line": 2673, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2680, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/new-bet.ts"],"sourcesContent":["import { sortBy, sumBy } from 'lodash'\n\nimport { Bet, fill, LimitBet } from './bet'\nimport {\n  calculateCpmmAmountToProb,\n  calculateCpmmAmountToProbIncludingFees,\n  calculateCpmmPurchase,\n  CpmmState,\n  getCpmmProbability,\n} from './calculate-cpmm'\nimport {\n  BinaryContract,\n  CPMMMultiContract,\n  CPMMNumericContract,\n  MAX_CPMM_PROB,\n  MAX_STONK_PROB,\n  MIN_CPMM_PROB,\n  MIN_STONK_PROB,\n  PseudoNumericContract,\n  StonkContract,\n} from './contract'\nimport { getFeesSplit, getTakerFee, noFees } from './fees'\nimport { addObjects, removeUndefinedProps } from './util/object'\nimport {\n  floatingEqual,\n  floatingGreaterEqual,\n  floatingLesserEqual,\n} from './util/math'\nimport { Answer } from './answer'\nimport {\n  ArbitrageBetArray,\n  buyNoSharesUntilAnswersSumToOne,\n  calculateCpmmMultiArbitrageBet,\n  calculateCpmmMultiArbitrageYesBets,\n} from './calculate-cpmm-arbitrage'\nimport { APIError } from 'common/api/utils'\n\nexport type CandidateBet<T extends Bet = Bet> = Omit<T, 'id' | 'userId'>\n\nexport type BetInfo = {\n  newBet: CandidateBet\n  newPool?: { [outcome: string]: number }\n  newTotalLiquidity?: number\n  newP?: number\n}\n\nconst computeFill = (\n  amount: number,\n  outcome: 'YES' | 'NO',\n  limitProb: number | undefined,\n  cpmmState: CpmmState,\n  matchedBet: LimitBet | undefined,\n  matchedBetUserBalance: number | undefined,\n  freeFees?: boolean\n) => {\n  const prob = getCpmmProbability(cpmmState.pool, cpmmState.p)\n\n  if (\n    limitProb !== undefined &&\n    (outcome === 'YES'\n      ? floatingGreaterEqual(prob, limitProb) &&\n        (matchedBet?.limitProb ?? 1) > limitProb\n      : floatingLesserEqual(prob, limitProb) &&\n        (matchedBet?.limitProb ?? 0) < limitProb)\n  ) {\n    // No fill.\n    return undefined\n  }\n\n  const timestamp = Date.now()\n\n  if (\n    !matchedBet ||\n    (outcome === 'YES'\n      ? !floatingGreaterEqual(prob, matchedBet.limitProb)\n      : !floatingLesserEqual(prob, matchedBet.limitProb))\n  ) {\n    // Fill from pool.\n    const limit = !matchedBet\n      ? limitProb\n      : outcome === 'YES'\n      ? Math.min(matchedBet.limitProb, limitProb ?? 1)\n      : Math.max(matchedBet.limitProb, limitProb ?? 0)\n\n    const buyAmount =\n      limit === undefined\n        ? amount\n        : Math.min(\n            amount,\n            freeFees\n              ? calculateCpmmAmountToProb(cpmmState, limit, outcome)\n              : calculateCpmmAmountToProbIncludingFees(\n                  cpmmState,\n                  limit,\n                  outcome\n                )\n          )\n\n    const { shares, newPool, newP, fees } = calculateCpmmPurchase(\n      cpmmState,\n      buyAmount,\n      outcome,\n      freeFees\n    )\n    const newState = {\n      pool: newPool,\n      p: newP,\n      collectedFees: addObjects(fees, cpmmState.collectedFees),\n    }\n\n    return {\n      maker: {\n        matchedBetId: null,\n        shares,\n        amount: buyAmount,\n        state: newState,\n        timestamp,\n      },\n      taker: {\n        matchedBetId: null,\n        shares,\n        amount: buyAmount,\n        timestamp,\n        fees,\n      },\n    }\n  }\n\n  // Fill from matchedBet.\n  const amountRemaining = matchedBet.orderAmount - matchedBet.amount\n  const matchableUserBalance =\n    matchedBetUserBalance && matchedBetUserBalance < 0\n      ? 0\n      : matchedBetUserBalance\n  const amountToFill = Math.min(\n    amountRemaining,\n    matchableUserBalance ?? amountRemaining\n  )\n\n  const takerPrice =\n    outcome === 'YES' ? matchedBet.limitProb : 1 - matchedBet.limitProb\n  const makerPrice =\n    outcome === 'YES' ? 1 - matchedBet.limitProb : matchedBet.limitProb\n\n  const feesOnOneShare = freeFees ? 0 : getTakerFee(1, takerPrice)\n  const maxTakerShares = amount / (takerPrice + feesOnOneShare)\n  const maxMakerShares = amountToFill / makerPrice\n  const shares = Math.min(maxTakerShares, maxMakerShares)\n\n  const takerFee = freeFees ? 0 : getTakerFee(shares, takerPrice)\n  const fees = getFeesSplit(takerFee)\n\n  const maker = {\n    bet: matchedBet,\n    matchedBetId: 'taker',\n    amount: shares * makerPrice,\n    shares,\n    timestamp,\n  }\n  const taker = {\n    matchedBetId: matchedBet.id,\n    amount: shares * takerPrice + takerFee,\n    shares,\n    timestamp,\n    fees,\n  }\n  return { maker, taker }\n}\n\nexport const computeFills = (\n  state: CpmmState,\n  outcome: 'YES' | 'NO',\n  betAmount: number,\n  initialLimitProb: number | undefined,\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number | undefined },\n  limitProbs?: { max: number; min: number },\n  freeFees?: boolean\n) => {\n  if (isNaN(betAmount)) {\n    throw new Error('Invalid bet amount: ${betAmount}')\n  }\n  if (isNaN(initialLimitProb ?? 0)) {\n    throw new Error('Invalid limitProb: ${limitProb}')\n  }\n  const now = Date.now()\n  const { max, min } = limitProbs ?? {}\n  const limit = initialLimitProb ?? (outcome === 'YES' ? max : min)\n  const limitProb = !limit\n    ? undefined\n    : limit > MAX_CPMM_PROB\n    ? MAX_CPMM_PROB\n    : limit < MIN_CPMM_PROB\n    ? MIN_CPMM_PROB\n    : limit\n\n  const sortedBets = sortBy(\n    unfilledBets.filter(\n      (bet) =>\n        bet.outcome !== outcome && (bet.expiresAt ? bet.expiresAt > now : true)\n    ),\n    (bet) => (outcome === 'YES' ? bet.limitProb : -bet.limitProb),\n    (bet) => bet.createdTime\n  )\n\n  const takers: fill[] = []\n  const makers: {\n    bet: LimitBet\n    amount: number\n    shares: number\n    timestamp: number\n  }[] = []\n  const ordersToCancel: LimitBet[] = []\n\n  let amount = betAmount\n  let cpmmState = { ...state }\n  let totalFees = noFees\n  const currentBalanceByUserId = { ...balanceByUserId }\n\n  let i = 0\n  while (true) {\n    const matchedBet: LimitBet | undefined = sortedBets[i]\n    const fill = computeFill(\n      amount,\n      outcome,\n      limitProb,\n      cpmmState,\n      matchedBet,\n      currentBalanceByUserId[matchedBet?.userId ?? ''],\n      freeFees\n    )\n\n    if (!fill) break\n\n    const { taker, maker } = fill\n\n    if (maker.matchedBetId === null) {\n      // Matched against pool.\n      cpmmState = maker.state\n      takers.push(taker)\n    } else {\n      // Matched against bet.\n      i++\n      const { userId } = maker.bet\n      const makerBalance = currentBalanceByUserId[userId]\n      if (makerBalance !== undefined) {\n        if (maker.amount > 0) {\n          currentBalanceByUserId[userId] = makerBalance - maker.amount\n        }\n        const adjustedMakerBalance = currentBalanceByUserId[userId]\n        if (adjustedMakerBalance !== undefined && adjustedMakerBalance <= 0) {\n          // Now they've insufficient balance. Cancel maker bet.\n          ordersToCancel.push(maker.bet)\n        }\n      }\n      if (floatingEqual(maker.amount, 0)) continue\n\n      takers.push(taker)\n      makers.push(maker)\n    }\n\n    totalFees = addObjects(totalFees, taker.fees)\n    amount -= taker.amount\n\n    if (floatingEqual(amount, 0)) break\n  }\n\n  return { takers, makers, totalFees, cpmmState, ordersToCancel }\n}\n\nexport const computeCpmmBet = (\n  cpmmState: CpmmState,\n  outcome: 'YES' | 'NO',\n  initialBetAmount: number,\n  limitProb: number | undefined,\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  limitProbs?: { max: number; min: number }\n) => {\n  const {\n    takers,\n    makers,\n    cpmmState: afterCpmmState,\n    ordersToCancel,\n    totalFees,\n  } = computeFills(\n    cpmmState,\n    outcome,\n    initialBetAmount,\n    limitProb,\n    unfilledBets,\n    balanceByUserId,\n    limitProbs\n  )\n  const probBefore = getCpmmProbability(cpmmState.pool, cpmmState.p)\n  const probAfter = getCpmmProbability(afterCpmmState.pool, afterCpmmState.p)\n\n  const takerAmount = sumBy(takers, 'amount')\n  const takerShares = sumBy(takers, 'shares')\n  const betAmount = limitProb ? initialBetAmount : takerAmount\n  const isFilled = floatingEqual(betAmount, takerAmount)\n\n  return {\n    orderAmount: betAmount,\n    amount: takerAmount,\n    shares: takerShares,\n    isFilled,\n    fills: takers,\n    probBefore,\n    probAfter,\n    makers,\n    ordersToCancel,\n    fees: totalFees,\n    pool: afterCpmmState.pool,\n    p: afterCpmmState.p,\n  }\n}\n\nexport const getBinaryCpmmBetInfo = (\n  contract: BinaryContract | PseudoNumericContract | StonkContract,\n  outcome: 'YES' | 'NO',\n  betAmount: number,\n  limitProb: number | undefined,\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  expiresAt?: number\n) => {\n  const cpmmState = {\n    pool: contract.pool,\n    p: contract.p,\n    collectedFees: contract.collectedFees,\n  }\n  const {\n    orderAmount,\n    amount,\n    shares,\n    isFilled,\n    fills,\n    probBefore,\n    probAfter,\n    makers,\n    ordersToCancel,\n    pool,\n    p,\n    fees,\n  } = computeCpmmBet(\n    cpmmState,\n    outcome,\n    betAmount,\n    limitProb,\n    unfilledBets,\n    balanceByUserId,\n    contract.outcomeType === 'STONK'\n      ? { max: MAX_STONK_PROB, min: MIN_STONK_PROB }\n      : { max: MAX_CPMM_PROB, min: MIN_CPMM_PROB }\n  )\n  const newBet: CandidateBet = removeUndefinedProps({\n    orderAmount,\n    amount,\n    shares,\n    limitProb,\n    isFilled,\n    isCancelled: false,\n    fills,\n    contractId: contract.id,\n    outcome,\n    probBefore,\n    probAfter,\n    loanAmount: 0,\n    createdTime: Date.now(),\n    fees,\n    isRedemption: false,\n    visibility: contract.visibility,\n    expiresAt,\n  })\n\n  return {\n    newBet,\n    newPool: pool,\n    newP: p,\n    makers,\n    ordersToCancel,\n  }\n}\n\nexport const getNewMultiCpmmBetInfo = (\n  contract: CPMMMultiContract | CPMMNumericContract,\n  answers: Answer[],\n  answer: Answer,\n  outcome: 'YES' | 'NO',\n  betAmount: number,\n  limitProb: number | undefined,\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  expiresAt?: number\n) => {\n  if (contract.shouldAnswersSumToOne) {\n    return getNewMultiCpmmBetsInfoSumsToOne(\n      contract,\n      answers,\n      [answer],\n      outcome,\n      betAmount,\n      limitProb,\n      unfilledBets,\n      balanceByUserId,\n      expiresAt\n    )[0]\n  }\n\n  const { poolYes, poolNo } = answer\n  const pool = { YES: poolYes, NO: poolNo }\n  const cpmmState = { pool, p: 0.5, collectedFees: contract.collectedFees }\n\n  const answerUnfilledBets = unfilledBets.filter(\n    (b) => b.answerId === answer.id\n  )\n\n  const {\n    amount,\n    fills,\n    isFilled,\n    makers,\n    ordersToCancel,\n    probAfter,\n    probBefore,\n    shares,\n    pool: newPool,\n    fees,\n  } = computeCpmmBet(\n    cpmmState,\n    outcome,\n    betAmount,\n    limitProb,\n    answerUnfilledBets,\n    balanceByUserId,\n    { max: MAX_CPMM_PROB, min: MIN_CPMM_PROB }\n  )\n\n  const newBet: CandidateBet = removeUndefinedProps({\n    contractId: contract.id,\n    outcome,\n    orderAmount: betAmount,\n    limitProb,\n    isCancelled: false,\n    amount,\n    loanAmount: 0,\n    shares,\n    answerId: answer.id,\n    fills,\n    isFilled,\n    probBefore,\n    probAfter,\n    createdTime: Date.now(),\n    fees,\n    isRedemption: false,\n    visibility: contract.visibility,\n    expiresAt,\n  })\n\n  return { newBet, newPool, makers, ordersToCancel }\n}\n\nexport const getNewMultiCpmmBetsInfo = (\n  contract: CPMMMultiContract | CPMMNumericContract,\n  answers: Answer[],\n  answersToBuy: Answer[],\n  outcome: 'YES',\n  betAmount: number,\n  limitProb: number | undefined,\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  expiresAt?: number\n) => {\n  if (contract.shouldAnswersSumToOne) {\n    return getNewMultiCpmmBetsInfoSumsToOne(\n      contract,\n      answers,\n      answersToBuy,\n      outcome,\n      betAmount,\n      limitProb,\n      unfilledBets,\n      balanceByUserId,\n      expiresAt\n    )\n  } else {\n    throw new APIError(400, 'Not yet implemented')\n  }\n}\n\nconst getNewMultiCpmmBetsInfoSumsToOne = (\n  contract: CPMMMultiContract | CPMMNumericContract,\n  answers: Answer[],\n  answersToBuy: Answer[],\n  outcome: 'YES' | 'NO',\n  initialBetAmount: number,\n  limitProb: number | undefined,\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  expiresAt?: number\n) => {\n  const newBetResults: ArbitrageBetArray = []\n  const isMultiBuy = answersToBuy.length > 1\n  const otherBetsResults: ArbitrageBetArray = []\n  if (answersToBuy.length === 1) {\n    const { newBetResult, otherBetResults } = calculateCpmmMultiArbitrageBet(\n      answers,\n      answersToBuy[0],\n      outcome,\n      initialBetAmount,\n      limitProb,\n      unfilledBets,\n      balanceByUserId,\n      contract.collectedFees\n    )\n    if (newBetResult.takers.length === 0 && !limitProb) {\n      throw new APIError(400, 'Betting allowed only between 1-99%.')\n    }\n    newBetResults.push(...([newBetResult] as ArbitrageBetArray))\n    if (otherBetResults.length > 0)\n      otherBetsResults.push(...(otherBetResults as ArbitrageBetArray))\n  } else {\n    // NOTE: only accepts YES bets atm\n    const multiRes = calculateCpmmMultiArbitrageYesBets(\n      answers,\n      answersToBuy,\n      initialBetAmount,\n      limitProb,\n      unfilledBets,\n      balanceByUserId,\n      contract.collectedFees\n    )\n    newBetResults.push(...multiRes.newBetResults)\n    otherBetsResults.push(...multiRes.otherBetResults)\n  }\n  const now = Date.now()\n  return newBetResults.map((newBetResult, i) => {\n    const { takers, cpmmState, answer: updatedAnswer, totalFees } = newBetResult\n    const probAfter = getCpmmProbability(cpmmState.pool, cpmmState.p)\n    const takerAmount = sumBy(takers, 'amount')\n    const takerShares = sumBy(takers, 'shares')\n    const answer = answers.find((a) => a.id === updatedAnswer.id)!\n    const multiBuyTakerAmount = sumBy(\n      newBetResults.flatMap((r) => r.takers),\n      'amount'\n    )\n    const betAmount = limitProb\n      ? initialBetAmount\n      : isMultiBuy\n      ? multiBuyTakerAmount\n      : takerAmount\n\n    const newBet: CandidateBet = removeUndefinedProps({\n      orderAmount: betAmount,\n      amount: takerAmount,\n      shares: takerShares,\n      isFilled: isMultiBuy\n        ? floatingEqual(multiBuyTakerAmount, betAmount)\n        : floatingEqual(takerAmount, betAmount),\n      fills: takers,\n      contractId: contract.id,\n      outcome,\n      limitProb,\n      isCancelled: false,\n      loanAmount: 0,\n      answerId: answer.id,\n      probBefore: answer.prob,\n      probAfter,\n      createdTime: now,\n      fees: totalFees,\n      isRedemption: false,\n      visibility: contract.visibility,\n      expiresAt,\n    })\n\n    const otherResultsWithBet = otherBetsResults.map((result) => {\n      const {\n        answer: updatedAnswer,\n        takers,\n        cpmmState,\n        outcome,\n        totalFees,\n      } = result\n      const answer = answers.find((a) => a.id === updatedAnswer.id)!\n      const probBefore = answer.prob\n      const probAfter = getCpmmProbability(cpmmState.pool, cpmmState.p)\n\n      const bet: CandidateBet = removeUndefinedProps({\n        contractId: contract.id,\n        outcome,\n        orderAmount: 0,\n        isCancelled: false,\n        amount: 0,\n        loanAmount: 0,\n        shares: 0,\n        answerId: answer.id,\n        fills: takers,\n        isFilled: true,\n        probBefore,\n        probAfter,\n        createdTime: now,\n        fees: totalFees,\n        isRedemption: true,\n        visibility: contract.visibility,\n      })\n      return {\n        ...result,\n        bet,\n      }\n    })\n\n    return {\n      newBet,\n      newPool: cpmmState.pool,\n      makers: newBetResult.makers,\n      ordersToCancel: newBetResult.ordersToCancel,\n      otherBetResults: i === 0 ? otherResultsWithBet : [],\n    }\n  })\n}\n\nexport const getBetDownToOneMultiBetInfo = (\n  contract: CPMMMultiContract,\n  answers: Answer[],\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number }\n) => {\n  const { noBetResults, extraMana } = buyNoSharesUntilAnswersSumToOne(\n    answers,\n    unfilledBets,\n    balanceByUserId,\n    contract.collectedFees\n  )\n\n  const now = Date.now()\n\n  const betResults = noBetResults.map((result) => {\n    const { answer, takers, cpmmState, totalFees } = result\n    const probBefore = answer.prob\n    const probAfter = getCpmmProbability(cpmmState.pool, cpmmState.p)\n\n    const bet: CandidateBet = removeUndefinedProps({\n      contractId: contract.id,\n      outcome: 'NO',\n      orderAmount: 0,\n      isCancelled: false,\n      amount: 0,\n      loanAmount: 0,\n      shares: 0,\n      answerId: answer.id,\n      fills: takers,\n      isFilled: true,\n      probBefore,\n      probAfter,\n      createdTime: now,\n      fees: totalFees,\n      isRedemption: true,\n      visibility: contract.visibility,\n    })\n    return {\n      ...result,\n      bet,\n    }\n  })\n\n  return {\n    betResults,\n    extraMana,\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3080, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3087, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/calculate-cpmm.ts"],"sourcesContent":["import { groupBy, mapValues, minBy, omitBy, sum, sumBy } from 'lodash'\nimport { LimitBet } from './bet'\nimport { Fees, getFeesSplit, getTakerFee, noFees } from './fees'\nimport { LiquidityProvision } from './liquidity-provision'\nimport { computeFills } from './new-bet'\nimport { binarySearch } from './util/algos'\nimport { EPSILON, floatingEqual } from './util/math'\nimport {\n  calculateCpmmMultiArbitrageSellNo,\n  calculateCpmmMultiArbitrageSellYes,\n} from './calculate-cpmm-arbitrage'\nimport { Answer } from './answer'\nimport { CPMMContract, CPMMMultiContract } from 'common/contract'\n\nexport type CpmmState = {\n  pool: { [outcome: string]: number }\n  p: number\n  collectedFees: Fees\n}\n\nexport function getCpmmProbability(\n  pool: { [outcome: string]: number },\n  p: number\n) {\n  const { YES, NO } = pool\n  return (p * NO) / ((1 - p) * YES + p * NO)\n}\n\nexport function getCpmmProbabilityAfterBetBeforeFees(\n  state: CpmmState,\n  outcome: string,\n  bet: number\n) {\n  const { pool, p } = state\n  const shares = calculateCpmmShares(pool, p, bet, outcome)\n  const { YES: y, NO: n } = pool\n\n  const [newY, newN] =\n    outcome === 'YES'\n      ? [y - shares + bet, n + bet]\n      : [y + bet, n - shares + bet]\n\n  return getCpmmProbability({ YES: newY, NO: newN }, p)\n}\n\nexport function getCpmmOutcomeProbabilityAfterBet(\n  state: CpmmState,\n  outcome: string,\n  bet: number\n) {\n  const { newPool } = calculateCpmmPurchase(state, bet, outcome)\n  const p = getCpmmProbability(newPool, state.p)\n  return outcome === 'NO' ? 1 - p : p\n}\n\n// before liquidity fee\nexport function calculateCpmmShares(\n  pool: {\n    [outcome: string]: number\n  },\n  p: number,\n  betAmount: number,\n  betChoice: string\n) {\n  if (betAmount === 0) return 0\n\n  const { YES: y, NO: n } = pool\n  const k = y ** p * n ** (1 - p)\n\n  return betChoice === 'YES'\n    ? // https://www.wolframalpha.com/input?i=%28y%2Bb-s%29%5E%28p%29*%28n%2Bb%29%5E%281-p%29+%3D+k%2C+solve+s\n      y + betAmount - (k * (betAmount + n) ** (p - 1)) ** (1 / p)\n    : n + betAmount - (k * (betAmount + y) ** -p) ** (1 / (1 - p))\n}\n\nexport function getCpmmFees(\n  state: CpmmState,\n  betAmount: number,\n  outcome: string\n) {\n  // Do a few iterations toward average probability of the bet minus fees.\n  // Charging fees means the bet amount is lower and the average probability moves slightly less far.\n  let fee = 0\n  for (let i = 0; i < 10; i++) {\n    const betAmountAfterFee = betAmount - fee\n    const shares = calculateCpmmShares(\n      state.pool,\n      state.p,\n      betAmountAfterFee,\n      outcome\n    )\n    const averageProb = betAmountAfterFee / shares\n    fee = getTakerFee(shares, averageProb)\n  }\n\n  const totalFees = betAmount === 0 ? 0 : fee\n  const fees = getFeesSplit(totalFees)\n\n  const remainingBet = betAmount - totalFees\n\n  return { remainingBet, totalFees, fees }\n}\n\nexport function calculateCpmmSharesAfterFee(\n  state: CpmmState,\n  bet: number,\n  outcome: string\n) {\n  const { pool, p } = state\n  const { remainingBet } = getCpmmFees(state, bet, outcome)\n\n  return calculateCpmmShares(pool, p, remainingBet, outcome)\n}\n\nexport function calculateCpmmPurchase(\n  state: CpmmState,\n  bet: number,\n  outcome: string,\n  freeFees?: boolean\n) {\n  const { pool, p } = state\n  const { remainingBet, fees } = freeFees\n    ? {\n        remainingBet: bet,\n        fees: noFees,\n      }\n    : getCpmmFees(state, bet, outcome)\n\n  const shares = calculateCpmmShares(pool, p, remainingBet, outcome)\n  const { YES: y, NO: n } = pool\n\n  const { liquidityFee: fee } = fees\n\n  const [newY, newN] =\n    outcome === 'YES'\n      ? [y - shares + remainingBet + fee, n + remainingBet + fee]\n      : [y + remainingBet + fee, n - shares + remainingBet + fee]\n\n  const postBetPool = { YES: newY, NO: newN }\n\n  const { newPool, newP } = addCpmmLiquidity(postBetPool, p, fee)\n\n  return { shares, newPool, newP, fees }\n}\n\nexport function calculateCpmmAmountToProb(\n  state: CpmmState,\n  prob: number,\n  outcome: 'YES' | 'NO'\n) {\n  if (prob <= 0 || prob >= 1 || isNaN(prob)) return Infinity\n  if (outcome === 'NO') prob = 1 - prob\n\n  const { pool, p } = state\n  const { YES: y, NO: n } = pool\n  const k = y ** p * n ** (1 - p)\n  return outcome === 'YES'\n    ? // https://www.wolframalpha.com/input?i=-1+%2B+t+-+((-1+%2B+p)+t+(k%2F(n+%2B+b))^(1%2Fp))%2Fp+solve+b\n      ((p * (prob - 1)) / ((p - 1) * prob)) ** -p *\n        (k - n * ((p * (prob - 1)) / ((p - 1) * prob)) ** p)\n    : (((1 - p) * (prob - 1)) / (-p * prob)) ** (p - 1) *\n        (k - y * (((1 - p) * (prob - 1)) / (-p * prob)) ** (1 - p))\n}\n\nexport function calculateCpmmAmountToProbIncludingFees(\n  state: CpmmState,\n  prob: number,\n  outcome: 'YES' | 'NO'\n) {\n  const amount = calculateCpmmAmountToProb(state, prob, outcome)\n  const shares = calculateCpmmShares(state.pool, state.p, amount, outcome)\n  const averageProb = amount / shares\n  const fees = getTakerFee(shares, averageProb)\n  return amount + fees\n}\n\nexport function calculateCpmmAmountToBuySharesFixedP(\n  state: CpmmState,\n  shares: number,\n  outcome: 'YES' | 'NO'\n) {\n  if (!floatingEqual(state.p, 0.5)) {\n    throw new Error(\n      'calculateAmountToBuySharesFixedP only works for p = 0.5, got ' + state.p\n    )\n  }\n\n  const { YES: y, NO: n } = state.pool\n  if (outcome === 'YES') {\n    // https://www.wolframalpha.com/input?i=%28y%2Bb-s%29%5E0.5+*+%28n%2Bb%29%5E0.5+%3D+y+%5E+0.5+*+n+%5E+0.5%2C+solve+b\n    return (\n      (shares - y - n + Math.sqrt(4 * n * shares + (y + n - shares) ** 2)) / 2\n    )\n  }\n  return (\n    (shares - y - n + Math.sqrt(4 * y * shares + (y + n - shares) ** 2)) / 2\n  )\n}\n\n// Faster version assuming p = 0.5\nexport function calculateAmountToBuySharesFixedP(\n  state: CpmmState,\n  shares: number,\n  outcome: 'YES' | 'NO',\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  freeFees?: boolean\n) {\n  const { takers } = computeFills(\n    state,\n    outcome,\n    // First, bet more than required to get shares.\n    shares,\n    undefined,\n    unfilledBets,\n    balanceByUserId,\n    undefined,\n    freeFees\n  )\n\n  let currShares = 0\n  let currAmount = 0\n  for (const fill of takers) {\n    const { amount: fillAmount, shares: fillShares, matchedBetId } = fill\n\n    if (floatingEqual(currShares + fillShares, shares)) {\n      return currAmount + fillAmount\n    }\n    if (currShares + fillShares > shares) {\n      // This is first fill that goes over the required shares.\n      if (matchedBetId) {\n        // Match a portion of the fill to get the exact shares.\n        const remainingShares = shares - currShares\n        const remainingAmount = fillAmount * (remainingShares / fillShares)\n        return currAmount + remainingAmount\n      }\n      // Last fill was from AMM. Break to compute the cpmmState at this point.\n      break\n    }\n\n    currShares += fillShares\n    currAmount += fillAmount\n  }\n\n  const remaningShares = shares - currShares\n\n  // Recompute up to currAmount to get the current cpmmState.\n  const { cpmmState } = computeFills(\n    state,\n    outcome,\n    currAmount,\n    undefined,\n    unfilledBets,\n    balanceByUserId,\n    undefined,\n    freeFees\n  )\n  const fillAmount = calculateCpmmAmountToBuySharesFixedP(\n    cpmmState,\n    remaningShares,\n    outcome\n  )\n  const fillAmountFees = freeFees\n    ? 0\n    : getTakerFee(remaningShares, fillAmount / remaningShares)\n  return currAmount + fillAmount + fillAmountFees\n}\n\nexport function calculateCpmmMultiSumsToOneSale(\n  answers: Answer[],\n  answerToSell: Answer,\n  shares: number,\n  outcome: 'YES' | 'NO',\n  limitProb: number | undefined,\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  collectedFees: Fees\n) {\n  if (Math.round(shares) < 0) {\n    throw new Error('Cannot sell non-positive shares')\n  }\n\n  const { newBetResult, otherBetResults } =\n    outcome === 'YES'\n      ? calculateCpmmMultiArbitrageSellYes(\n          answers,\n          answerToSell,\n          shares,\n          limitProb,\n          unfilledBets,\n          balanceByUserId,\n          collectedFees\n        )\n      : calculateCpmmMultiArbitrageSellNo(\n          answers,\n          answerToSell,\n          shares,\n          limitProb,\n          unfilledBets,\n          balanceByUserId,\n          collectedFees\n        )\n\n  const buyAmount = sumBy(newBetResult.takers, (taker) => taker.amount)\n  // Transform buys of opposite outcome into sells.\n  const saleTakers = newBetResult.takers.map((taker) => ({\n    ...taker,\n    // You bought opposite shares, which combine with existing shares, removing them.\n    shares: -taker.shares,\n    // Opposite shares combine with shares you are selling for Ṁ of shares.\n    // You paid taker.amount for the opposite shares.\n    // Take the negative because this is money you gain.\n    amount: -(taker.shares - taker.amount),\n    isSale: true,\n  }))\n\n  const saleValue = -sumBy(saleTakers, (taker) => taker.amount)\n\n  const transformedNewBetResult = {\n    ...newBetResult,\n    takers: saleTakers,\n    outcome,\n  }\n\n  return {\n    saleValue,\n    buyAmount,\n    newBetResult: transformedNewBetResult,\n    otherBetResults,\n  }\n}\n\nexport function calculateAmountToBuyShares(\n  state: CpmmState,\n  shares: number,\n  outcome: 'YES' | 'NO',\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number }\n) {\n  const prob = getCpmmProbability(state.pool, state.p)\n  const minAmount = shares * (outcome === 'YES' ? prob : 1 - prob)\n\n  // Search for amount between bounds.\n  // Min share price is based on current probability, and max is Ṁ1 each.\n  return binarySearch(minAmount, shares, (amount) => {\n    const { takers } = computeFills(\n      state,\n      outcome,\n      amount,\n      undefined,\n      unfilledBets,\n      balanceByUserId\n    )\n\n    const totalShares = sumBy(takers, (taker) => taker.shares)\n    return totalShares - shares\n  })\n}\n\nexport function calculateCpmmAmountToBuyShares(\n  contract: CPMMContract | CPMMMultiContract,\n  shares: number,\n  outcome: 'YES' | 'NO',\n  allUnfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number },\n  answer?: Answer\n) {\n  const startCpmmState =\n    contract.mechanism === 'cpmm-1'\n      ? contract\n      : {\n          pool: { YES: answer!.poolYes, NO: answer!.poolNo },\n          p: 0.5,\n          collectedFees: contract.collectedFees,\n        }\n\n  const unfilledBets = answer?.id\n    ? allUnfilledBets.filter((b) => b.answerId === answer.id)\n    : allUnfilledBets\n\n  if (contract.mechanism === 'cpmm-1') {\n    return calculateAmountToBuyShares(\n      startCpmmState,\n      shares,\n      outcome,\n      unfilledBets,\n      balanceByUserId\n    )\n  } else if (contract.mechanism === 'cpmm-multi-1') {\n    return calculateAmountToBuySharesFixedP(\n      startCpmmState,\n      shares,\n      outcome,\n      unfilledBets,\n      balanceByUserId\n    )\n  } else {\n    throw new Error('Only works for cpmm-1 and cpmm-multi-1')\n  }\n}\n\nexport function calculateCpmmSale(\n  state: CpmmState,\n  shares: number,\n  outcome: 'YES' | 'NO',\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number }\n) {\n  if (Math.round(shares) < 0) {\n    throw new Error('Cannot sell non-positive shares')\n  }\n\n  const oppositeOutcome = outcome === 'YES' ? 'NO' : 'YES'\n  const buyAmount = calculateAmountToBuyShares(\n    state,\n    shares,\n    oppositeOutcome,\n    unfilledBets,\n    balanceByUserId\n  )\n\n  const { cpmmState, makers, takers, totalFees, ordersToCancel } = computeFills(\n    state,\n    oppositeOutcome,\n    buyAmount,\n    undefined,\n    unfilledBets,\n    balanceByUserId\n  )\n\n  // Transform buys of opposite outcome into sells.\n  const saleTakers = takers.map((taker) => ({\n    ...taker,\n    // You bought opposite shares, which combine with existing shares, removing them.\n    shares: -taker.shares,\n    // Opposite shares combine with shares you are selling for Ṁ of shares.\n    // You paid taker.amount for the opposite shares.\n    // Take the negative because this is money you gain.\n    amount: -(taker.shares - taker.amount),\n    isSale: true,\n  }))\n\n  const saleValue = -sumBy(saleTakers, (taker) => taker.amount)\n\n  return {\n    saleValue,\n    buyAmount,\n    cpmmState,\n    fees: totalFees,\n    makers,\n    takers: saleTakers,\n    ordersToCancel,\n  }\n}\n\nexport function getCpmmProbabilityAfterSale(\n  state: CpmmState,\n  shares: number,\n  outcome: 'YES' | 'NO',\n  unfilledBets: LimitBet[],\n  balanceByUserId: { [userId: string]: number }\n) {\n  const { cpmmState } = calculateCpmmSale(\n    state,\n    shares,\n    outcome,\n    unfilledBets,\n    balanceByUserId\n  )\n  return getCpmmProbability(cpmmState.pool, cpmmState.p)\n}\n\nexport function getCpmmLiquidity(\n  pool: { [outcome: string]: number },\n  p: number\n) {\n  const { YES, NO } = pool\n  return YES ** p * NO ** (1 - p)\n}\n\nexport function getMultiCpmmLiquidity(pool: { YES: number; NO: number }) {\n  return getCpmmLiquidity(pool, 0.5)\n}\n\nexport function addCpmmLiquidity(\n  pool: { [outcome: string]: number },\n  p: number,\n  amount: number\n) {\n  const prob = getCpmmProbability(pool, p)\n\n  //https://www.wolframalpha.com/input?i=p%28n%2Bb%29%2F%28%281-p%29%28y%2Bb%29%2Bp%28n%2Bb%29%29%3Dq%2C+solve+p\n  const { YES: y, NO: n } = pool\n  const numerator = prob * (amount + y)\n  const denominator = amount - n * (prob - 1) + prob * y\n  const newP = numerator / denominator\n\n  const newPool = { YES: y + amount, NO: n + amount }\n\n  const oldLiquidity = getCpmmLiquidity(pool, newP)\n  const newLiquidity = getCpmmLiquidity(newPool, newP)\n  const liquidity = newLiquidity - oldLiquidity\n\n  return { newPool, liquidity, newP }\n}\n\nexport function addCpmmLiquidityFixedP(\n  pool: { YES: number; NO: number },\n  amount: number\n) {\n  const prob = getCpmmProbability(pool, 0.5)\n  const newPool = { ...pool }\n  const sharesThrownAway = { YES: 0, NO: 0 }\n\n  // Throws away some shares so that prob is maintained.\n  if (prob < 0.5) {\n    newPool.YES += amount\n    newPool.NO += (prob / (1 - prob)) * amount\n    sharesThrownAway.NO = amount - (prob / (1 - prob)) * amount\n  } else {\n    newPool.NO += amount\n    newPool.YES += ((1 - prob) / prob) * amount\n    sharesThrownAway.YES = amount - ((1 - prob) / prob) * amount\n  }\n\n  const oldLiquidity = getMultiCpmmLiquidity(pool)\n  const newLiquidity = getMultiCpmmLiquidity(newPool)\n  const liquidity = newLiquidity - oldLiquidity\n\n  return { newPool, liquidity, sharesThrownAway }\n}\n\nexport function addCpmmMultiLiquidityToAnswersIndependently(\n  pools: { [answerId: string]: { YES: number; NO: number } },\n  amount: number\n) {\n  const amountPerAnswer = amount / Object.keys(pools).length\n  return mapValues(\n    pools,\n    (pool) => addCpmmLiquidityFixedP(pool, amountPerAnswer).newPool\n  )\n}\n\nexport function addCpmmMultiLiquidityAnswersSumToOne(\n  pools: { [answerId: string]: { YES: number; NO: number } },\n  amount: number\n) {\n  const answerIds = Object.keys(pools)\n  const numAnswers = answerIds.length\n\n  const newPools = { ...pools }\n\n  let amountRemaining = amount\n  while (amountRemaining > EPSILON) {\n    const yesSharesThrownAway: { [answerId: string]: number } =\n      Object.fromEntries(answerIds.map((answerId) => [answerId, 0]))\n\n    for (const [answerId, pool] of Object.entries(newPools)) {\n      const { newPool, sharesThrownAway } = addCpmmLiquidityFixedP(\n        pool,\n        amountRemaining / numAnswers\n      )\n      newPools[answerId] = newPool\n\n      yesSharesThrownAway[answerId] += sharesThrownAway.YES\n      const otherAnswerIds = answerIds.filter((id) => id !== answerId)\n      for (const otherAnswerId of otherAnswerIds) {\n        // Convert NO shares into YES shares for each other answer.\n        yesSharesThrownAway[otherAnswerId] += sharesThrownAway.NO\n      }\n    }\n\n    const minSharesThrownAway = Math.min(...Object.values(yesSharesThrownAway))\n    amountRemaining = minSharesThrownAway\n  }\n  return newPools\n}\n\n// Must be at least this many yes and no shares\nexport const MINIMUM_LIQUIDITY = 100\n\nexport function removeCpmmLiquidity(\n  pool: { [outcome: string]: number },\n  p: number,\n  amount: number\n) {\n  const { newPool, liquidity, newP } = addCpmmLiquidity(pool, p, -1 * amount)\n\n  const error =\n    newPool.YES < MINIMUM_LIQUIDITY || newPool.NO < MINIMUM_LIQUIDITY\n\n  return { newPool, liquidity, newP, error }\n}\n\nexport function maximumRemovableLiquidity(pool: { [outcome: string]: number }) {\n  const { YES: y, NO: n } = pool\n  return Math.max(Math.min(y, n) - MINIMUM_LIQUIDITY, 0)\n}\n\nexport function getCpmmLiquidityPoolWeights(liquidities: LiquidityProvision[]) {\n  if (liquidities.length === 0) return {} // this should never happen\n\n  const liquiditiesByUser = groupBy(liquidities, 'userId')\n\n  // we don't clawback from users that took more liquidity than they gave\n  // instead we count their contribution as 0 and split the rest\n  const userAmounts = mapValues(liquiditiesByUser, (liquidities) =>\n    Math.max(0, sumBy(liquidities, 'amount'))\n  )\n  const totalAmount = sum(Object.values(userAmounts))\n  // ... unless they are all net liquidity leeches, in which case remaining liquidity goes to the first liquidizer (persumably the creator)\n  if (totalAmount === 0) {\n    const firstUser = minBy(liquidities, 'createdTime')!.userId\n    return { [firstUser]: 1 }\n  }\n  const weights = mapValues(userAmounts, (amount) => amount / totalAmount)\n  return omitBy(weights, (w) => w === 0)\n}\n\nconst getK = (pool: { [outcome: string]: number }) => {\n  const values = Object.values(pool)\n  return sumBy(values, Math.log)\n}\n\nexport const getLiquidity = (pool: { [outcome: string]: number }) => {\n  return Math.exp(getK(pool) / Object.keys(pool).length)\n}\n\nexport function getUserLiquidityShares(\n  userId: string,\n  pool: { [outcome: string]: number },\n  liquidities: LiquidityProvision[]\n) {\n  const weights = getCpmmLiquidityPoolWeights(liquidities)\n  const userWeight = weights[userId] ?? 0\n\n  return mapValues(pool, (shares) => userWeight * shares)\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3506, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3537, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/calculate-fixed-payouts.ts"],"sourcesContent":["import { sum } from 'lodash'\nimport { Bet } from './bet'\nimport { getProbability } from './calculate'\nimport {\n  CPMMContract,\n  CPMMMultiContract,\n  CPMMNumericContract,\n} from './contract'\n\nexport function calculateFixedPayout(\n  contract: CPMMContract,\n  bet: Bet,\n  outcome: string\n) {\n  if (outcome === 'CANCEL') return calculateFixedCancelPayout(bet)\n  if (outcome === 'MKT') return calculateFixedMktPayout(contract, bet)\n\n  return calculateStandardFixedPayout(bet, outcome)\n}\n\nexport function calculateFixedCancelPayout(bet: Bet) {\n  return bet.amount\n}\n\nexport function calculateStandardFixedPayout(bet: Bet, outcome: string) {\n  const { outcome: betOutcome, shares } = bet\n\n  if (betOutcome !== outcome) return 0\n  return shares\n}\n\nfunction calculateFixedMktPayout(contract: CPMMContract, bet: Bet) {\n  const { resolutionProbability } = contract\n  const prob =\n    resolutionProbability !== undefined\n      ? resolutionProbability\n      : getProbability(contract)\n\n  const { outcome, shares } = bet\n  const betP = outcome === 'YES' ? prob : 1 - prob\n  return betP * shares\n}\n\nfunction calculateBetPayoutMulti(\n  contract: CPMMMultiContract | CPMMNumericContract,\n  bet: Bet\n) {\n  let prob = 0\n  const { answerId } = bet\n  if (answerId) {\n    const { answers, resolutions } = contract\n    const answer = answers.find((a) => a.id === answerId)\n    if (answer && answer.resolution) {\n      const { resolution, resolutionProbability } = answer\n      if (resolution === 'YES') prob = 1\n      else if (resolution === 'NO') prob = 0\n      else if (resolutionProbability) prob = resolutionProbability\n    } else if (resolutions) {\n      const probTotal = sum(Object.values(resolutions))\n      prob = (resolutions[answerId] ?? 0) / probTotal\n    } else if (answer) {\n      prob = answer.prob\n    }\n  }\n  const { outcome, shares } = bet\n  const betP = outcome === 'YES' ? prob : 1 - prob\n  return betP * shares\n}\n\nexport function calculateFixedPayoutMulti(\n  contract: CPMMMultiContract | CPMMNumericContract,\n  bet: Bet,\n  outcome: string\n) {\n  if (outcome === 'CANCEL') return calculateFixedCancelPayout(bet)\n  return calculateBetPayoutMulti(contract, bet)\n}\n"],"names":[],"mappings":";;;;;;AAAA;AAEA;;;;;;;AAOO,SAAS,qBACd,QAAsB,EACtB,GAAQ,EACR,OAAe;IAEf,IAAI,YAAY,UAAU,OAAO,2BAA2B;IAC5D,IAAI,YAAY,OAAO,OAAO,wBAAwB,UAAU;IAEhE,OAAO,6BAA6B,KAAK;AAC3C;AAEO,SAAS,2BAA2B,GAAQ;IACjD,OAAO,IAAI,MAAM;AACnB;AAEO,SAAS,6BAA6B,GAAQ,EAAE,OAAe;IACpE,MAAM,EAAE,SAAS,UAAU,EAAE,MAAM,EAAE,GAAG;IAExC,IAAI,eAAe,SAAS,OAAO;IACnC,OAAO;AACT;AAEA,SAAS,wBAAwB,QAAsB,EAAE,GAAQ;IAC/D,MAAM,EAAE,qBAAqB,EAAE,GAAG;IAClC,MAAM,OACJ,0BAA0B,YACtB,wBACA,CAAA,GAAA,mHAAA,CAAA,iBAAc,AAAD,EAAE;IAErB,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;IAC5B,MAAM,OAAO,YAAY,QAAQ,OAAO,IAAI;IAC5C,OAAO,OAAO;AAChB;AAEA,SAAS,wBACP,QAAiD,EACjD,GAAQ;IAER,IAAI,OAAO;IACX,MAAM,EAAE,QAAQ,EAAE,GAAG;IACrB,IAAI,UAAU;QACZ,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG;QACjC,MAAM,SAAS,QAAQ,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;QAC5C,IAAI,UAAU,OAAO,UAAU,EAAE;YAC/B,MAAM,EAAE,UAAU,EAAE,qBAAqB,EAAE,GAAG;YAC9C,IAAI,eAAe,OAAO,OAAO;iBAC5B,IAAI,eAAe,MAAM,OAAO;iBAChC,IAAI,uBAAuB,OAAO;QACzC,OAAO,IAAI,aAAa;YACtB,MAAM,YAAY,CAAA,GAAA,+HAAA,CAAA,UAAG,AAAD,EAAE,OAAO,MAAM,CAAC;YACpC,OAAO,CAAC,WAAW,CAAC,SAAS,IAAI,CAAC,IAAI;QACxC,OAAO,IAAI,QAAQ;YACjB,OAAO,OAAO,IAAI;QACpB;IACF;IACA,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;IAC5B,MAAM,OAAO,YAAY,QAAQ,OAAO,IAAI;IAC5C,OAAO,OAAO;AAChB;AAEO,SAAS,0BACd,QAAiD,EACjD,GAAQ,EACR,OAAe;IAEf,IAAI,YAAY,UAAU,OAAO,2BAA2B;IAC5D,OAAO,wBAAwB,UAAU;AAC3C"}},
    {"offset": {"line": 3597, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3604, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/util/time.ts"],"sourcesContent":["export const MINUTE_MS = 60 * 1000\nexport const HOUR_MS = 60 * MINUTE_MS\nexport const DAY_MS = 24 * HOUR_MS\nexport const WEEK_MS = 7 * DAY_MS\nexport const MONTH_MS = 30 * DAY_MS\nexport const YEAR_MS = 365 * DAY_MS\nexport const HOUR_SECONDS = 60 * 60\n\nexport const sleep = (ms: number) =>\n  new Promise((resolve) => setTimeout(resolve, ms))\n"],"names":[],"mappings":";;;;;;;;;;AAAO,MAAM,YAAY,KAAK;AACvB,MAAM,UAAU,KAAK;AACrB,MAAM,SAAS,KAAK;AACpB,MAAM,UAAU,IAAI;AACpB,MAAM,WAAW,KAAK;AACtB,MAAM,UAAU,MAAM;AACtB,MAAM,eAAe,KAAK;AAE1B,MAAM,QAAQ,CAAC,KACpB,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS"}},
    {"offset": {"line": 3622, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3652, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/calculate-metrics.ts"],"sourcesContent":["import {\n  cloneDeep,\n  Dictionary,\n  first,\n  groupBy,\n  min,\n  orderBy,\n  sum,\n  sumBy,\n  uniq,\n} from 'lodash'\nimport {\n  calculateTotalSpentAndShares,\n  getContractBetMetricsPerAnswerWithoutLoans,\n} from './calculate'\nimport { Bet, LimitBet } from './bet'\nimport { Contract, CPMMMultiContract, CPMMMultiNumeric } from './contract'\nimport { computeFills } from './new-bet'\nimport { CpmmState, getCpmmProbability } from './calculate-cpmm'\nimport { removeUndefinedProps } from './util/object'\nimport { floatingEqual, logit } from './util/math'\nimport { ContractMetric } from 'common/contract-metric'\nimport { noFees } from './fees'\n\nexport const computeInvestmentValueCustomProb = (\n  bets: Bet[],\n  contract: Contract,\n  p: number\n) => {\n  return sumBy(bets, (bet) => {\n    if (!contract) return 0\n    const { outcome, shares } = bet\n\n    const betP = outcome === 'YES' ? p : 1 - p\n\n    const value = betP * shares\n    if (isNaN(value)) return 0\n    return value\n  })\n}\n\nexport const ELASTICITY_BET_AMOUNT = 10000 // readjust with platform volume\n\nexport const computeElasticity = (\n  unfilledBets: LimitBet[],\n  contract: Contract,\n  betAmount = ELASTICITY_BET_AMOUNT\n) => {\n  const { mechanism, isResolved } = contract\n\n  switch (mechanism) {\n    case 'cpmm-1':\n      return computeBinaryCpmmElasticity(\n        isResolved ? [] : unfilledBets, // only consider limit orders for open markets\n        contract,\n        betAmount\n      )\n    case 'cpmm-multi-1':\n      return computeMultiCpmmElasticity(\n        isResolved ? [] : unfilledBets, // only consider limit orders for open markets\n        contract,\n        betAmount\n      )\n    default: // there are some contracts on the dev DB with crazy mechanisms\n      return 1_000_000\n  }\n}\n\nexport const computeBinaryCpmmElasticity = (\n  unfilledBets: LimitBet[],\n  cpmmState: CpmmState,\n  betAmount: number\n) => {\n  const sortedBets = unfilledBets.sort((a, b) => a.createdTime - b.createdTime)\n\n  const userIds = uniq(unfilledBets.map((b) => b.userId))\n  // Assume all limit orders are good.\n  const userBalances = Object.fromEntries(\n    userIds.map((id) => [id, Number.MAX_SAFE_INTEGER])\n  )\n\n  const {\n    cpmmState: { pool: poolY, p: pY },\n  } = computeFills(\n    cpmmState,\n    'YES',\n    betAmount,\n    undefined,\n    sortedBets,\n    userBalances\n  )\n  const resultYes = getCpmmProbability(poolY, pY)\n\n  const {\n    cpmmState: { pool: poolN, p: pN },\n  } = computeFills(\n    cpmmState,\n    'NO',\n    betAmount,\n    undefined,\n    sortedBets,\n    userBalances\n  )\n  const resultNo = getCpmmProbability(poolN, pN)\n\n  // handle AMM overflow\n  const safeYes = Number.isFinite(resultYes)\n    ? Math.min(resultYes, 0.995)\n    : 0.995\n  const safeNo = Number.isFinite(resultNo) ? Math.max(resultNo, 0.005) : 0.005\n\n  return logit(safeYes) - logit(safeNo)\n}\n\nexport const computeBinaryCpmmElasticityFromAnte = (\n  ante: number,\n  betAmount = ELASTICITY_BET_AMOUNT\n) => {\n  const pool = { YES: ante, NO: ante }\n  const p = 0.5\n\n  const cpmmState = {\n    pool,\n    p,\n    collectedFees: noFees,\n  }\n\n  const {\n    cpmmState: { pool: poolY, p: pY },\n  } = computeFills(cpmmState, 'YES', betAmount, undefined, [], {})\n  const resultYes = getCpmmProbability(poolY, pY)\n\n  const {\n    cpmmState: { pool: poolN, p: pN },\n  } = computeFills(cpmmState, 'NO', betAmount, undefined, [], {})\n  const resultNo = getCpmmProbability(poolN, pN)\n\n  // handle AMM overflow\n  const safeYes = Number.isFinite(resultYes) ? resultYes : 1\n  const safeNo = Number.isFinite(resultNo) ? resultNo : 0\n\n  return logit(safeYes) - logit(safeNo)\n}\n\nconst computeMultiCpmmElasticity = (\n  unfilledBets: LimitBet[],\n  contract: CPMMMultiContract | CPMMMultiNumeric,\n  betAmount: number\n) => {\n  const elasticities = contract.answers.map((a) => {\n    const cpmmState = {\n      pool: { YES: a.poolYes, NO: a.poolNo },\n      p: 0.5,\n      collectedFees: noFees,\n    }\n    const unfilledBetsForAnswer = unfilledBets.filter(\n      (b) => b.answerId === a.id\n    )\n    return computeBinaryCpmmElasticity(\n      unfilledBetsForAnswer,\n      cpmmState,\n      betAmount\n    )\n  })\n  return min(elasticities) ?? 1_000_000\n}\n\nexport const calculateMetricsByContractAndAnswer = (\n  betsByContractId: Dictionary<Bet[]>,\n  contractsById: Dictionary<Contract>,\n  userId: string,\n  currentMetrics: ContractMetric[]\n) => {\n  const newMetrics = Object.entries(betsByContractId).flatMap(\n    ([contractId, bets]) => {\n      const contract: Contract = contractsById[contractId]\n      return calculateUserMetricsWithouLoans(contract, bets, userId)\n    }\n  )\n  // Find loan amounts from current metrics and paste them into the new metrics\n  return newMetrics.map((m) => {\n    const currentMetric = currentMetrics.find(\n      (cm) =>\n        cm.contractId === m.contractId &&\n        cm.answerId == m.answerId &&\n        cm.userId === m.userId\n    )\n    return { ...m, loan: currentMetric?.loan ?? m.loan ?? 0 }\n  })\n}\n\n// Produced from 0 filled limit orders\nexport const isEmptyMetric = (m: ContractMetric) => {\n  return (\n    m.profit === 0 &&\n    m.invested === 0 &&\n    m.loan === 0 &&\n    m.payout === 0 &&\n    !m.hasShares &&\n    sum(Object.values(m.totalSpent ?? {})) === 0\n  )\n}\n\nexport const calculateUserMetricsWithouLoans = (\n  contract: Contract,\n  bets: Bet[],\n  userId: string\n) => {\n  // ContractMetrics will have an answerId for every answer, and a null for the overall metrics.\n  const currentMetrics = getContractBetMetricsPerAnswerWithoutLoans(\n    contract,\n    bets,\n    'answers' in contract ? contract.answers : undefined\n  )\n\n  return currentMetrics.map((current) => {\n    return removeUndefinedProps({\n      ...current,\n      contractId: contract.id,\n      userId,\n    } as ContractMetric)\n  })\n}\n\nexport type MarginalBet = Pick<\n  Bet,\n  | 'userId'\n  | 'answerId'\n  | 'contractId'\n  | 'amount'\n  | 'shares'\n  | 'outcome'\n  | 'createdTime'\n  | 'loanAmount'\n  | 'isRedemption'\n  | 'probAfter'\n>\n\nexport const calculateUserMetricsWithNewBetsOnly = (\n  newBets: MarginalBet[],\n  um: Omit<ContractMetric, 'id'>\n) => {\n  const needsTotalSpentBackfilled = !um.totalSpent\n  const initialTotalSpent: { [key: string]: number } = um.totalSpent ?? {}\n  // TODO: remove this after backfilling\n  if (needsTotalSpentBackfilled) {\n    if (um.hasNoShares && !um.hasYesShares) {\n      initialTotalSpent.NO = um.invested\n    } else if (um.hasYesShares && !um.hasNoShares) {\n      initialTotalSpent.YES = um.invested\n    } else {\n      initialTotalSpent.NO = um.invested / 2\n      initialTotalSpent.YES = um.invested / 2\n    }\n  }\n\n  const initialTotalShares = { ...um.totalShares }\n\n  const { totalSpent, totalShares } = calculateTotalSpentAndShares(\n    newBets,\n    initialTotalSpent,\n    initialTotalShares\n  )\n\n  const invested = sum(Object.values(totalSpent))\n  const loan = sumBy(newBets, (b) => b.loanAmount ?? 0) + um.loan\n\n  const hasShares = Object.values(totalShares).some(\n    (shares) => !floatingEqual(shares, 0)\n  )\n  const hasYesShares = (totalShares.YES ?? 0) >= 1\n  const hasNoShares = (totalShares.NO ?? 0) >= 1\n  const soldOut = !hasNoShares && !hasYesShares\n  const maxSharesOutcome = soldOut\n    ? null\n    : (totalShares.NO ?? 0) > (totalShares.YES ?? 0)\n    ? 'NO'\n    : 'YES'\n  const lastBet = orderBy(newBets, (b) => b.createdTime, 'desc')[0]\n  const payout = soldOut\n    ? 0\n    : maxSharesOutcome\n    ? totalShares[maxSharesOutcome] *\n      (maxSharesOutcome === 'NO' ? 1 - lastBet.probAfter : lastBet.probAfter)\n    : 0\n  const totalAmountSold =\n    (um.totalAmountSold ?? 0) +\n    sumBy(\n      newBets.filter((b) => b.isRedemption || b.amount < 0),\n      (b) => -b.amount\n    )\n  const totalAmountInvested =\n    (um.totalAmountInvested ?? 0) +\n    sumBy(\n      newBets.filter((b) => b.amount > 0 && !b.isRedemption),\n      (b) => b.amount\n    )\n  const profit = payout + totalAmountSold - totalAmountInvested\n  const profitPercent = floatingEqual(totalAmountInvested, 0)\n    ? 0\n    : (profit / totalAmountInvested) * 100\n\n  return {\n    ...um,\n    loan: floatingEqual(loan, 0) ? 0 : loan,\n    invested: floatingEqual(invested, 0) ? 0 : invested,\n    totalShares,\n    hasNoShares,\n    hasYesShares,\n    hasShares,\n    maxSharesOutcome,\n    lastBetTime: lastBet.createdTime,\n    totalSpent,\n    payout: floatingEqual(payout, 0) ? 0 : payout,\n    totalAmountSold: floatingEqual(totalAmountSold, 0) ? 0 : totalAmountSold,\n    totalAmountInvested: floatingEqual(totalAmountInvested, 0)\n      ? 0\n      : totalAmountInvested,\n    profit,\n    profitPercent,\n  }\n}\n\nexport const calculateProfitMetricsAtProbOrCancel = <\n  T extends Omit<ContractMetric, 'id'> | ContractMetric\n>(\n  newState: number | 'CANCEL',\n  um: T\n) => {\n  const {\n    maxSharesOutcome,\n    totalAmountSold = 0,\n    totalAmountInvested = 0,\n    totalShares,\n    hasNoShares,\n    hasYesShares,\n    invested,\n  } = um\n  const soldOut = !hasNoShares && !hasYesShares\n  const payout =\n    newState === 'CANCEL'\n      ? invested\n      : soldOut\n      ? 0\n      : maxSharesOutcome\n      ? totalShares[maxSharesOutcome] *\n        (maxSharesOutcome === 'NO' ? 1 - newState : newState)\n      : 0\n  const profit =\n    newState === 'CANCEL' ? 0 : payout + totalAmountSold - totalAmountInvested\n  const profitPercent = floatingEqual(totalAmountInvested, 0)\n    ? 0\n    : (profit / totalAmountInvested) * 100\n\n  return {\n    ...um,\n    payout,\n    profit,\n    profitPercent,\n  }\n}\n\nexport const calculateAnswerMetricsWithNewBetsOnly = (\n  newBets: MarginalBet[],\n  userMetrics: Omit<ContractMetric, 'id'>[],\n  contractId: string,\n  isMultiMarket: boolean\n) => {\n  const betsByUser = groupBy(newBets, 'userId')\n\n  return Object.entries(betsByUser).flatMap(([userId, bets]) => {\n    // If it's a multi market, we need to summarize the stats for the null answer\n    const oldSummary = cloneDeep(\n      userMetrics.find(\n        (m) =>\n          m.answerId === null &&\n          m.userId === userId &&\n          m.contractId === contractId\n      )\n    )\n    const userBetsByAnswer = groupBy(bets, 'answerId')\n    const newMetrics = Object.entries(userBetsByAnswer).map(\n      ([answerIdString, bets]) => {\n        const answerId = answerIdString === 'undefined' ? null : answerIdString\n        const oldMetric = userMetrics.find(\n          (m) =>\n            m.answerId === answerId &&\n            m.userId === userId &&\n            m.contractId === contractId\n        )\n        if (oldSummary && oldMetric && isMultiMarket) {\n          // Subtract the old stats from the old summary metric\n          applyMetricToSummary(oldMetric, oldSummary, false)\n        }\n        const userMetric =\n          oldMetric ?? getDefaultMetric(userId, contractId, answerId)\n\n        return calculateUserMetricsWithNewBetsOnly(bets, userMetric)\n      }\n    )\n    if (!isMultiMarket) {\n      return newMetrics\n    }\n    // Then add the new metric row stats to it\n    const newSummary = oldSummary ?? getDefaultMetric(userId, contractId, null)\n    newMetrics.forEach((m) => applyMetricToSummary(m, newSummary, true))\n    return [...newMetrics, newSummary]\n  })\n}\n\nexport const getDefaultMetric = (\n  userId: string,\n  contractId: string,\n  answerId: string | null\n): Omit<ContractMetric, 'id'> => ({\n  userId,\n  contractId,\n  answerId,\n  loan: 0,\n  invested: 0,\n  totalShares: { NO: 0, YES: 0 },\n  totalSpent: { NO: 0, YES: 0 },\n  payout: 0,\n  profit: 0,\n  profitPercent: 0,\n  hasNoShares: false,\n  hasShares: false,\n  hasYesShares: false,\n  maxSharesOutcome: null,\n  lastBetTime: 0,\n  from: undefined,\n  totalAmountInvested: 0,\n  totalAmountSold: 0,\n})\n\nconst defaultTimeScaleValues = {\n  profit: 0,\n  profitPercent: 0,\n  invested: 0,\n  prevValue: 0,\n  value: 0,\n}\n\n// We could do this all in the database trigger, but the logic gets hairy\nexport const applyMetricToSummary = <\n  T extends Omit<ContractMetric, 'id'> | ContractMetric\n>(\n  metric: T,\n  summary: T,\n  add: boolean\n) => {\n  const sign = add ? 1 : -1\n  summary.totalShares['NO'] += sign * (metric.totalShares['NO'] ?? 0)\n  summary.totalShares['YES'] += sign * (metric.totalShares['YES'] ?? 0)\n  if (!summary.totalSpent) {\n    summary.totalSpent = { NO: 0, YES: 0 }\n  }\n  if (metric.totalSpent) {\n    summary.totalSpent['NO'] += sign * (metric.totalSpent['NO'] ?? 0)\n    summary.totalSpent['YES'] += sign * (metric.totalSpent['YES'] ?? 0)\n  }\n  summary.loan += sign * metric.loan\n  summary.invested += sign * metric.invested\n  summary.payout += sign * metric.payout\n  summary.profit += sign * metric.profit\n  summary.totalAmountInvested += sign * metric.totalAmountInvested\n  summary.totalAmountSold += sign * metric.totalAmountSold\n  summary.profitPercent = floatingEqual(summary.totalAmountInvested, 0)\n    ? 0\n    : (summary.profit / summary.totalAmountInvested) * 100\n\n  summary.lastBetTime = Math.max(summary.lastBetTime, metric.lastBetTime)\n  if (metric.from) {\n    const timeScales = Object.keys(metric.from)\n    summary.from = Object.fromEntries(\n      timeScales.map((timeScale) => {\n        const m = metric.from![timeScale]\n        const s = summary.from?.[timeScale] ?? defaultTimeScaleValues\n        const update = {\n          profit: s.profit + sign * m.profit,\n          invested: s.invested + sign * m.invested,\n          prevValue: s.prevValue + sign * m.prevValue,\n          value: s.value + sign * m.value,\n        }\n        const profitPercent =\n          update.invested === 0 ? 0 : (update.profit / update.invested) * 100\n        return [timeScale, { ...update, profitPercent }]\n      })\n    )\n  }\n  // These are set by the trigger:\n  // summaryMetric.hasNoShares\n  // summaryMetric.hasYesShares\n  // summaryMetric.hasShares\n  // summaryMetric.loan\n  return summary\n}\n\nexport const calculateUpdatedMetricsForContracts = (\n  contractsWithMetrics: {\n    contract: Contract\n    metrics: ContractMetric[]\n  }[]\n) => {\n  const metricsByContract: Dictionary<Omit<ContractMetric, 'id'>[]> = {}\n\n  for (const { contract, metrics } of contractsWithMetrics) {\n    if (metrics.length === 0) continue\n\n    const contractId = contract.id\n\n    // Group metrics by userId\n    const metricsByUser = groupBy(metrics, 'userId')\n\n    metricsByContract[contractId] = Object.entries(metricsByUser).flatMap(\n      ([userId, userMetrics]) => {\n        if (contract.mechanism === 'cpmm-1') {\n          const state =\n            contract.resolution === 'CANCEL' ? 'CANCEL' : contract.prob\n          // For binary markets, update metrics with current probability\n          const metric = first(userMetrics)\n          return metric\n            ? [calculateProfitMetricsAtProbOrCancel(state, metric)]\n            : []\n        } else if (contract.mechanism === 'cpmm-multi-1') {\n          // For multiple choice markets, update each answer's metrics and compute summary per user\n          const answerMetrics = userMetrics.filter((m) => m.answerId !== null)\n\n          const updatedAnswerMetrics = answerMetrics.map((m) => {\n            const answer = contract.answers.find((a) => a.id === m.answerId)\n            if (answer) {\n              const state =\n                contract.resolution === 'CANCEL' ||\n                answer.resolution === 'CANCEL'\n                  ? 'CANCEL'\n                  : answer.resolution === 'YES'\n                  ? 1\n                  : answer.resolution === 'NO'\n                  ? 0\n                  : answer.prob\n              return calculateProfitMetricsAtProbOrCancel(state, m)\n            }\n            return m\n          })\n\n          // Calculate summary metrics for this user\n          const summaryMetric = getDefaultMetric(userId, contractId, null)\n          updatedAnswerMetrics.forEach((m) =>\n            applyMetricToSummary(m, summaryMetric, true)\n          )\n\n          return [...updatedAnswerMetrics, summaryMetric]\n        }\n        return []\n      }\n    )\n  }\n\n  return { metricsByContract }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4019, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4026, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/calculate.ts"],"sourcesContent":["import {\n  get,\n  groupBy,\n  mapValues,\n  maxBy,\n  partition,\n  sortBy,\n  sum,\n  sumBy,\n} from 'lodash'\nimport { Bet } from './bet'\nimport {\n  calculateCpmmPurchase,\n  getCpmmOutcomeProbabilityAfterBet,\n  getCpmmProbability,\n} from './calculate-cpmm'\nimport {\n  calculateFixedPayout,\n  calculateFixedPayoutMulti,\n} from './calculate-fixed-payouts'\nimport {\n  BinaryContract,\n  Contract,\n  CPMMContract,\n  CPMMMultiContract,\n  CPMMNumericContract,\n  MultiContract,\n  PseudoNumericContract,\n  StonkContract,\n} from './contract'\nimport { floatingEqual, floatingGreaterEqual } from './util/math'\nimport { ContractMetric } from 'common/contract-metric'\nimport { Answer } from './answer'\nimport { DAY_MS } from 'common/util/time'\nimport {\n  computeInvestmentValueCustomProb,\n  MarginalBet,\n} from 'common/calculate-metrics'\n\nexport function getProbability(\n  contract: BinaryContract | PseudoNumericContract | StonkContract\n) {\n  return getCpmmProbability(contract.pool, contract.p)\n}\n\nexport function getDisplayProbability(\n  contract: BinaryContract | PseudoNumericContract | StonkContract\n) {\n  return contract.resolutionProbability ?? getProbability(contract)\n}\n\nexport function getInitialProbability(\n  contract: BinaryContract | PseudoNumericContract | StonkContract\n) {\n  if (contract.initialProbability) return contract.initialProbability\n\n  return getCpmmProbability(contract.pool, contract.p)\n}\n\nexport function getOutcomeProbability(contract: Contract, outcome: string) {\n  const { mechanism } = contract\n  switch (mechanism) {\n    case 'cpmm-1':\n      return outcome === 'YES'\n        ? getCpmmProbability(contract.pool, contract.p)\n        : 1 - getCpmmProbability(contract.pool, contract.p)\n    case 'cpmm-multi-1':\n      return 0\n    default:\n      throw new Error('getOutcomeProbability not implemented')\n  }\n}\n\nexport function getAnswerProbability(\n  contract: MultiContract,\n  answerId: string\n) {\n  const answer = contract.answers.find((a) => a.id === answerId)\n  if (!answer) return 0\n\n  const { poolYes, poolNo, resolution, resolutionProbability } = answer\n  if (resolution) {\n    if (resolution === 'MKT') return resolutionProbability ?? answer.prob\n    if (resolution === 'YES') return 1\n    if (resolution === 'NO') return 0\n  }\n  const pool = { YES: poolYes, NO: poolNo }\n  return getCpmmProbability(pool, 0.5)\n}\n\nexport function getInitialAnswerProbability(\n  contract: MultiContract | CPMMNumericContract,\n  answer: Answer\n) {\n  if (!contract.shouldAnswersSumToOne) {\n    return 0.5\n  } else {\n    if (contract.addAnswersMode === 'DISABLED') {\n      return 1 / contract.answers.length\n    } else {\n      const answers = contract.answers\n      const initialTime = answers.find((a) => a.isOther)?.createdTime\n\n      if (answer.createdTime === initialTime) {\n        const numberOfInitialAnswers = sumBy(answers, (a) =>\n          a.createdTime === initialTime ? 1 : 0\n        )\n        return 1 / numberOfInitialAnswers\n      }\n      return undefined\n    }\n  }\n}\n\nexport function getOutcomeProbabilityAfterBet(\n  contract: Contract,\n  outcome: string,\n  bet: number\n) {\n  const { mechanism } = contract\n  switch (mechanism) {\n    case 'cpmm-1':\n      return getCpmmOutcomeProbabilityAfterBet(contract, outcome, bet)\n    case 'cpmm-multi-1':\n      return 0\n    default:\n      throw new Error('getOutcomeProbabilityAfterBet not implemented')\n  }\n}\n\nexport function calculateSharesBought(\n  contract: Contract,\n  outcome: string,\n  amount: number\n) {\n  const { mechanism } = contract\n  switch (mechanism) {\n    case 'cpmm-1':\n      return calculateCpmmPurchase(contract, amount, outcome).shares\n    default:\n      throw new Error('calculateSharesBought not implemented')\n  }\n}\n\nexport function calculatePayout(contract: Contract, bet: Bet, outcome: string) {\n  const { mechanism } = contract\n  return mechanism === 'cpmm-1'\n    ? calculateFixedPayout(contract, bet, outcome)\n    : mechanism === 'cpmm-multi-1'\n    ? calculateFixedPayoutMulti(contract, bet, outcome)\n    : bet?.amount ?? 0\n}\n\nexport function resolvedPayout(contract: Contract, bet: Bet) {\n  const { resolution, mechanism } = contract\n  if (!resolution) throw new Error('Contract not resolved')\n\n  return mechanism === 'cpmm-1'\n    ? calculateFixedPayout(contract, bet, resolution)\n    : mechanism === 'cpmm-multi-1'\n    ? calculateFixedPayoutMulti(contract, bet, resolution)\n    : bet?.amount ?? 0\n}\n\nfunction getCpmmInvested(yourBets: Bet[]) {\n  const { totalSpent } = calculateTotalSpentAndShares(yourBets)\n  return sum(Object.values(totalSpent))\n}\n\nexport function calculateTotalSpentAndShares(\n  bets: MarginalBet[],\n  initialTotalSpent: { [outcome: string]: number } = { YES: 0, NO: 0 },\n  initialTotalShares: { [outcome: string]: number } = { YES: 0, NO: 0 }\n) {\n  const totalShares: { [outcome: string]: number } = { ...initialTotalShares }\n  const totalSpent: { [outcome: string]: number } = { ...initialTotalSpent }\n\n  const sharePurchases = sortBy(bets, [\n    'createdTime',\n    (bet) => (bet.isRedemption ? 1 : 0),\n  ])\n\n  for (const purchase of sharePurchases) {\n    const { outcome, shares, amount } = purchase\n    if (floatingEqual(shares, 0)) continue\n\n    const spent = totalSpent[outcome] ?? 0\n    const position = totalShares[outcome] ?? 0\n\n    if (floatingGreaterEqual(amount, 0)) {\n      totalShares[outcome] = position + shares\n      totalSpent[outcome] = spent + amount\n    } else {\n      const averagePrice = floatingEqual(position, 0) ? 0 : spent / position\n      totalShares[outcome] = position + shares\n      totalSpent[outcome] = spent + averagePrice * shares\n    }\n  }\n\n  return { totalSpent, totalShares }\n}\n\nexport function getSimpleCpmmInvested(yourBets: Bet[]) {\n  const total = sumBy(yourBets, (b) => b.amount)\n  if (total < 0) return 0\n  return total\n}\n\nexport function getInvested(contract: Contract, yourBets: Bet[]) {\n  const { mechanism } = contract\n  if (mechanism === 'cpmm-1') return getCpmmInvested(yourBets)\n  if (mechanism === 'cpmm-multi-1') {\n    const betsByAnswerId = groupBy(yourBets, 'answerId')\n    const investedByAnswerId = mapValues(betsByAnswerId, getCpmmInvested)\n    return sum(Object.values(investedByAnswerId))\n  }\n  throw new Error('getInvested not implemented for mechanism ' + mechanism)\n}\n\nfunction getCpmmOrDpmProfit(\n  contract: Contract,\n  yourBets: Bet[],\n  answer?: Answer\n) {\n  const resolution = answer?.resolution ?? contract.resolution\n\n  let totalAmountInvested = 0\n  let payout = 0\n  let saleValue = 0\n  let redeemed = 0\n\n  for (const bet of yourBets) {\n    const { amount, isRedemption } = bet\n\n    if (isRedemption) {\n      redeemed += -1 * amount\n    } else if (amount > 0) {\n      totalAmountInvested += amount\n    } else {\n      saleValue -= amount\n    }\n\n    payout += resolution\n      ? calculatePayout(contract, bet, resolution)\n      : calculatePayout(contract, bet, 'MKT')\n  }\n\n  const profit = payout + saleValue + redeemed - totalAmountInvested\n  const profitPercent =\n    totalAmountInvested === 0 ? 0 : (profit / totalAmountInvested) * 100\n\n  return {\n    profit,\n    profitPercent,\n    totalAmountInvested,\n    totalAmountSold: saleValue + redeemed,\n    payout,\n  }\n}\n\nexport function getProfitMetrics(contract: Contract, yourBets: Bet[]) {\n  const { mechanism } = contract\n  if (mechanism === 'cpmm-multi-1') {\n    const betsByAnswerId = groupBy(yourBets, 'answerId')\n    const profitMetricsPerAnswer = Object.entries(betsByAnswerId).map(\n      ([answerId, bets]) => {\n        const answer = contract.answers.find((a) => a.id === answerId)\n        return getCpmmOrDpmProfit(contract, bets, answer)\n      }\n    )\n    const profit = sumBy(profitMetricsPerAnswer, (m) => m.profit)\n    const totalAmountInvested = sumBy(\n      profitMetricsPerAnswer,\n      (m) => m.totalAmountInvested\n    )\n    const profitPercent =\n      totalAmountInvested === 0 ? 0 : (profit / totalAmountInvested) * 100\n    const payout = sumBy(profitMetricsPerAnswer, (m) => m.payout)\n    const totalAmountSold = sumBy(\n      profitMetricsPerAnswer,\n      (m) => m.totalAmountSold\n    )\n    return {\n      profit,\n      profitPercent,\n      totalAmountInvested,\n      totalAmountSold,\n      payout,\n    }\n  }\n  return getCpmmOrDpmProfit(contract, yourBets)\n}\n\nexport function getCpmmShares(yourBets: Bet[]) {\n  const totalShares: { [outcome: string]: number } = {}\n  for (const bet of yourBets) {\n    const { shares, outcome } = bet\n    totalShares[outcome] = (totalShares[outcome] ?? 0) + shares\n  }\n\n  const hasShares = Object.values(totalShares).some(\n    (shares) => !floatingEqual(shares, 0)\n  )\n\n  const { YES: yesShares, NO: noShares } = totalShares\n  const hasYesShares = yesShares >= 1\n  const hasNoShares = noShares >= 1\n\n  return {\n    totalShares,\n    hasShares,\n    hasYesShares,\n    hasNoShares,\n  }\n}\n\nexport function getCpmmMultiShares(yourBets: Bet[]) {\n  const betsByAnswerId = groupBy(yourBets, 'answerId')\n  const sharesByAnswerId = mapValues(betsByAnswerId, (bets) =>\n    getCpmmShares(bets)\n  )\n\n  const hasShares = Object.values(sharesByAnswerId).some(\n    (shares) => shares.hasShares\n  )\n\n  return {\n    hasShares,\n    sharesByAnswerId,\n  }\n}\n\nexport const getContractBetMetrics = (\n  contract: Contract,\n  yourBets: Bet[],\n  answerId?: string\n): Omit<ContractMetric, 'id' | 'from' | 'userId' | 'loan'> => {\n  const { mechanism } = contract\n  const isCpmmMulti = mechanism === 'cpmm-multi-1'\n  const {\n    profit,\n    profitPercent,\n    payout,\n    totalAmountInvested,\n    totalAmountSold,\n  } = getProfitMetrics(contract, yourBets)\n  const { totalSpent } = calculateTotalSpentAndShares(yourBets)\n  const invested = sum(Object.values(totalSpent))\n\n  const { totalShares, hasShares, hasYesShares, hasNoShares } =\n    getCpmmShares(yourBets)\n  const lastBetTime = Math.max(...yourBets.map((b) => b.createdTime))\n  const maxSharesOutcome = hasShares\n    ? maxBy(Object.keys(totalShares), (outcome) => totalShares[outcome])\n    : null\n\n  return {\n    invested,\n    payout,\n    profit,\n    profitPercent,\n    totalShares,\n    hasShares: isCpmmMulti ? getCpmmMultiShares(yourBets).hasShares : hasShares,\n    hasYesShares,\n    hasNoShares,\n    maxSharesOutcome: maxSharesOutcome ?? null,\n    lastBetTime,\n    answerId: answerId ?? null,\n    totalAmountSold,\n    totalAmountInvested,\n    totalSpent,\n    contractId: contract.id,\n  }\n}\nexport const getContractBetMetricsPerAnswerWithoutLoans = (\n  contract: Contract,\n  bets: Bet[],\n  answers?: Answer[]\n) => {\n  const betsPerAnswer = groupBy(bets, 'answerId')\n  const metricsPerAnswer = Object.values(\n    mapValues(betsPerAnswer, (bets) => {\n      const periods = ['day', 'week', 'month'] as const\n      const answerId = bets[0].answerId\n      const baseMetrics = getContractBetMetrics(contract, bets, answerId)\n      let periodMetrics\n      if (\n        contract.mechanism === 'cpmm-1' ||\n        contract.mechanism === 'cpmm-multi-1'\n      ) {\n        const answer = answers?.find((a) => a.id === answerId)\n        const passedAnswer = !!answer\n        if (contract.mechanism === 'cpmm-multi-1' && !passedAnswer) {\n          console.log(\n            `answer with id ${bets[0].answerId} not found, but is required for cpmm-multi-1 contract: ${contract.id}`\n          )\n        } else {\n          periodMetrics = Object.fromEntries(\n            periods.map((period) => [\n              period,\n              calculatePeriodProfit(contract, bets, period, answer),\n            ])\n          )\n        }\n      }\n      return {\n        ...baseMetrics,\n        from: periodMetrics,\n      } as ContractMetric\n    })\n  )\n\n  // Calculate overall contract metrics with answerId:null bc it's nice to have\n  if (contract.mechanism === 'cpmm-multi-1') {\n    const baseFrom = metricsPerAnswer[0].from\n    const calculateProfitPercent = (\n      metrics: ContractMetric[],\n      period: string\n    ) => {\n      const profit = sumBy(metrics, (m) => get(m, `from.${period}.profit`, 0))\n      const invested = sumBy(metrics, (m) =>\n        get(m, `from.${period}.invested`, 0)\n      )\n      return invested !== 0 ? 100 * (profit / invested) : 0\n    }\n\n    const baseMetric = getContractBetMetrics(contract, bets)\n    const from = baseFrom\n      ? mapValues(baseFrom, (periodMetrics, period) =>\n          mapValues(periodMetrics, (_, key) =>\n            key === 'profitPercent'\n              ? calculateProfitPercent(metricsPerAnswer, period)\n              : sumBy(metricsPerAnswer, (m) =>\n                  get(m, `from.${period}.${key}`, 0)\n                )\n          )\n        )\n      : undefined\n    metricsPerAnswer.push({\n      ...baseMetric,\n      // Overall period metrics = sum all the answers' period metrics\n      from,\n      answerId: null,\n    } as ContractMetric)\n  }\n  return metricsPerAnswer\n}\n\nconst calculatePeriodProfit = (\n  contract: CPMMContract | CPMMMultiContract | CPMMNumericContract,\n  bets: Bet[],\n  period: 'day' | 'week' | 'month',\n  answer?: Answer\n) => {\n  const days = period === 'day' ? 1 : period === 'week' ? 7 : 30\n  const fromTime = Date.now() - days * DAY_MS\n  const [previousBets, recentBets] = partition(\n    bets,\n    (b) => b.createdTime < fromTime\n  )\n\n  const { prob, probChanges } = answer ?? (contract as CPMMContract)\n  const prevProb = prob - probChanges[period]\n\n  const previousBetsValue = computeInvestmentValueCustomProb(\n    previousBets,\n    contract,\n    prevProb\n  )\n  const currentBetsValue = computeInvestmentValueCustomProb(\n    previousBets,\n    contract,\n    prob\n  )\n\n  const { profit: recentProfit, invested: recentInvested } =\n    getContractBetMetrics(contract, recentBets)\n\n  const profit = currentBetsValue - previousBetsValue + recentProfit\n  const invested = previousBetsValue + recentInvested\n  const profitPercent = invested === 0 ? 0 : 100 * (profit / invested)\n\n  return {\n    profit,\n    profitPercent,\n    invested,\n    prevValue: previousBetsValue,\n    value: currentBetsValue,\n  }\n}\n\nexport function getContractBetNullMetrics() {\n  return {\n    invested: 0,\n    loan: 0,\n    payout: 0,\n    profit: 0,\n    profitPercent: 0,\n    totalShares: {} as { [outcome: string]: number },\n    hasShares: false,\n    hasYesShares: false,\n    hasNoShares: false,\n    maxSharesOutcome: null,\n  } as ContractMetric\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4407, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/contract.ts"],"sourcesContent":["import { JSONContent } from '@tiptap/core'\nimport { getDisplayProbability } from 'common/calculate'\nimport { Topic } from 'common/group'\nimport { ChartAnnotation } from 'common/supabase/chart-annotations'\nimport { sum } from 'lodash'\nimport { Answer } from './answer'\nimport { Bet } from './bet'\nimport { getLiquidity } from './calculate-cpmm'\nimport { ContractComment } from './comment'\nimport { ContractMetric, ContractMetricsByOutcome } from './contract-metric'\nimport { CASH_SUFFIX, ENV_CONFIG } from './envs/constants'\nimport { Fees } from './fees'\nimport { PollOption } from './poll-option'\nimport { formatMoney, formatPercent } from './util/format'\nimport { MarketTierType } from './tier'\n\n/************************************************\n\nsupabase status: columns exist for\n  slug: text\n  creatorId: text\n  question: text\n  visibility: text\n  mechanism: text\n  outcomeType: text\n  createdTime: timestamp (from millis)\n  closeTime?: timestamp (from millis)\n  resolutionTime?: timestamp (from millis)\n  resolution?: text\n  resolutionProbability?: numeric\n  popularityScore: numeric\n  importanceScore: numeric\n\nany changes to the type of these columns in firestore will require modifying\nthe supabase trigger, or replication of contracts may fail!\n\n*************************************************/\n\ntype AnyContractType =\n  | (CPMM & Binary)\n  | (CPMM & PseudoNumeric)\n  | QuadraticFunding\n  | (CPMM & Stonk)\n  | CPMMMulti\n  | (NonBet & BountiedQuestion)\n  | (NonBet & Poll)\n  | CPMMMultiNumeric\n\nexport type Contract<T extends AnyContractType = AnyContractType> = {\n  id: string\n  slug: string // auto-generated; must be unique\n\n  creatorId: string\n  creatorName: string\n  creatorUsername: string\n  creatorAvatarUrl?: string\n  creatorCreatedTime?: number\n\n  question: string\n  description: string | JSONContent // More info about what the contract is about\n  visibility: Visibility\n\n  createdTime: number // Milliseconds since epoch\n  lastUpdatedTime: number // Updated on any change to the market (metadata, bet, comment)\n  lastBetTime?: number\n  lastCommentTime?: number\n  closeTime?: number // When no more trading is allowed\n  deleted?: boolean // If true, don't show market anywhere.\n\n  isResolved: boolean\n  resolutionTime?: number // When the contract creator resolved the market\n  resolution?: string\n  resolutionProbability?: number\n  resolverId?: string\n  isSpicePayout?: boolean\n\n  closeEmailsSent?: number\n\n  volume: number\n  volume24Hours: number\n  elasticity: number\n\n  collectedFees: Fees\n  uniqueBettorCount: number\n  uniqueBettorCountDay: number\n\n  unlistedById?: string\n  featuredLabel?: string\n  isTwitchContract?: boolean\n\n  coverImageUrl?: string\n  isRanked?: boolean\n\n  gptCommentSummary?: string\n\n  marketTier?: MarketTierType\n\n  token: ContractToken\n  siblingContractId?: string\n\n  // Manifold.love\n  loverUserId1?: string // The user id's of the pair of lovers referenced in the question.\n  loverUserId2?: string // The user id's of the pair of lovers referenced in the question.\n  matchCreatorId?: string // The user id of the person who proposed the match.\n  isLove?: boolean\n\n  /** @deprecated - no more auto-subsidization */\n  isSubsidized?: boolean // NOTE: not backfilled, undefined = true\n  /** @deprecated - try to use group-contracts table instead */\n  groupSlugs?: string[]\n  /** @deprecated - not deprecated, only updated in native column though*/\n  popularityScore: number\n  /** @deprecated - not deprecated, only updated in native column though*/\n  importanceScore: number\n  /** @deprecated - not deprecated, only updated in native column though*/\n  dailyScore: number\n  /** @deprecated - not deprecated, only updated in native column though*/\n  freshnessScore: number\n  /** @deprecated - not deprecated, only updated in native column though*/\n  conversionScore: number\n  /** @deprecated - not deprecated, only updated in native column though*/\n  viewCount: number\n  /** @deprecated - not up-to-date */\n  likedByUserCount?: number\n} & T\n\nexport type ContractToken = 'MANA' | 'CASH'\nexport type CPMMContract = Contract & CPMM\nexport type CPMMMultiContract = Contract & CPMMMulti\nexport type CPMMNumericContract = Contract & CPMMMultiNumeric\nexport type MarketContract =\n  | CPMMContract\n  | CPMMMultiContract\n  | CPMMNumericContract\n\nexport type BinaryContract = Contract & Binary\nexport type PseudoNumericContract = Contract & PseudoNumeric\nexport type QuadraticFundingContract = Contract & QuadraticFunding\nexport type StonkContract = Contract & Stonk\nexport type BountiedQuestionContract = Contract & BountiedQuestion\nexport type PollContract = Contract & Poll\n\nexport type BinaryOrPseudoNumericContract =\n  | BinaryContract\n  | PseudoNumericContract\n  | StonkContract\n\nexport type CPMM = {\n  mechanism: 'cpmm-1'\n  pool: { [outcome: string]: number }\n  p: number // probability constant in y^p * n^(1-p) = k\n  totalLiquidity: number // for historical reasons, this the total subsidy amount added in Ṁ\n  subsidyPool: number // current value of subsidy pool in Ṁ\n  prob: number\n  probChanges: {\n    day: number\n    week: number\n    month: number\n  }\n}\n\nexport type NonBet = {\n  mechanism: 'none'\n}\n\nexport const NON_BETTING_OUTCOMES: OutcomeType[] = ['BOUNTIED_QUESTION', 'POLL']\nexport const NO_CLOSE_TIME_TYPES: OutcomeType[] = NON_BETTING_OUTCOMES.concat([\n  'STONK',\n])\n\n/**\n * Implemented as a set of cpmm-1 binary contracts, one for each answer.\n * The mechanism is stored among the contract's answers, which each\n * reference this contract id.\n */\nexport type CPMMMulti = {\n  mechanism: 'cpmm-multi-1'\n  outcomeType: 'MULTIPLE_CHOICE'\n  shouldAnswersSumToOne: boolean\n  addAnswersMode?: add_answers_mode\n\n  totalLiquidity: number // for historical reasons, this the total subsidy amount added in Ṁ\n  subsidyPool: number // current value of subsidy pool in Ṁ\n  specialLiquidityPerAnswer?: number // Special liquidity mode, where initial ante is copied into each answer's pool, with a min probability, and only one answer can resolve YES. shouldAnswersSumToOne must be false.\n\n  // Answers chosen on resolution, with the weights of each answer.\n  // Weights sum to 100 if shouldAnswersSumToOne is true. Otherwise, range from 0 to 100 for each answerId.\n  resolutions?: { [answerId: string]: number }\n\n  // NOTE: This field is stored in the answers table and must be denormalized to the client.\n  answers: Answer[]\n  sort?: SortType\n}\n\nexport type CPMMMultiNumeric = {\n  mechanism: 'cpmm-multi-1'\n  outcomeType: 'NUMBER'\n  shouldAnswersSumToOne: true\n  addAnswersMode: 'DISABLED'\n  max: number\n  min: number\n\n  totalLiquidity: number // for historical reasons, this the total subsidy amount added in Ṁ\n  subsidyPool: number // current value of subsidy pool in Ṁ\n\n  // Answers chosen on resolution, with the weights of each answer.\n  // Weights sum to 100 if shouldAnswersSumToOne is true. Otherwise, range from 0 to 100 for each answerId.\n  resolutions?: { [answerId: string]: number }\n\n  // NOTE: This field is stored in the answers table and must be denormalized to the client.\n  answers: Answer[]\n  sort?: SortType\n}\n\nexport type add_answers_mode = 'DISABLED' | 'ONLY_CREATOR' | 'ANYONE'\n\nexport type QuadraticFunding = {\n  outcomeType: 'QUADRATIC_FUNDING'\n  mechanism: 'qf'\n  answers: any[]\n  // Mapping of how much each user has contributed to the matching pool\n  // Note: Our codebase assumes every contract has a pool, which is why this isn't just a constant\n  pool: { M$: number }\n\n  // Used when the funding round pays out\n  resolution?: 'MKT' | 'CANCEL'\n  resolutions?: { [outcome: string]: number } // Used for MKT resolution.\n}\n\nexport type Binary = {\n  outcomeType: 'BINARY'\n  initialProbability: number\n  resolutionProbability?: number // Used for BINARY markets resolved to MKT\n  resolution?: resolution\n}\n\nexport type PseudoNumeric = {\n  outcomeType: 'PSEUDO_NUMERIC'\n  min: number\n  max: number\n  isLogScale: boolean\n  resolutionValue?: number\n\n  // same as binary market; map everything to probability\n  initialProbability: number\n  resolutionProbability?: number\n}\n\nexport type MultipleNumeric = {\n  outcomeType: 'NUMBER'\n  answers: Answer[]\n  min: number\n  max: number\n  resolution?: string | 'MKT' | 'CANCEL'\n  resolutions?: { [outcome: string]: number } // Used for MKT resolution.\n}\n\nexport type Stonk = {\n  outcomeType: 'STONK'\n  initialProbability: number\n}\n\nexport type BountiedQuestion = {\n  outcomeType: 'BOUNTIED_QUESTION'\n  totalBounty: number\n  bountyLeft: number\n  /** @deprecated */\n  bountyTxns?: string[]\n\n  // Special mode where bounty pays out automatically in proportion to likes over 48 hours.\n  isAutoBounty?: boolean\n}\n\nexport type Poll = {\n  outcomeType: 'POLL'\n  options: PollOption[]\n  resolutions?: string[]\n}\n\nexport type MultiContract = CPMMMultiContract | CPMMNumericContract\n\ntype AnyOutcomeType =\n  | Binary\n  | QuadraticFunding\n  | Stonk\n  | BountiedQuestion\n  | Poll\n  | MultipleNumeric\n  | CPMMMulti\n  | PseudoNumeric\n\nexport type OutcomeType = AnyOutcomeType['outcomeType']\nexport type resolution = 'YES' | 'NO' | 'MKT' | 'CANCEL'\nexport const RESOLUTIONS = ['YES', 'NO', 'MKT', 'CANCEL'] as const\nexport const CREATEABLE_OUTCOME_TYPES = [\n  'BINARY',\n  'MULTIPLE_CHOICE',\n  'PSEUDO_NUMERIC',\n  'STONK',\n  'BOUNTIED_QUESTION',\n  'POLL',\n  'NUMBER',\n] as const\n\nexport const CREATEABLE_NON_PREDICTIVE_OUTCOME_TYPES = [\n  'POLL',\n  'BOUNTIED_QUESTION',\n]\n\nexport type CreateableOutcomeType = (typeof CREATEABLE_OUTCOME_TYPES)[number]\n\nexport const renderResolution = (resolution: string, prob?: number) => {\n  return (\n    {\n      YES: 'YES',\n      NO: 'NO',\n      CANCEL: 'N/A',\n      MKT: formatPercent(prob ?? 0),\n    }[resolution] || resolution\n  )\n}\n\nexport function contractPathWithoutContract(\n  creatorUsername: string,\n  slug: string\n) {\n  return `/${creatorUsername}/${slug}`\n}\n\nexport function contractUrl(contract: Contract) {\n  return `https://${ENV_CONFIG.domain}${contractPath(contract)}`\n}\n\nexport function contractPool(contract: Contract) {\n  return contract.mechanism === 'cpmm-1'\n    ? formatMoney(contract.totalLiquidity)\n    : contract.mechanism === 'cpmm-multi-1'\n    ? formatMoney(\n        sum(\n          contract.answers.map((a) =>\n            getLiquidity({ YES: a.poolYes, NO: a.poolNo })\n          )\n        )\n      )\n    : 'Empty pool'\n}\n\nexport const isBinaryMulti = (contract: Contract) =>\n  contract.mechanism === 'cpmm-multi-1' &&\n  contract.outcomeType !== 'NUMBER' &&\n  contract.answers.length === 2 &&\n  contract.addAnswersMode === 'DISABLED' &&\n  contract.shouldAnswersSumToOne\n// contract.createdTime > 1708574059795 // In case we don't want to convert pre-commit contracts\n\nexport const getMainBinaryMCAnswer = (contract: Contract) =>\n  isBinaryMulti(contract) && contract.mechanism === 'cpmm-multi-1'\n    ? contract.answers[0]\n    : undefined\n\nexport const getBinaryMCProb = (prob: number, outcome: 'YES' | 'NO' | string) =>\n  outcome === 'YES' ? prob : 1 - prob\n\nexport function getBinaryProbPercent(contract: BinaryContract) {\n  return formatPercent(getDisplayProbability(contract))\n}\n\nexport function tradingAllowed(contract: Contract, answer?: Answer) {\n  return (\n    !contract.isResolved &&\n    (!contract.closeTime || contract.closeTime > Date.now()) &&\n    contract.mechanism !== 'none' &&\n    (!answer || !answer.resolution)\n  )\n}\n\nexport const MAX_QUESTION_LENGTH = 120\nexport const MAX_DESCRIPTION_LENGTH = 16000\n\nexport const CPMM_MIN_POOL_QTY = 0.01\nexport const MULTI_NUMERIC_BUCKETS_MAX = 50\nexport const MULTI_NUMERIC_CREATION_ENABLED = false\n\nexport type Visibility = 'public' | 'unlisted'\nexport const VISIBILITIES = ['public', 'unlisted'] as const\n\nexport const SORTS = [\n  { label: 'High %', value: 'prob-desc' },\n  { label: 'Low %', value: 'prob-asc' },\n  { label: 'Oldest', value: 'old' },\n  { label: 'Newest', value: 'new' },\n  { label: 'Trending', value: 'liquidity' },\n  { label: 'A-Z', value: 'alphabetical' },\n] as const\n\nexport type SortType = (typeof SORTS)[number]['value']\n\nexport const MINUTES_ALLOWED_TO_UNRESOLVE = 10\n\nexport function contractPath(contract: {\n  creatorUsername: string\n  slug: string\n}) {\n  return `/${contract.creatorUsername}/${contract.slug}`\n}\n\nexport function twombaContractPath(contract: {\n  creatorUsername: string\n  slug: string\n  token?: ContractToken\n}) {\n  const isCashContract = contract.token == 'CASH'\n  const cleanedSlug = contract.slug.replace(new RegExp(`${CASH_SUFFIX}$`), '')\n  return `/${contract.creatorUsername}/${cleanedSlug}${\n    isCashContract ? '?play=false' : '?play=true'\n  }`\n}\n\nexport type CashType = {\n  contract: Contract\n  lastBetTime?: number\n  pointsString: string\n  multiPointsString: { [answerId: string]: string }\n  userPositionsByOutcome: ContractMetricsByOutcome\n  totalPositions: number\n  totalBets: number\n}\n\nexport type ContractParams = {\n  contract: Contract\n  lastBetTime?: number\n  pointsString?: string\n  multiPointsString?: { [answerId: string]: string }\n  comments: ContractComment[]\n  userPositionsByOutcome: ContractMetricsByOutcome\n  totalPositions: number\n  totalBets: number\n  topContractMetrics: ContractMetric[]\n  relatedContracts: Contract[]\n  chartAnnotations: ChartAnnotation[]\n  topics: Topic[]\n  dashboards: { slug: string; title: string }[]\n  pinnedComments: ContractComment[]\n  betReplies: Bet[]\n  cash?: CashType\n}\n\nexport type MaybeAuthedContractParams =\n  | {\n      state: 'authed'\n      params: ContractParams\n    }\n  | {\n      state: 'deleted'\n    }\n\nexport const MAX_CPMM_PROB = 0.99\nexport const MIN_CPMM_PROB = 0.01\nexport const MAX_STONK_PROB = 0.95\nexport const MIN_STONK_PROB = 0.2\n\nexport const isMarketRanked = (contract: Contract) =>\n  contract.isRanked != false &&\n  contract.visibility === 'public' &&\n  contract.deleted !== true\n\nexport const PROFIT_CUTOFF_TIME = 1715805887741\nexport const DPM_CUTOFF_TIMESTAMP = '2023-08-01 18:06:58.813000 +00:00'\nexport const getAdjustedProfit = (\n  contract: Contract,\n  profit: number,\n  answers: Answer[] | undefined,\n  answerId: string | null\n) => {\n  if (contract.mechanism === 'cpmm-multi-1') {\n    // Null answerId stands for the summary of all answer metrics\n    if (!answerId) {\n      return isMarketRanked(contract) &&\n        contract.resolutionTime &&\n        contract.resolutionTime <= PROFIT_CUTOFF_TIME &&\n        contract.createdTime > Date.parse(DPM_CUTOFF_TIMESTAMP)\n        ? 9 * profit\n        : isMarketRanked(contract)\n        ? undefined\n        : -1 * profit\n    }\n    const answer = answers?.find((a) => a.id === answerId)\n    if (!answer) {\n      console.log(\n        `answer with id ${answerId} not found, but is required for cpmm-multi-1 contract: ${contract.id}`\n      )\n      return undefined\n    }\n    return isMarketRanked(contract) &&\n      answer.resolutionTime &&\n      answer.resolutionTime <= PROFIT_CUTOFF_TIME &&\n      contract.createdTime > Date.parse(DPM_CUTOFF_TIMESTAMP)\n      ? 9 * profit\n      : isMarketRanked(contract)\n      ? undefined\n      : -1 * profit\n  }\n\n  return isMarketRanked(contract) &&\n    contract.resolutionTime &&\n    contract.resolutionTime <= PROFIT_CUTOFF_TIME\n    ? 9 * profit\n    : isMarketRanked(contract)\n    ? undefined\n    : -1 * profit\n}\n\n// Add the AIGeneratedMarket type definition here, before the API object\nexport type AIGeneratedMarket = Pick<\n  MarketContract,\n  'question' | 'description'\n> & {\n  outcomeType:\n    | 'INDEPENDENT_MULTIPLE_CHOICE'\n    | 'DEPENDENT_MULTIPLE_CHOICE'\n    | 'BINARY'\n    | 'POLL'\n  descriptionMarkdown: string\n  closeDate: string\n  shouldAnswersSumToOne?: boolean\n  initialProb?: number\n  answers?: string[]\n  reasoning?: string\n  addAnswersMode?: add_answers_mode\n  promptVersion: number\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4584, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/economy.ts"],"sourcesContent":["import {\n  CREATEABLE_NON_PREDICTIVE_OUTCOME_TYPES,\n  OutcomeType,\n} from 'common/contract'\nimport { MarketTierType, tiers } from './tier'\n\nexport const DEFAULT_CASH_ANTE = 50\n\nexport const FIXED_ANTE = 1000\nconst BASE_ANSWER_COST = FIXED_ANTE / 10\nconst MIN_ANSWER_COST = 25\nconst ANTES = {\n  BINARY: FIXED_ANTE,\n  MULTIPLE_CHOICE: BASE_ANSWER_COST, // Amount per answer.\n  FREE_RESPONSE: BASE_ANSWER_COST, // Amount per answer.\n  PSEUDO_NUMERIC: FIXED_ANTE * 2.5,\n  STONK: FIXED_ANTE,\n  BOUNTIED_QUESTION: 0,\n  POLL: FIXED_ANTE / 10,\n  NUMBER: FIXED_ANTE * 10,\n}\n\nexport const getTieredAnswerCost = (marketTier: MarketTierType | undefined) => {\n  return marketTier\n    ? Math.max(\n        BASE_ANSWER_COST * 10 ** (tiers.indexOf(marketTier) - 1),\n        MIN_ANSWER_COST\n      )\n    : BASE_ANSWER_COST\n}\n\nexport const MINIMUM_BOUNTY = 1000\nexport const MULTIPLE_CHOICE_MINIMUM_COST = 1000\n\nexport const getAnte = (\n  outcomeType: OutcomeType,\n  numAnswers: number | undefined\n) => {\n  const ante = ANTES[outcomeType as keyof typeof ANTES] ?? FIXED_ANTE\n\n  if (outcomeType === 'MULTIPLE_CHOICE') {\n    return Math.max(ante * (numAnswers ?? 0), MULTIPLE_CHOICE_MINIMUM_COST)\n  }\n\n  return ante\n}\nexport const getTieredCost = (\n  baseCost: number,\n  tier: MarketTierType | undefined,\n  outcomeType: OutcomeType\n) => {\n  if (CREATEABLE_NON_PREDICTIVE_OUTCOME_TYPES.includes(outcomeType)) {\n    return baseCost\n  }\n\n  const tieredCost = tier\n    ? baseCost * 10 ** (tiers.indexOf(tier) - 1)\n    : baseCost\n\n  if (outcomeType == 'NUMBER' && tier != 'play') {\n    return tieredCost / 10\n  }\n\n  return tieredCost\n}\n\n/* Sweeps bonuses */\nexport const KYC_VERIFICATION_BONUS_CASH = 3\nexport const BETTING_STREAK_SWEEPS_BONUS_AMOUNT = 0.05\nexport const BETTING_STREAK_SWEEPS_BONUS_MAX = 0.25\n\n/* Mana bonuses */\nexport const STARTING_BALANCE = 100\n// for sus users, i.e. multiple sign ups for same person\nexport const SUS_STARTING_BALANCE = 10\nexport const PHONE_VERIFICATION_BONUS = 1000\n\nexport const REFERRAL_AMOUNT = 1_000\nexport const REFERRAL_AMOUNT_CASH = 10.0\nexport const REFERRAL_MIN_PURCHASE_DOLLARS = 20\n\nexport const UNIQUE_BETTOR_BONUS_AMOUNT = 10\nexport const UNIQUE_ANSWER_BETTOR_BONUS_AMOUNT = 10\n\n/* Disabled bonuses */\nexport const NEXT_DAY_BONUS = 100 // Paid on day following signup\nexport const MARKET_VISIT_BONUS = 100 // Paid on first distinct 5 market visits\nexport const MARKET_VISIT_BONUS_TOTAL = 500\nexport const UNIQUE_BETTOR_LIQUIDITY = 20\nexport const SMALL_UNIQUE_BETTOR_LIQUIDITY = 5\nexport const MAX_TRADERS_FOR_BIG_BONUS = 50\nexport const MAX_TRADERS_FOR_BONUS = 10000\n\nexport const SUBSIDY_FEE = 0\n\nexport const BETTING_STREAK_BONUS_AMOUNT = 5\nexport const BETTING_STREAK_BONUS_MAX = 25\nexport const BETTING_STREAK_RESET_HOUR = 7\n\nexport const MANACHAN_TWEET_COST = 250\nexport const PUSH_NOTIFICATION_BONUS = 1000\nexport const BURN_MANA_USER_ID = 'SlYWAUtOzGPIYyQfXfvmHPt8eu22'\n\nconst PaymentAmounts = [\n  {\n    mana: 500,\n    priceInDollars: 7,\n    bonusInDollars: 0,\n    devStripeId: 'price_1Q5vRAGdoFKoCJW7zk9OTWBK',\n    prodStripeId: 'price_1Q5vLGGdoFKoCJW7Q9w7cK1u',\n  },\n  {\n    mana: 1_000,\n    priceInDollars: 15,\n    bonusInDollars: 10,\n  },\n  {\n    mana: 2_500,\n    priceInDollars: 30,\n    bonusInDollars: 25,\n  },\n  {\n    mana: 5_000,\n    priceInDollars: 55,\n    bonusInDollars: 0,\n    devStripeId: 'price_1Q5vaXGdoFKoCJW71l2OL31r',\n    prodStripeId: 'price_1Q5vJjGdoFKoCJW7Ws09fJ4j',\n  },\n  {\n    mana: 10_000,\n    priceInDollars: 110,\n    bonusInDollars: 100,\n  },\n  {\n    mana: 100_000,\n    priceInDollars: 1_000,\n    bonusInDollars: 1000,\n  },\n  {\n    mana: 1_000,\n    originalPriceInDollars: 15,\n    priceInDollars: 7,\n    bonusInDollars: 10,\n    newUsersOnly: true,\n  },\n  {\n    mana: 5_000,\n    originalPriceInDollars: 55,\n    priceInDollars: 20,\n    bonusInDollars: 40,\n    newUsersOnly: true,\n  },\n]\nexport type PaymentAmount = (typeof PaymentAmounts)[number]\n\nexport const WEB_PRICES = PaymentAmounts\n\nexport type WebPriceInDollars =\n  (typeof PaymentAmounts)[number]['priceInDollars']\n// TODO: these prices should be a function of whether the user is sweepstakes verified or not\nexport const IOS_PRICES = [\n  {\n    mana: 1_000,\n    priceInDollars: 14.99,\n    bonusInDollars: 10,\n    sku: 'mana_1000',\n  },\n  {\n    mana: 2_500,\n    priceInDollars: 35.99,\n    bonusInDollars: 25,\n    sku: 'mana_2500',\n  },\n  {\n    mana: 10_000,\n    priceInDollars: 142.99,\n    bonusInDollars: 100,\n    sku: 'mana_10000',\n  },\n]\n\nexport const SWEEPIES_CASHOUT_FEE = 0.05\nexport const MIN_CASHOUT_AMOUNT = 25\n\nexport const SWEEPS_MIN_BET = 1\nexport const MANA_MIN_BET = 1\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4771, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4786, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/supabase/utils.ts"],"sourcesContent":["import {\n  createClient as createClientGeneric,\n  PostgrestResponse,\n  PostgrestSingleResponse,\n  SupabaseClient as SupabaseClientGeneric,\n  SupabaseClientOptions as SupabaseClientOptionsGeneric,\n} from '@supabase/supabase-js'\nimport { Database } from './schema'\nimport { User } from '../user'\nimport { Contract } from '../contract'\nimport { Bet } from '../bet'\nimport { ContractMetric } from '../contract-metric'\nimport { Group } from '../group'\nimport { Txn } from '../txn'\nimport { Answer } from 'common/answer'\n\nexport type Schema = Database['public']\nexport type Tables = Schema['Tables']\nexport type Views = Schema['Views']\nexport type TableName = keyof Tables\nexport type ViewName = keyof Views\nexport type Selectable = TableName | ViewName\nexport type Row<T extends Selectable> = T extends TableName\n  ? Tables[T]['Row']\n  : T extends ViewName\n  ? Views[T]['Row']\n  : never\nexport type Column<T extends Selectable> = keyof Row<T> & string\n\nexport type SupabaseClient = SupabaseClientGeneric<Database, 'public', Schema>\n\nexport function createClient(\n  instanceId: string,\n  key: string,\n  opts?: SupabaseClientOptionsGeneric<'public'>\n) {\n  const url = `https://${instanceId}.supabase.co`\n  return createClientGeneric(url, key, opts) as SupabaseClient\n}\n\nexport type QueryResponse<T> = PostgrestResponse<T> | PostgrestSingleResponse<T>\nexport type QueryMultiSuccessResponse<T> = { data: T[]; count: number }\nexport type QuerySingleSuccessResponse<T> = { data: T; count: number }\n\nexport async function run<T>(\n  q: PromiseLike<PostgrestResponse<T>>\n): Promise<QueryMultiSuccessResponse<T>>\nexport async function run<T>(\n  q: PromiseLike<PostgrestSingleResponse<T>>\n): Promise<QuerySingleSuccessResponse<T>>\nexport async function run<T>(\n  q: PromiseLike<PostgrestSingleResponse<T> | PostgrestResponse<T>>\n) {\n  const { data, count, error } = await q\n  if (error != null) {\n    throw error\n  } else {\n    return { data, count }\n  }\n}\n\ntype JsonTypes = {\n  users: User\n  user_contract_metrics: ContractMetric\n  contracts: Contract\n  answers: Answer\n  contract_bets: Bet\n  groups: Group\n  txns: Txn\n}\n\nexport type DataFor<T extends Selectable> = T extends keyof JsonTypes\n  ? JsonTypes[T]\n  : any\n\nexport function millisToTs(millis: number) {\n  return new Date(millis).toISOString()\n}\n\nexport function tsToMillis(ts: string) {\n  return Date.parse(ts)\n}\n\ntype SnakeToCamel<S extends string> = S extends `${infer T}_${infer U}`\n  ? `${Lowercase<T>}${Capitalize<SnakeToCamel<U>>}`\n  : S\n\nconst camelize = <S extends string>(s: S) =>\n  s.replace(/(_\\w)/g, (m) => m[1].toUpperCase()) as SnakeToCamel<S>\n\n// sql column ->  converter function or false\ntype TypeConverter<R extends Selectable, T extends Record<string, any>> = {\n  [key in Column<R>]?: SnakeToCamel<key> extends keyof T\n    ? ((r: Row<R>[key]) => T[SnakeToCamel<key>]) | false\n    : false\n}\n\n/**\n * Convert a sql row to its frontend data type.\n * Changes snake_case to camelCase.\n * You can also specify conversion functions for each column, or set it to false to filter it.\n */\nexport const convertSQLtoTS = <\n  R extends Selectable,\n  T extends Record<string, any>\n>(\n  sqlData: Partial<Row<R> & { data: any }>,\n  converters: TypeConverter<R, T>,\n  expandData = true,\n  shouldCamelize = true\n) => {\n  const { data = {}, ...rows } = sqlData\n\n  const entries = Object.entries(rows)\n\n  const m = entries\n    .map((entry) => {\n      const [key, val] = entry as [Column<R>, Row<R>[Column<R>]]\n\n      const convert = converters[key]\n      if (convert === false) return null\n      const jsProp = shouldCamelize ? camelize(key) : key\n      const jsVal = convert != null ? convert(val) : val\n      return [jsProp, jsVal]\n    })\n    .filter((x) => x != null)\n\n  const newRows = Object.fromEntries(m as any)\n  if (expandData) return { ...data, ...newRows } as T\n  else return { ...newRows } as T\n}\n\nexport const convertObjectToSQLRow = <\n  T extends Record<string, any>,\n  R extends Selectable\n>(\n  objData: Partial<T>\n) => {\n  const entries = Object.entries(objData)\n\n  const m = entries\n    .map((entry) => {\n      const [key, val] = entry as [string, T[keyof T]]\n\n      const decamelizeKey = key.replace(/([A-Z])/g, '_$1').toLowerCase()\n\n      return [decamelizeKey, val]\n    })\n    .filter((x) => x != null)\n\n  const newRows = Object.fromEntries(m as any)\n\n  return newRows as Partial<Row<R> & { data: any }>\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;;AA+BO,SAAS,aACd,UAAkB,EAClB,GAAW,EACX,IAA6C;IAE7C,MAAM,MAAM,CAAC,QAAQ,EAAE,WAAW,YAAY,CAAC;IAC/C,OAAO,CAAA,GAAA,iJAAA,CAAA,eAAmB,AAAD,EAAE,KAAK,KAAK;AACvC;AAYO,eAAe,IACpB,CAAiE;IAEjE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM;IACrC,IAAI,SAAS,MAAM;QACjB,MAAM;IACR,OAAO;QACL,OAAO;YAAE;YAAM;QAAM;IACvB;AACF;AAgBO,SAAS,WAAW,MAAc;IACvC,OAAO,IAAI,KAAK,QAAQ,WAAW;AACrC;AAEO,SAAS,WAAW,EAAU;IACnC,OAAO,KAAK,KAAK,CAAC;AACpB;AAMA,MAAM,WAAW,CAAmB,IAClC,EAAE,OAAO,CAAC,UAAU,CAAC,IAAM,CAAC,CAAC,EAAE,CAAC,WAAW;AActC,MAAM,iBAAiB,CAI5B,SACA,YACA,aAAa,IAAI,EACjB,iBAAiB,IAAI;IAErB,MAAM,EAAE,OAAO,CAAC,CAAC,EAAE,GAAG,MAAM,GAAG;IAE/B,MAAM,UAAU,OAAO,OAAO,CAAC;IAE/B,MAAM,IAAI,QACP,GAAG,CAAC,CAAC;QACJ,MAAM,CAAC,KAAK,IAAI,GAAG;QAEnB,MAAM,UAAU,UAAU,CAAC,IAAI;QAC/B,IAAI,YAAY,OAAO,OAAO;QAC9B,MAAM,SAAS,iBAAiB,SAAS,OAAO;QAChD,MAAM,QAAQ,WAAW,OAAO,QAAQ,OAAO;QAC/C,OAAO;YAAC;YAAQ;SAAM;IACxB,GACC,MAAM,CAAC,CAAC,IAAM,KAAK;IAEtB,MAAM,UAAU,OAAO,WAAW,CAAC;IACnC,IAAI,YAAY,OAAO;QAAE,GAAG,IAAI;QAAE,GAAG,OAAO;IAAC;SACxC,OAAO;QAAE,GAAG,OAAO;IAAC;AAC3B;AAEO,MAAM,wBAAwB,CAInC;IAEA,MAAM,UAAU,OAAO,OAAO,CAAC;IAE/B,MAAM,IAAI,QACP,GAAG,CAAC,CAAC;QACJ,MAAM,CAAC,KAAK,IAAI,GAAG;QAEnB,MAAM,gBAAgB,IAAI,OAAO,CAAC,YAAY,OAAO,WAAW;QAEhE,OAAO;YAAC;YAAe;SAAI;IAC7B,GACC,MAAM,CAAC,CAAC,IAAM,KAAK;IAEtB,MAAM,UAAU,OAAO,WAAW,CAAC;IAEnC,OAAO;AACT"}},
    {"offset": {"line": 4854, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4860, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/supabase/bets.ts"],"sourcesContent":["import { convertSQLtoTS } from 'common/supabase/utils'\nimport { Row, tsToMillis } from './utils'\nimport { Bet } from 'common/bet'\nexport const NON_POINTS_BETS_LIMIT = 10_000\n\nexport const convertBet = (row: Row<'contract_bets'>) =>\n  convertSQLtoTS<'contract_bets', Bet>(row, {\n    updated_time: tsToMillis,\n    created_time: tsToMillis,\n    answer_id: (a) => (a != null ? a : undefined),\n  })\n"],"names":[],"mappings":";;;;AAAA;;;AAGO,MAAM,wBAAwB;AAE9B,MAAM,aAAa,CAAC,MACzB,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAwB,KAAK;QACxC,cAAc,2HAAA,CAAA,aAAU;QACxB,cAAc,2HAAA,CAAA,aAAU;QACxB,WAAW,CAAC,IAAO,KAAK,OAAO,IAAI;IACrC"}},
    {"offset": {"line": 4873, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4879, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/answer.ts"],"sourcesContent":["import { sortBy } from 'lodash'\nimport { MultiContract, resolution } from './contract'\n\nexport type Answer = {\n  id: string\n  index: number // Order of the answer in the list\n  contractId: string\n  userId: string\n  text: string\n  createdTime: number\n  color?: string // Hex color override in UI\n\n  // Mechanism props\n  poolYes: number // YES shares\n  poolNo: number // NO shares\n  prob: number // Computed from poolYes and poolNo.\n  totalLiquidity: number // for historical reasons, this the total subsidy amount added in M\n  subsidyPool: number // current value of subsidy pool in M\n\n  // Is this 'Other', the answer that represents all other answers, including answers added in the future.\n  isOther?: boolean\n\n  resolution?: resolution\n  resolutionTime?: number\n  resolutionProbability?: number\n  resolverId?: string\n\n  probChanges: {\n    day: number\n    week: number\n    month: number\n  }\n\n  loverUserId?: string\n}\n\nexport const MAX_ANSWER_LENGTH = 240\n\nexport const MAX_ANSWERS = 100\nexport const MAX_INDEPENDENT_ANSWERS = 200\n\nexport const getMaximumAnswers = (shouldAnswersSumToOne: boolean) =>\n  shouldAnswersSumToOne ? MAX_ANSWERS : MAX_INDEPENDENT_ANSWERS\n\nexport const OTHER_TOOLTIP_TEXT =\n  \"Bet on all answers that aren't listed yet. A bet on Other automatically includes any answer added in the future.\"\n\nexport type MultiSort =\n  | 'prob-desc'\n  | 'prob-asc'\n  | 'old'\n  | 'new'\n  | 'liquidity'\n  | 'alphabetical'\n\nexport const getDefaultSort = (contract: MultiContract) => {\n  const { sort, answers } = contract\n  if (sort) return sort\n  if (contract.addAnswersMode === 'DISABLED') return 'old'\n  else if (!contract.shouldAnswersSumToOne) return 'prob-desc'\n  else if (answers.length > 10) return 'prob-desc'\n  return 'old'\n}\n\nexport const sortAnswers = <T extends Answer>(\n  contract: MultiContract,\n  answers: T[],\n  sort?: MultiSort\n) => {\n  const { resolutions } = contract\n  sort = sort ?? getDefaultSort(contract)\n\n  const shouldAnswersSumToOne =\n    'shouldAnswersSumToOne' in contract ? contract.shouldAnswersSumToOne : true\n\n  return sortBy(answers, [\n    shouldAnswersSumToOne\n      ? // Winners first\n        (answer) => (resolutions ? -1 * resolutions[answer.id] : answer)\n      : // Resolved last\n        (answer) => (answer.resolution ? 1 : 0),\n    // then by sort\n    (answer) => {\n      if (sort === 'old') {\n        return answer.resolutionTime ? answer.resolutionTime : answer.index\n      } else if (sort === 'new') {\n        return answer.resolutionTime ? -answer.resolutionTime : -answer.index\n      } else if (sort === 'prob-asc') {\n        return answer.prob\n      } else if (sort === 'prob-desc') {\n        return -1 * answer.prob\n      } else if (sort === 'liquidity') {\n        return answer.subsidyPool ? -1 * answer.subsidyPool : 0\n      } else if (sort === 'alphabetical') {\n        return answer.text.toLowerCase()\n      }\n      return 0\n    },\n  ])\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;;AAoCO,MAAM,oBAAoB;AAE1B,MAAM,cAAc;AACpB,MAAM,0BAA0B;AAEhC,MAAM,oBAAoB,CAAC,wBAChC,wBAAwB,cAAc;AAEjC,MAAM,qBACX;AAUK,MAAM,iBAAiB,CAAC;IAC7B,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG;IAC1B,IAAI,MAAM,OAAO;IACjB,IAAI,SAAS,cAAc,KAAK,YAAY,OAAO;SAC9C,IAAI,CAAC,SAAS,qBAAqB,EAAE,OAAO;SAC5C,IAAI,QAAQ,MAAM,GAAG,IAAI,OAAO;IACrC,OAAO;AACT;AAEO,MAAM,cAAc,CACzB,UACA,SACA;IAEA,MAAM,EAAE,WAAW,EAAE,GAAG;IACxB,OAAO,QAAQ,eAAe;IAE9B,MAAM,wBACJ,2BAA2B,WAAW,SAAS,qBAAqB,GAAG;IAEzE,OAAO,CAAA,GAAA,qIAAA,CAAA,UAAM,AAAD,EAAE,SAAS;QACrB,wBAEI,CAAC,SAAY,cAAc,CAAC,IAAI,WAAW,CAAC,OAAO,EAAE,CAAC,GAAG,SAEzD,CAAC,SAAY,OAAO,UAAU,GAAG,IAAI;QACzC,eAAe;QACf,CAAC;YACC,IAAI,SAAS,OAAO;gBAClB,OAAO,OAAO,cAAc,GAAG,OAAO,cAAc,GAAG,OAAO,KAAK;YACrE,OAAO,IAAI,SAAS,OAAO;gBACzB,OAAO,OAAO,cAAc,GAAG,CAAC,OAAO,cAAc,GAAG,CAAC,OAAO,KAAK;YACvE,OAAO,IAAI,SAAS,YAAY;gBAC9B,OAAO,OAAO,IAAI;YACpB,OAAO,IAAI,SAAS,aAAa;gBAC/B,OAAO,CAAC,IAAI,OAAO,IAAI;YACzB,OAAO,IAAI,SAAS,aAAa;gBAC/B,OAAO,OAAO,WAAW,GAAG,CAAC,IAAI,OAAO,WAAW,GAAG;YACxD,OAAO,IAAI,SAAS,gBAAgB;gBAClC,OAAO,OAAO,IAAI,CAAC,WAAW;YAChC;YACA,OAAO;QACT;KACD;AACH"}},
    {"offset": {"line": 4928, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4942, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/group.ts"],"sourcesContent":["import { Row } from './supabase/utils'\nimport { JSONContent } from '@tiptap/core'\nimport { z, ZodRawShape } from 'zod'\nimport { contentSchema, coerceBoolean } from './api/zod-types'\nimport { pick } from 'lodash'\n\nexport type Group = {\n  id: string\n  slug: string\n  name: string\n  about?: string | JSONContent\n  creatorId: string // User id\n  createdTime: number // native col only\n  totalMembers: number // native col only\n  bannerUrl?: string\n  privacyStatus: PrivacyStatusType\n  importanceScore: number // native col only\n}\n\nexport type GroupResponse = Row<'groups'>\n\nexport type PrivacyStatusType = 'public' | 'curated'\nexport const MAX_GROUP_NAME_LENGTH = 75\n// export const MAX_ABOUT_LENGTH = 140\nexport const MAX_ID_LENGTH = 60\nexport const MAX_GROUPS_PER_MARKET = 5\n\nexport const GroupAboutSchema = contentSchema.or(z.string())\n\nexport const GroupNameSchema = z\n  .string()\n  .trim()\n  .min(2)\n  .max(MAX_GROUP_NAME_LENGTH)\n\nexport type Topic = LiteGroup\nexport type LiteGroup = Pick<\n  Group,\n  'id' | 'slug' | 'name' | 'importanceScore' | 'privacyStatus' | 'totalMembers'\n>\n\nexport function groupPath(groupSlug: string) {\n  return `/topic/${groupSlug}`\n}\n\nexport function toLiteGroup(group: Group): LiteGroup {\n  return pick(group, [\n    'id',\n    'slug',\n    'name',\n    'importanceScore',\n    'privacyStatus',\n    'totalMembers',\n  ] as const)\n}\n\n// note: changing these breaks old urls. if you do, make sure to update omnisearch and opensearch.xml\nexport const TOPIC_KEY = 'topic'\nexport const DEFAULT_TOPIC = ''\nexport type GroupRole = 'admin' | 'moderator' | 'member'\n\nexport const SearchGroupParams = (shape: ZodRawShape) =>\n  z.object(shape).strict()\n\nexport const MySearchGroupShape = {\n  term: z.string(),\n  offset: z.coerce.number().gte(0).default(0),\n  limit: z.coerce.number().gt(0),\n  addingToContract: coerceBoolean.optional(),\n  type: z.enum(['full', 'lite']).default('full'),\n}\nexport const SearchGroupShape = {\n  ...MySearchGroupShape,\n  memberGroupsOnly: coerceBoolean.optional(),\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA;AAEA;AADA;;;;;;;;;AAmBO,MAAM,wBAAwB;AAE9B,MAAM,gBAAgB;AACtB,MAAM,wBAAwB;AAE9B,MAAM,mBAAmB,6HAAA,CAAA,gBAAa,CAAC,EAAE,CAAC,sGAAA,CAAA,IAAC,CAAC,MAAM;AAElD,MAAM,kBAAkB,sGAAA,CAAA,IAAC,CAC7B,MAAM,GACN,IAAI,GACJ,GAAG,CAAC,GACJ,GAAG,CAAC;AAQA,SAAS,UAAU,SAAiB;IACzC,OAAO,CAAC,OAAO,EAAE,WAAW;AAC9B;AAEO,SAAS,YAAY,KAAY;IACtC,OAAO,CAAA,GAAA,iIAAA,CAAA,UAAI,AAAD,EAAE,OAAO;QACjB;QACA;QACA;QACA;QACA;QACA;KACD;AACH;AAGO,MAAM,YAAY;AAClB,MAAM,gBAAgB;AAGtB,MAAM,oBAAoB,CAAC,QAChC,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC,OAAO,MAAM;AAEjB,MAAM,qBAAqB;IAChC,MAAM,sGAAA,CAAA,IAAC,CAAC,MAAM;IACd,QAAQ,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,OAAO,CAAC;IACzC,OAAO,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;IAC5B,kBAAkB,6HAAA,CAAA,gBAAa,CAAC,QAAQ;IACxC,MAAM,sGAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAO,EAAE,OAAO,CAAC;AACzC;AACO,MAAM,mBAAmB;IAC9B,GAAG,kBAAkB;IACrB,kBAAkB,6HAAA,CAAA,gBAAa,CAAC,QAAQ;AAC1C"}},
    {"offset": {"line": 5002, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5009, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/util/random.ts"],"sourcesContent":["const a = 'useandom26T198340PX75pxJACKVERYMINDBUSHWOLFGQZbfghjklqvwyzrict'\nexport const nanoid = (e = 21) => {\n  let t = ''\n  const r = crypto.getRandomValues(new Uint8Array(e))\n  for (let n = 0; n < e; n++) t += a[61 & r[n]]\n  if (t.length !== e) throw new Error('Failed to generate random string')\n  return t\n}\n\n// Matches the output of the randomString function, for validation purposes.\nexport const randomStringRegex = new RegExp(`^[${a}]+$`)\nexport const randomString = (length = 10) => nanoid(length)\n\nexport function genHash(str: string) {\n  // xmur3\n\n  // Route around compiler bug by using object?\n  const o = { h: 1779033703 ^ str.length }\n\n  for (let i = 0; i < str.length; i++) {\n    let h = o.h\n    h = Math.imul(h ^ str.charCodeAt(i), 3432918353)\n    h = (h << 13) | (h >>> 19)\n    o.h = h\n  }\n  return function () {\n    let h = o.h\n    h = Math.imul(h ^ (h >>> 16), 2246822507)\n    h = Math.imul(h ^ (h >>> 13), 3266489909)\n    return (h ^= h >>> 16) >>> 0\n  }\n}\n\nexport function createRNG(seed: string) {\n  // https://stackoverflow.com/a/47593316/1592933\n\n  const gen = genHash(seed)\n  let [a, b, c, d] = [gen(), gen(), gen(), gen()]\n\n  // sfc32\n  return function () {\n    a >>>= 0\n    b >>>= 0\n    c >>>= 0\n    d >>>= 0\n    let t = (a + b) | 0\n    a = b ^ (b >>> 9)\n    b = (c + (c << 3)) | 0\n    c = (c << 21) | (c >>> 11)\n    d = (d + 1) | 0\n    t = (t + d) | 0\n    c = (c + t) | 0\n    return (t >>> 0) / 4294967296\n  }\n}\n\nexport const shuffle = (array: unknown[], rand: () => number) => {\n  for (let i = 0; i < array.length; i++) {\n    const swapIndex = i + Math.floor(rand() * (array.length - i))\n    ;[array[i], array[swapIndex]] = [array[swapIndex], array[i]]\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,IAAI;AACH,MAAM,SAAS,CAAC,IAAI,EAAE;IAC3B,IAAI,IAAI;IACR,MAAM,IAAI,OAAO,eAAe,CAAC,IAAI,WAAW;IAChD,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;IAC7C,IAAI,EAAE,MAAM,KAAK,GAAG,MAAM,IAAI,MAAM;IACpC,OAAO;AACT;AAGO,MAAM,oBAAoB,IAAI,OAAO,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC;AAChD,MAAM,eAAe,CAAC,SAAS,EAAE,GAAK,OAAO;AAE7C,SAAS,QAAQ,GAAW;IACjC,QAAQ;IAER,6CAA6C;IAC7C,MAAM,IAAI;QAAE,GAAG,aAAa,IAAI,MAAM;IAAC;IAEvC,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAAK;QACnC,IAAI,IAAI,EAAE,CAAC;QACX,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI;QACrC,IAAI,AAAC,KAAK,KAAO,MAAM;QACvB,EAAE,CAAC,GAAG;IACR;IACA,OAAO;QACL,IAAI,IAAI,EAAE,CAAC;QACX,IAAI,KAAK,IAAI,CAAC,IAAK,MAAM,IAAK;QAC9B,IAAI,KAAK,IAAI,CAAC,IAAK,MAAM,IAAK;QAC9B,OAAO,CAAC,KAAK,MAAM,EAAE,MAAM;IAC7B;AACF;AAEO,SAAS,UAAU,IAAY;IACpC,+CAA+C;IAE/C,MAAM,MAAM,QAAQ;IACpB,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG;QAAC;QAAO;QAAO;QAAO;KAAM;IAE/C,QAAQ;IACR,OAAO;QACL,OAAO;QACP,OAAO;QACP,OAAO;QACP,OAAO;QACP,IAAI,IAAI,AAAC,IAAI,IAAK;QAClB,IAAI,IAAK,MAAM;QACf,IAAI,AAAC,IAAI,CAAC,KAAK,CAAC,IAAK;QACrB,IAAI,AAAC,KAAK,KAAO,MAAM;QACvB,IAAI,AAAC,IAAI,IAAK;QACd,IAAI,AAAC,IAAI,IAAK;QACd,IAAI,AAAC,IAAI,IAAK;QACd,OAAO,CAAC,MAAM,CAAC,IAAI;IACrB;AACF;AAEO,MAAM,UAAU,CAAC,OAAkB;IACxC,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;QACrC,MAAM,YAAY,IAAI,KAAK,KAAK,CAAC,SAAS,CAAC,MAAM,MAAM,GAAG,CAAC;QAC1D,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,UAAU,CAAC,GAAG;YAAC,KAAK,CAAC,UAAU;YAAE,KAAK,CAAC,EAAE;SAAC;IAC9D;AACF"}},
    {"offset": {"line": 5080, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5086, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/pseudo-numeric.ts"],"sourcesContent":["import { Contract, PseudoNumericContract, StonkContract } from './contract'\nimport { formatLargeNumber, formatPercent } from './util/format'\nimport { getStonkPriceAtProb } from 'common/stonk'\n\nexport function formatNumericProbability(\n  p: number,\n  contract: PseudoNumericContract | StonkContract\n) {\n  const value = getMappedValue(contract, p)\n  return formatLargeNumber(value)\n}\n\nexport const getMappedValue = (contract: Contract, prob: number) => {\n  if (\n    contract.outcomeType !== 'PSEUDO_NUMERIC' &&\n    contract.outcomeType !== 'STONK'\n  )\n    return prob\n\n  if (contract.outcomeType === 'STONK')\n    return getStonkPriceAtProb(contract as StonkContract, prob)\n\n  const { min, max, isLogScale } = contract\n\n  if (isLogScale) {\n    const logValue = prob * Math.log10(max - min + 1)\n    return 10 ** logValue + min - 1\n  }\n\n  return prob * (max - min) + min\n}\n\nexport const getFormattedMappedValue = (contract: Contract, prob: number) => {\n  const { outcomeType } = contract\n  if (outcomeType !== 'PSEUDO_NUMERIC' && outcomeType !== 'STONK')\n    return formatPercent(prob)\n\n  const value = getMappedValue(contract, prob)\n  return formatLargeNumber(value)\n}\n\nexport const getPseudoProbability = (\n  value: number,\n  min: number,\n  max: number,\n  isLogScale = false\n) => {\n  if (value < min) return 0\n  if (value > max) return 1\n\n  if (isLogScale) {\n    return Math.log10(value - min + 1) / Math.log10(max - min + 1)\n  }\n\n  return (value - min) / (max - min)\n}\n"],"names":[],"mappings":";;;;;;AAEA;AADA;;;AAGO,SAAS,yBACd,CAAS,EACT,QAA+C;IAE/C,MAAM,QAAQ,eAAe,UAAU;IACvC,OAAO,CAAA,GAAA,wHAAA,CAAA,oBAAiB,AAAD,EAAE;AAC3B;AAEO,MAAM,iBAAiB,CAAC,UAAoB;IACjD,IACE,SAAS,WAAW,KAAK,oBACzB,SAAS,WAAW,KAAK,SAEzB,OAAO;IAET,IAAI,SAAS,WAAW,KAAK,SAC3B,OAAO,CAAA,GAAA,+GAAA,CAAA,sBAAmB,AAAD,EAAE,UAA2B;IAExD,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG;IAEjC,IAAI,YAAY;QACd,MAAM,WAAW,OAAO,KAAK,KAAK,CAAC,MAAM,MAAM;QAC/C,OAAO,MAAM,WAAW,MAAM;IAChC;IAEA,OAAO,OAAO,CAAC,MAAM,GAAG,IAAI;AAC9B;AAEO,MAAM,0BAA0B,CAAC,UAAoB;IAC1D,MAAM,EAAE,WAAW,EAAE,GAAG;IACxB,IAAI,gBAAgB,oBAAoB,gBAAgB,SACtD,OAAO,CAAA,GAAA,wHAAA,CAAA,gBAAa,AAAD,EAAE;IAEvB,MAAM,QAAQ,eAAe,UAAU;IACvC,OAAO,CAAA,GAAA,wHAAA,CAAA,oBAAiB,AAAD,EAAE;AAC3B;AAEO,MAAM,uBAAuB,CAClC,OACA,KACA,KACA,aAAa,KAAK;IAElB,IAAI,QAAQ,KAAK,OAAO;IACxB,IAAI,QAAQ,KAAK,OAAO;IAExB,IAAI,YAAY;QACd,OAAO,KAAK,KAAK,CAAC,QAAQ,MAAM,KAAK,KAAK,KAAK,CAAC,MAAM,MAAM;IAC9D;IAEA,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG;AACnC"}},
    {"offset": {"line": 5124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5204, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/util/tiptap-iframe.ts"],"sourcesContent":["// Adopted from https://github.com/ueberdosis/tiptap/blob/main/demos/src/Experiments/Embeds/Vue/iframe.ts\n\nimport { Node, mergeAttributes } from '@tiptap/core'\n\nexport interface IframeOptions {\n  HTMLAttributes: {\n    [key: string]: any\n  }\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    iframe: {\n      setIframe: (options: { src: string }) => ReturnType\n    }\n  }\n}\n\nexport default Node.create<IframeOptions>({\n  name: 'iframe',\n\n  group: 'block',\n\n  atom: true,\n\n  addOptions() {\n    return {\n      HTMLAttributes: {\n        class: 'w-full h-80',\n        height: 80 * 4,\n        sandbox:\n          'allow-scripts allow-same-origin allow-forms allow-popups allow-popups-to-escape-sandbox',\n      },\n    }\n  },\n\n  addAttributes() {\n    return {\n      src: {\n        default: null,\n      },\n      frameBorder: {\n        default: 0,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [{ tag: 'iframe' }]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const iframeAttributes = mergeAttributes(\n      HTMLAttributes,\n      // Add options second, so they override originals, which prevents a XSS attack.\n      this.options.HTMLAttributes\n    )\n\n    const blacklistedAttributes = ['srcdoc']\n    const keysToRemove = Object.keys(iframeAttributes).filter((key) =>\n      blacklistedAttributes.includes(key.toLowerCase())\n    )\n    for (const key of keysToRemove) {\n      delete iframeAttributes[key]\n    }\n\n    const { src } = HTMLAttributes\n\n    // This is a hack to prevent native from opening the iframe in an in-app browser\n    // and mobile in another tab. In native, links with target='_blank' open in the in-app browser.\n    if (src.includes('manifold.markets/embed/')) {\n      return [\n        'div',\n        {\n          style: {\n            position: 'relative',\n          },\n          ...this.options.HTMLAttributes,\n        },\n        [\n          'a',\n          {\n            href: src.replace('embed/', ''),\n            target: '_self',\n            style: {\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              zIndex: 20, // This is equivalent to tailwind's z-20\n              display: 'block',\n            },\n          },\n        ],\n        ['iframe', iframeAttributes],\n      ]\n    }\n\n    return ['iframe', iframeAttributes]\n  },\n\n  addCommands() {\n    return {\n      setIframe:\n        (options: { src: string }) =>\n        ({ tr, dispatch }) => {\n          const { selection } = tr\n          const node = this.type.create(options)\n\n          if (dispatch) {\n            tr.replaceRangeWith(selection.from, selection.to, node)\n          }\n\n          return true\n        },\n    }\n  },\n})\n"],"names":[],"mappings":"AAAA,yGAAyG;;;;AAEzG;;;;;;uCAgBe,gIAAA,CAAA,OAAI,CAAC,MAAM,CAAgB;IACxC,MAAM;IAEN,OAAO;IAEP,MAAM;IAEN;QACE,OAAO;YACL,gBAAgB;gBACd,OAAO;gBACP,QAAQ,KAAK;gBACb,SACE;YACJ;QACF;IACF;IAEA;QACE,OAAO;YACL,KAAK;gBACH,SAAS;YACX;YACA,aAAa;gBACX,SAAS;YACX;QACF;IACF;IAEA;QACE,OAAO;YAAC;gBAAE,KAAK;YAAS;SAAE;IAC5B;IAEA,YAAW,EAAE,cAAc,EAAE;QAC3B,MAAM,mBAAmB,CAAA,GAAA,gIAAA,CAAA,kBAAe,AAAD,EACrC,gBACA,+EAA+E;QAC/E,IAAI,CAAC,OAAO,CAAC,cAAc;QAG7B,MAAM,wBAAwB;YAAC;SAAS;QACxC,MAAM,eAAe,OAAO,IAAI,CAAC,kBAAkB,MAAM,CAAC,CAAC,MACzD,sBAAsB,QAAQ,CAAC,IAAI,WAAW;QAEhD,KAAK,MAAM,OAAO,aAAc;YAC9B,OAAO,gBAAgB,CAAC,IAAI;QAC9B;QAEA,MAAM,EAAE,GAAG,EAAE,GAAG;QAEhB,gFAAgF;QAChF,+FAA+F;QAC/F,IAAI,IAAI,QAAQ,CAAC,4BAA4B;YAC3C,OAAO;gBACL;gBACA;oBACE,OAAO;wBACL,UAAU;oBACZ;oBACA,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc;gBAChC;gBACA;oBACE;oBACA;wBACE,MAAM,IAAI,OAAO,CAAC,UAAU;wBAC5B,QAAQ;wBACR,OAAO;4BACL,UAAU;4BACV,KAAK;4BACL,MAAM;4BACN,OAAO;4BACP,QAAQ;4BACR,QAAQ;4BACR,SAAS;wBACX;oBACF;iBACD;gBACD;oBAAC;oBAAU;iBAAiB;aAC7B;QACH;QAEA,OAAO;YAAC;YAAU;SAAiB;IACrC;IAEA;QACE,OAAO;YACL,WACE,CAAC,UACD,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE;oBACf,MAAM,EAAE,SAAS,EAAE,GAAG;oBACtB,MAAM,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;oBAE9B,IAAI,UAAU;wBACZ,GAAG,gBAAgB,CAAC,UAAU,IAAI,EAAE,UAAU,EAAE,EAAE;oBACpD;oBAEA,OAAO;gBACT;QACJ;IACF;AACF"}},
    {"offset": {"line": 5306, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5313, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/util/tiptap-tweet.ts"],"sourcesContent":["import { Node, mergeAttributes } from '@tiptap/core'\n\nexport interface TweetOptions {\n  tweetId: string\n}\n\n// This is a version of the Tiptap Node config without addNodeView,\n// since that would require bundling in tsx\nexport const TiptapTweet = Node.create<TweetOptions>({\n  name: 'tiptapTweet',\n  group: 'block',\n  atom: true,\n\n  addAttributes() {\n    return {\n      tweetId: {\n        default: null,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'tiptap-tweet',\n      },\n    ]\n  },\n\n  renderHTML(props: { HTMLAttributes: Record<string, any> }) {\n    return ['tiptap-tweet', mergeAttributes(props.HTMLAttributes)]\n  },\n})\n"],"names":[],"mappings":";;;AAAA;;;;;;AAQO,MAAM,cAAc,gIAAA,CAAA,OAAI,CAAC,MAAM,CAAe;IACnD,MAAM;IACN,OAAO;IACP,MAAM;IAEN;QACE,OAAO;YACL,SAAS;gBACP,SAAS;YACX;QACF;IACF;IAEA;QACE,OAAO;YACL;gBACE,KAAK;YACP;SACD;IACH;IAEA,YAAW,KAA8C;QACvD,OAAO;YAAC;YAAgB,CAAA,GAAA,gIAAA,CAAA,kBAAe,AAAD,EAAE,MAAM,cAAc;SAAE;IAChE;AACF"}},
    {"offset": {"line": 5347, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5354, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/util/tiptap-spoiler.ts"],"sourcesContent":["// adapted from @n8body/tiptap-spoiler\n\nimport {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    spoilerEditor: {\n      setSpoiler: () => ReturnType\n      toggleSpoiler: () => ReturnType\n      unsetSpoiler: () => ReturnType\n    }\n  }\n}\n\nexport type SpoilerOptions = {\n  class: string\n  inputRegex: RegExp\n  pasteRegex: RegExp\n}\n\nconst spoilerInputRegex = /(?:^|\\s)((?:\\|\\|)((?:[^||]+))(?:\\|\\|))$/\nconst spoilerPasteRegex = /(?:^|\\s)((?:\\|\\|)((?:[^||]+))(?:\\|\\|))/g\n\nexport const TiptapSpoiler = Mark.create<SpoilerOptions>({\n  name: 'spoiler',\n\n  inline: true,\n  group: 'inline',\n  inclusive: false,\n  exitable: true,\n  content: 'inline*',\n\n  priority: 1001, // higher priority than other formatting so they go inside\n\n  addOptions() {\n    return {\n      class: '',\n      inputRegex: spoilerInputRegex,\n      pasteRegex: spoilerPasteRegex,\n    }\n  },\n\n  addCommands() {\n    return {\n      setSpoiler:\n        () =>\n        ({ commands }) =>\n          commands.setMark(this.name),\n      toggleSpoiler:\n        () =>\n        ({ commands }) =>\n          commands.toggleMark(this.name),\n      unsetSpoiler:\n        () =>\n        ({ commands }) =>\n          commands.unsetMark(this.name),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: this.options.inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: this.options.pasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  parseHTML() {\n    return [{ tag: 'spoiler' }]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\n      'spoiler',\n      mergeAttributes(HTMLAttributes, { class: this.options.class }),\n      0,\n    ]\n  },\n})\n"],"names":[],"mappings":"AAAA,sCAAsC;;;;AAEtC;;;;;;AAuBA,MAAM,oBAAoB;AAC1B,MAAM,oBAAoB;AAEnB,MAAM,gBAAgB,gIAAA,CAAA,OAAI,CAAC,MAAM,CAAiB;IACvD,MAAM;IAEN,QAAQ;IACR,OAAO;IACP,WAAW;IACX,UAAU;IACV,SAAS;IAET,UAAU;IAEV;QACE,OAAO;YACL,OAAO;YACP,YAAY;YACZ,YAAY;QACd;IACF;IAEA;QACE,OAAO;YACL,YACE,IACA,CAAC,EAAE,QAAQ,EAAE,GACX,SAAS,OAAO,CAAC,IAAI,CAAC,IAAI;YAC9B,eACE,IACA,CAAC,EAAE,QAAQ,EAAE,GACX,SAAS,UAAU,CAAC,IAAI,CAAC,IAAI;YACjC,cACE,IACA,CAAC,EAAE,QAAQ,EAAE,GACX,SAAS,SAAS,CAAC,IAAI,CAAC,IAAI;QAClC;IACF;IAEA;QACE,OAAO;YACL,CAAA,GAAA,gIAAA,CAAA,gBAAa,AAAD,EAAE;gBACZ,MAAM,IAAI,CAAC,OAAO,CAAC,UAAU;gBAC7B,MAAM,IAAI,CAAC,IAAI;YACjB;SACD;IACH;IAEA;QACE,OAAO;YACL,CAAA,GAAA,gIAAA,CAAA,gBAAa,AAAD,EAAE;gBACZ,MAAM,IAAI,CAAC,OAAO,CAAC,UAAU;gBAC7B,MAAM,IAAI,CAAC,IAAI;YACjB;SACD;IACH;IAEA;QACE,OAAO;YAAC;gBAAE,KAAK;YAAU;SAAE;IAC7B;IAEA,YAAW,EAAE,cAAc,EAAE;QAC3B,OAAO;YACL;YACA,CAAA,GAAA,gIAAA,CAAA,kBAAe,AAAD,EAAE,gBAAgB;gBAAE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK;YAAC;YAC5D;SACD;IACH;AACF"}},
    {"offset": {"line": 5421, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5428, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/util/parse.ts"],"sourcesContent":["import {\n  getText,\n  getSchema,\n  getTextSerializersFromSchema,\n  Node,\n  JSONContent,\n} from '@tiptap/core'\nimport { Node as ProseMirrorNode } from 'prosemirror-model'\nimport { StarterKit } from '@tiptap/starter-kit'\nimport { Image } from '@tiptap/extension-image'\nimport { Link } from '@tiptap/extension-link'\nimport { Mention } from '@tiptap/extension-mention'\nimport Iframe from './tiptap-iframe'\nimport { TiptapTweet } from './tiptap-tweet'\nimport { find } from 'linkifyjs'\nimport { uniq } from 'lodash'\nimport { TiptapSpoiler } from './tiptap-spoiler'\nimport { compareTwoStrings } from 'string-similarity'\n\n/** get first url in text. like \"notion.so \" -> \"http://notion.so\"; \"notion\" -> null */\nexport function getUrl(text: string) {\n  const results = find(text, 'url')\n  return results.length ? results[0].href : null\n}\n\nexport const beginsWith = (text: string, query: string) =>\n  text.toLocaleLowerCase().startsWith(query.toLocaleLowerCase())\n\nexport const wordIn = (word: string, corpus: string) => {\n  word = word.toLocaleLowerCase()\n  corpus = corpus.toLocaleLowerCase()\n\n  return corpus.includes(word) || compareTwoStrings(word, corpus) > 0.7\n}\n\nconst checkAgainstQuery = (query: string, corpus: string) =>\n  query.split(' ').every((word) => wordIn(word, corpus))\n\nexport const searchInAny = (query: string, ...fields: string[]) =>\n  fields.some((field) => checkAgainstQuery(query, field))\n\n/** @return user ids of all \\@mentions */\nexport function parseMentions(data: JSONContent): string[] {\n  const mentions = data.content?.flatMap(parseMentions) ?? [] //dfs\n  if (data.type === 'mention' && data.attrs) {\n    mentions.push(data.attrs.id as string)\n  }\n  return uniq(mentions)\n}\n\n// TODO: this is a hack to get around the fact that tiptap doesn't have a\n// way to add a node view without bundling in tsx\nfunction skippableComponent(extension: string, label: string): Node<any, any> {\n  return Node.create({\n    name: extension,\n    group: 'block',\n    renderText: () => label,\n  })\n}\n\nexport const extensions = [\n  StarterKit,\n  Link,\n  Image.extend({ renderText: () => '[image]' }),\n  Mention, // user @mention\n  Mention.extend({ name: 'contract-mention' }), // market %mention\n  Iframe.extend({\n    renderText: ({ node }) =>\n      '[embed]' + node.attrs.src ? `(${node.attrs.src})` : '',\n  }),\n  skippableComponent('gridCardsComponent', '[markets]'),\n  skippableComponent('linkPreview', '[link preview]'),\n  TiptapTweet.extend({ renderText: () => '[tweet]' }),\n  TiptapSpoiler.extend({ renderHTML: () => ['span', '[spoiler]', 0] }),\n]\n\nconst extensionSchema = getSchema(extensions)\nconst extensionSerializers = getTextSerializersFromSchema(extensionSchema)\n\nexport function richTextToString(text?: JSONContent) {\n  if (!text) return ''\n  try {\n    const node = ProseMirrorNode.fromJSON(extensionSchema, text)\n    return getText(node, {\n      blockSeparator: '\\n\\n',\n      textSerializers: extensionSerializers,\n    })\n  } catch (e) {\n    console.error('error parsing rich text', `\"${text}\":`, e)\n    return ''\n  }\n}\n\nexport function parseJsonContentToText(content: JSONContent | string) {\n  return typeof content === 'string' ? content : richTextToString(content)\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAOA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AALA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AAIO,SAAS,OAAO,IAAY;IACjC,MAAM,UAAU,CAAA,GAAA,2GAAA,CAAA,OAAI,AAAD,EAAE,MAAM;IAC3B,OAAO,QAAQ,MAAM,GAAG,OAAO,CAAC,EAAE,CAAC,IAAI,GAAG;AAC5C;AAEO,MAAM,aAAa,CAAC,MAAc,QACvC,KAAK,iBAAiB,GAAG,UAAU,CAAC,MAAM,iBAAiB;AAEtD,MAAM,SAAS,CAAC,MAAc;IACnC,OAAO,KAAK,iBAAiB;IAC7B,SAAS,OAAO,iBAAiB;IAEjC,OAAO,OAAO,QAAQ,CAAC,SAAS,CAAA,GAAA,iIAAA,CAAA,oBAAiB,AAAD,EAAE,MAAM,UAAU;AACpE;AAEA,MAAM,oBAAoB,CAAC,OAAe,SACxC,MAAM,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,OAAS,OAAO,MAAM;AAEzC,MAAM,cAAc,CAAC,OAAe,GAAG,SAC5C,OAAO,IAAI,CAAC,CAAC,QAAU,kBAAkB,OAAO;AAG3C,SAAS,cAAc,IAAiB;IAC7C,MAAM,WAAW,KAAK,OAAO,EAAE,QAAQ,kBAAkB,EAAE,CAAC,KAAK;;IACjE,IAAI,KAAK,IAAI,KAAK,aAAa,KAAK,KAAK,EAAE;QACzC,SAAS,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;IAC7B;IACA,OAAO,CAAA,GAAA,iIAAA,CAAA,UAAI,AAAD,EAAE;AACd;AAEA,yEAAyE;AACzE,iDAAiD;AACjD,SAAS,mBAAmB,SAAiB,EAAE,KAAa;IAC1D,OAAO,gIAAA,CAAA,OAAI,CAAC,MAAM,CAAC;QACjB,MAAM;QACN,OAAO;QACP,YAAY,IAAM;IACpB;AACF;AAEO,MAAM,aAAa;IACxB,6IAAA,CAAA,aAAU;IACV,0JAAA,CAAA,OAAI;IACJ,4JAAA,CAAA,QAAK,CAAC,MAAM,CAAC;QAAE,YAAY,IAAM;IAAU;IAC3C,gKAAA,CAAA,UAAO;IACP,gKAAA,CAAA,UAAO,CAAC,MAAM,CAAC;QAAE,MAAM;IAAmB;IAC1C,kIAAA,CAAA,UAAM,CAAC,MAAM,CAAC;QACZ,YAAY,CAAC,EAAE,IAAI,EAAE,GACnB,uCAA6B,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD;IACA,mBAAmB,sBAAsB;IACzC,mBAAmB,eAAe;IAClC,iIAAA,CAAA,cAAW,CAAC,MAAM,CAAC;QAAE,YAAY,IAAM;IAAU;IACjD,mIAAA,CAAA,gBAAa,CAAC,MAAM,CAAC;QAAE,YAAY,IAAM;gBAAC;gBAAQ;gBAAa;aAAE;IAAC;CACnE;AAED,MAAM,kBAAkB,CAAA,GAAA,gIAAA,CAAA,YAAS,AAAD,EAAE;AAClC,MAAM,uBAAuB,CAAA,GAAA,gIAAA,CAAA,+BAA4B,AAAD,EAAE;AAEnD,SAAS,iBAAiB,IAAkB;IACjD,IAAI,CAAC,MAAM,OAAO;IAClB,IAAI;QACF,MAAM,OAAO,wIAAA,CAAA,OAAe,CAAC,QAAQ,CAAC,iBAAiB;QACvD,OAAO,CAAA,GAAA,gIAAA,CAAA,UAAO,AAAD,EAAE,MAAM;YACnB,gBAAgB;YAChB,iBAAiB;QACnB;IACF,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,2BAA2B,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;QACvD,OAAO;IACT;AACF;AAEO,SAAS,uBAAuB,OAA6B;IAClE,OAAO,OAAO,YAAY,WAAW,UAAU,iBAAiB;AAClE"}},
    {"offset": {"line": 5546, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5553, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/api/market-types.ts"],"sourcesContent":["import { JSONContent } from '@tiptap/core'\nimport { Answer, MAX_ANSWERS } from 'common/answer'\nimport { getAnswerProbability, getProbability } from 'common/calculate'\nimport {\n  CREATEABLE_OUTCOME_TYPES,\n  Contract,\n  MAX_QUESTION_LENGTH,\n  MultiContract,\n  RESOLUTIONS,\n  VISIBILITIES,\n} from 'common/contract'\nimport { MINIMUM_BOUNTY } from 'common/economy'\nimport { DOMAIN } from 'common/envs/constants'\nimport { MAX_ID_LENGTH } from 'common/group'\nimport { getMappedValue } from 'common/pseudo-numeric'\nimport { MarketTierType, tiers } from 'common/tier'\nimport { removeUndefinedProps } from 'common/util/object'\nimport { richTextToString } from 'common/util/parse'\nimport { z } from 'zod'\nimport { contentSchema } from './zod-types'\nimport { randomStringRegex } from 'common/util/random'\n\nexport type LiteMarket = {\n  // Unique identifier for this market\n  id: string\n\n  // Attributes about the creator\n  creatorId: string\n  creatorUsername: string\n  creatorName: string\n  createdTime: number\n  creatorAvatarUrl?: string\n\n  // Market attributes. All times are in milliseconds since epoch\n  closeTime?: number\n  question: string\n  slug: string\n  url: string\n  outcomeType: string\n  mechanism: string\n\n  pool?: { [outcome: string]: number }\n  probability?: number\n  p?: number\n  totalLiquidity?: number\n  // For pseudo-numeric\n  value?: number\n  min?: number\n  max?: number\n\n  volume: number\n  volume24Hours: number\n\n  isResolved: boolean\n  resolution?: string\n  resolutionTime?: number\n  resolutionProbability?: number\n\n  uniqueBettorCount: number\n  lastUpdatedTime?: number\n  lastBetTime?: number\n  marketTier?: MarketTierType\n}\nexport type ApiAnswer = Omit<\n  Answer & {\n    probability: number\n    pool: { YES: number; NO: number }\n  },\n  'prob' | 'poolYes' | 'poolNo'\n>\nexport type FullMarket = LiteMarket & {\n  // bets?: Bet[]\n  // comments?: Comment[]\n\n  // multi markets only\n  answers?: ApiAnswer[]\n  shouldAnswersSumToOne?: boolean\n  addAnswersMode?: 'ANYONE' | 'ONLY_CREATOR' | 'DISABLED'\n\n  // poll only\n  options?: { text: string; votes: number }[]\n\n  // bounty only\n  totalBounty?: number\n  bountyLeft?: number\n\n  description: string | JSONContent\n  textDescription: string // string version of description\n  coverImageUrl?: string\n  groupSlugs?: string[]\n}\n\nexport function toLiteMarket(contract: Contract): LiteMarket {\n  const {\n    id,\n    creatorId,\n    creatorUsername,\n    creatorName,\n    createdTime,\n    creatorAvatarUrl,\n    closeTime,\n    question,\n    slug,\n    outcomeType,\n    mechanism,\n    volume,\n    volume24Hours,\n    isResolved,\n    resolution,\n    resolutionTime,\n    resolutionProbability,\n    resolverId,\n    uniqueBettorCount,\n    lastUpdatedTime,\n    lastBetTime,\n    lastCommentTime,\n    loverUserId1,\n    loverUserId2,\n    matchCreatorId,\n    isLove,\n    marketTier,\n    token,\n    siblingContractId,\n  } = contract\n\n  const { p, totalLiquidity } = contract as any\n\n  const probability =\n    outcomeType === 'BINARY' || outcomeType === 'PSEUDO_NUMERIC'\n      ? getProbability(contract)\n      : undefined\n\n  let numericValues = {}\n  if (contract.outcomeType === 'PSEUDO_NUMERIC') {\n    const value = getMappedValue(contract, contract.prob)\n    const { min, max, isLogScale } = contract\n    numericValues = { value, min, max, isLogScale }\n  }\n\n  return removeUndefinedProps({\n    id,\n    creatorId,\n    creatorUsername,\n    creatorName,\n    createdTime,\n    creatorAvatarUrl,\n    closeTime:\n      resolutionTime && closeTime\n        ? Math.min(resolutionTime, closeTime)\n        : closeTime,\n    question,\n    slug,\n    url: `https://${DOMAIN}/${creatorUsername}/${slug}`,\n    pool: 'pool' in contract ? contract.pool : undefined,\n    probability,\n    p,\n    totalLiquidity,\n    outcomeType,\n    mechanism,\n    volume,\n    volume24Hours,\n    isResolved,\n    resolution,\n    resolutionTime,\n    resolutionProbability,\n    resolverId,\n    uniqueBettorCount,\n    lastUpdatedTime,\n    lastBetTime,\n    lastCommentTime,\n    ...numericValues,\n    marketTier,\n    token,\n    siblingContractId,\n\n    // Manifold love props.\n    loverUserId1,\n    loverUserId2,\n    matchCreatorId,\n    isLove,\n  })\n}\n\nexport function toFullMarket(contract: Contract): FullMarket {\n  const liteMarket = toLiteMarket(contract)\n  const { outcomeType } = contract\n  const answers =\n    outcomeType === 'MULTIPLE_CHOICE' && contract.answers\n      ? contract.answers.map((answer) =>\n          augmentAnswerWithProbability(contract, answer)\n        )\n      : undefined\n\n  let multiValues = {}\n  if (outcomeType === 'MULTIPLE_CHOICE') {\n    if (contract.mechanism === 'cpmm-multi-1') {\n      multiValues = {\n        shouldAnswersSumToOne: contract.shouldAnswersSumToOne,\n        addAnswersMode: contract.addAnswersMode,\n      }\n    } else {\n      multiValues = {\n        shouldAnswersSumToOne: true,\n        addAnswersMode: 'DISABLED',\n      }\n    }\n  }\n  const options =\n    outcomeType === 'POLL'\n      ? contract.options.map(({ text, votes }) => ({ text, votes }))\n      : undefined\n\n  const bountyValues =\n    outcomeType === 'BOUNTIED_QUESTION'\n      ? {\n          totalBounty: contract.totalBounty,\n          bountyLeft: contract.bountyLeft,\n        }\n      : {}\n\n  const { description, coverImageUrl, groupSlugs } = contract\n\n  return {\n    ...liteMarket,\n    ...bountyValues,\n    ...multiValues,\n    answers,\n    options,\n    description,\n    coverImageUrl,\n    groupSlugs,\n    textDescription:\n      typeof description === 'string'\n        ? description\n        : richTextToString(description),\n  }\n}\n\nfunction augmentAnswerWithProbability(\n  contract: MultiContract,\n  answer: Answer\n): ApiAnswer {\n  const probability = getAnswerProbability(contract, answer.id)\n  const { poolYes, poolNo, prob: _, ...other } = answer\n  const pool = {\n    YES: poolYes,\n    NO: poolNo,\n  }\n  return {\n    ...other,\n    pool,\n    probability,\n  }\n}\n\n// ZOD TYPES\n\n// create market\n\nexport const createBinarySchema = z.object({\n  outcomeType: z.enum(['BINARY', 'STONK']),\n  initialProb: z.number().min(1).max(99).optional(),\n  extraLiquidity: z.number().min(1).optional(),\n})\n\nexport const createNumericSchema = z.object({\n  outcomeType: z.enum(['PSEUDO_NUMERIC']),\n  min: z.number().safe(),\n  max: z.number().safe(),\n  initialValue: z.number().safe(),\n  isLogScale: z.boolean().optional(),\n  extraLiquidity: z.number().min(1).optional(),\n})\n\nexport const createMultiSchema = z.object({\n  outcomeType: z.enum(['MULTIPLE_CHOICE']),\n  answers: z.array(z.string().trim().min(1)).max(MAX_ANSWERS),\n  addAnswersMode: z\n    .enum(['DISABLED', 'ONLY_CREATOR', 'ANYONE'])\n    .default('DISABLED'),\n  shouldAnswersSumToOne: z.boolean().optional(),\n  extraLiquidity: z.number().min(1).optional(),\n})\nexport const createMultiNumericSchema = z.object({\n  outcomeType: z.enum(['NUMBER']),\n  min: z.number().safe(),\n  max: z.number().safe(),\n  precision: z.number().gt(0),\n})\n\nexport const createBountySchema = z.object({\n  outcomeType: z.enum(['BOUNTIED_QUESTION']),\n  totalBounty: z.number().min(MINIMUM_BOUNTY),\n  isAutoBounty: z.boolean().optional(),\n})\n\nexport const createPollSchema = z.object({\n  outcomeType: z.enum(['POLL']),\n  answers: z.array(z.string().trim().min(1)).min(2).max(MAX_ANSWERS),\n})\n\nexport const createMarketProps = z\n  .object({\n    question: z.string().min(1).max(MAX_QUESTION_LENGTH),\n    description: contentSchema.or(z.string()).optional(),\n    descriptionHtml: z.string().optional(),\n    descriptionMarkdown: z.string().optional(),\n    descriptionJson: z.string().optional(),\n    closeTime: z\n      .union([z.date(), z.number()])\n      .refine(\n        (date) =>\n          (typeof date === 'number' ? date : date.getTime()) > Date.now(),\n        'Close time must be in the future.'\n      )\n      .optional(),\n    outcomeType: z.enum(CREATEABLE_OUTCOME_TYPES),\n    groupIds: z.array(z.string().min(1).max(MAX_ID_LENGTH)).optional(),\n    visibility: z.enum(VISIBILITIES).default('public').optional(),\n    isTwitchContract: z.boolean().optional(),\n    utcOffset: z.number().optional(),\n    marketTier: z.enum(tiers).optional(),\n    idempotencyKey: z.string().regex(randomStringRegex).length(10).optional(),\n  })\n  .and(\n    z.union([\n      createMultiSchema,\n      createNumericSchema,\n      createBountySchema,\n      createPollSchema,\n      createBinarySchema,\n      createMultiNumericSchema,\n    ])\n  )\n\nexport const updateMarketProps = z\n  .object({\n    contractId: z.string(),\n    question: z.string().min(1).max(MAX_QUESTION_LENGTH).optional(),\n    visibility: z.enum(['unlisted', 'public']).optional(),\n    closeTime: z.number().optional(),\n    addAnswersMode: z.enum(['ONLY_CREATOR', 'ANYONE']).optional(),\n    coverImageUrl: z.string().or(z.null()).optional(),\n    sort: z.string().optional(),\n    description: z.string().optional(),\n    descriptionHtml: z.string().optional(),\n    descriptionMarkdown: z.string().optional(),\n    descriptionJson: z.string().optional(),\n  })\n  .strict()\n\n// resolve market\n\nexport const resolveBinarySchema = z\n  .object({\n    outcome: z.enum(RESOLUTIONS),\n    probabilityInt: z.number().gte(0).lte(100).optional(),\n\n    // To resolve one answer of multiple choice. Only independent answers supported (shouldAnswersSumToOne = false)\n    answerId: z.string().optional(),\n  })\n  .passthrough() // overlaps with pseudo-numeric\n\n// For multiple choice with shouldAnswersSumToOne = true\nexport const resolveMultiSchema = z.union([\n  z.object({\n    outcome: z.literal('CANCEL'),\n  }),\n  z.object({\n    outcome: z.literal('CHOOSE_ONE'),\n    answerId: z.string(),\n  }),\n  z.object({\n    outcome: z.literal('CHOOSE_MULTIPLE'),\n    resolutions: z.array(\n      z.object({\n        answerId: z.string(),\n        pct: z.number().gte(0).lte(100),\n      })\n    ),\n  }),\n])\n\nexport const resolvePseudoNumericSchema = z.union([\n  z.object({\n    outcome: z.literal('CANCEL'),\n  }),\n  z.object({\n    outcome: z.literal('MKT'),\n    value: z.number(),\n    probabilityInt: z.number().gte(0).lte(100),\n  }),\n])\n\nexport const resolveMarketProps = z\n  .object({\n    contractId: z.string(),\n  })\n  .and(\n    z.union([\n      resolveBinarySchema,\n      resolveMultiSchema,\n      resolvePseudoNumericSchema,\n    ])\n  )\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5848, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5855, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/api/market-search-types.ts"],"sourcesContent":["import { z } from 'zod'\n\nexport const FIRESTORE_DOC_REF_ID_REGEX = /^[a-zA-Z0-9_-]{1,}$/\n\nexport const searchProps = z\n  .object({\n    term: z.string().optional(),\n    filter: z\n      .union([\n        z.literal('open'),\n        z.literal('closing-90-days'),\n        z.literal('closing-week'),\n        z.literal('closing-month'),\n        z.literal('closed'),\n        z.literal('resolved'),\n        z.literal('all'),\n      ])\n      .default('all'),\n    sort: z\n      .union([\n        z.literal('newest'),\n        z.literal('score'),\n        z.literal('daily-score'),\n        z.literal('freshness-score'),\n        z.literal('24-hour-vol'),\n        z.literal('most-popular'),\n        z.literal('liquidity'),\n        z.literal('subsidy'),\n        z.literal('last-updated'),\n        z.literal('close-date'),\n        z.literal('resolve-date'),\n        z.literal('random'),\n        z.literal('bounty-amount'),\n        z.literal('prob-descending'),\n        z.literal('prob-ascending'),\n      ])\n      .default('most-popular'),\n    contractType: z\n      .union([\n        z.literal('ALL'),\n        z.literal('BINARY'),\n        z.literal('MULTIPLE_CHOICE'),\n        z.literal('FREE_RESPONSE'),\n        z.literal('PSEUDO_NUMERIC'),\n        z.literal('BOUNTIED_QUESTION'),\n        z.literal('STONK'),\n        z.literal('POLL'),\n        z.literal('NUMBER'),\n      ])\n      .default('ALL'),\n    offset: z.coerce.number().gte(0).default(0),\n    limit: z.coerce.number().gt(0).lte(1000).default(100),\n    topicSlug: z.string().regex(FIRESTORE_DOC_REF_ID_REGEX).optional(),\n    forYou: z.union([z.literal('1'), z.literal('0')]).default('0'),\n    creatorId: z.string().regex(FIRESTORE_DOC_REF_ID_REGEX).optional(),\n    isPrizeMarket: z\n      .union([\n        z.literal('true'),\n        z.literal('false'),\n        z.literal('1'),\n        z.literal('0'),\n      ])\n      .default('0'),\n    marketTier: z\n      .string()\n      .regex(/^[01]{5}$/)\n      .default('00000'),\n    token: z\n      .union([z.literal('MANA'), z.literal('CASH'), z.literal('ALL')])\n      .default('ALL'),\n    gids: z.string().optional(),\n  })\n  .strict()\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5927, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5934, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/comment.ts"],"sourcesContent":["import { type JSONContent } from '@tiptap/core'\nimport { type OnLover } from 'common/love/love-comment'\nimport { type ContractToken, type Visibility } from './contract'\n\nexport const MAX_COMMENT_LENGTH = 10000\n\nexport type AnyCommentType = OnContract | OnLover\n\n// Currently, comments are created after the bet, not atomically with the bet.\n// They're uniquely identified by the pair contractId/betId.\nexport type Comment<T extends AnyCommentType = AnyCommentType> = {\n  id: string\n  replyToCommentId?: string\n  userId: string\n\n  /** @deprecated - content now stored as JSON in content*/\n  text?: string\n  content: JSONContent\n  createdTime: number\n\n  // Denormalized, for rendering comments\n  userName: string\n  userUsername: string\n  userAvatarUrl?: string\n  /** @deprecated Not actually deprecated, only in supabase column, and not in data column */\n  likes?: number\n  dislikes?: number\n  hidden?: boolean\n  hiddenTime?: number\n  hiderId?: string\n  pinned?: boolean\n  pinnedTime?: number\n  pinnerId?: string\n  visibility: Visibility\n  editedTime?: number\n  isApi?: boolean\n} & T\n\nexport type OnContract = {\n  commentType: 'contract'\n  contractId: string\n  answerOutcome?: string // reply to answer.id\n  betId?: string\n\n  // denormalized from main contract\n  contractSlug: string\n  contractQuestion: string\n\n  // denormalized from bet\n  betAmount?: number\n  betOutcome?: string\n  betAnswerId?: string\n  // denormalized from the contract you are betting on (may be cash)\n  betToken?: ContractToken\n\n  // Used to respond to another user's bet\n  bettorUsername?: string\n  bettorName?: string\n  betLimitProb?: number\n  betOrderAmount?: number\n  bettorId?: string\n\n  // denormalized based on betting history\n  commenterPositionProb?: number // binary only\n  commenterPositionShares?: number\n  commenterPositionOutcome?: string\n  commenterPositionAnswerId?: string\n\n  bountyAwarded?: number\n  betReplyAmountsByOutcome?: { [outcome: string]: number }\n\n  isRepost?: boolean\n}\n\nexport type ContractComment = Comment<OnContract>\n"],"names":[],"mappings":";;;AAIO,MAAM,qBAAqB"}},
    {"offset": {"line": 5938, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5944, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/period.ts"],"sourcesContent":["import { DAY_MS, HOUR_MS } from './util/time'\n\nexport const PERIODS = ['daily', 'weekly', 'monthly', 'allTime'] as const\nexport type Period = typeof PERIODS[number]\n\nexport const periodDurations: {\n  [period in Exclude<Period, 'allTime'>]: number\n} = {\n  daily: 1 * DAY_MS,\n  weekly: 7 * DAY_MS,\n  monthly: 30 * DAY_MS,\n}\n\nexport const getCutoff = (period: Period) => {\n  if (period === 'allTime') {\n    return new Date(0).valueOf()\n  }\n  const nowRounded = Math.round(Date.now() / HOUR_MS) * HOUR_MS\n  return nowRounded - periodDurations[period]\n}\n"],"names":[],"mappings":";;;;;AAAA;;AAEO,MAAM,UAAU;IAAC;IAAS;IAAU;IAAW;CAAU;AAGzD,MAAM,kBAET;IACF,OAAO,IAAI,sHAAA,CAAA,SAAM;IACjB,QAAQ,IAAI,sHAAA,CAAA,SAAM;IAClB,SAAS,KAAK,sHAAA,CAAA,SAAM;AACtB;AAEO,MAAM,YAAY,CAAC;IACxB,IAAI,WAAW,WAAW;QACxB,OAAO,IAAI,KAAK,GAAG,OAAO;IAC5B;IACA,MAAM,aAAa,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK,sHAAA,CAAA,UAAO,IAAI,sHAAA,CAAA,UAAO;IAC7D,OAAO,aAAa,eAAe,CAAC,OAAO;AAC7C"}},
    {"offset": {"line": 5969, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5975, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/gidx/gidx.ts"],"sourcesContent":["import { z } from 'zod'\nimport { MIN_CASHOUT_AMOUNT, SWEEPIES_CASHOUT_FEE } from 'common/economy'\n\nexport const GIDX_REGISTATION_DOCUMENTS_REQUIRED = 1\n\nexport const GPSProps = z.object({\n  Latitude: z.number(),\n  Longitude: z.number(),\n  Radius: z.number(),\n  Altitude: z.number(),\n  Speed: z.number(),\n  DateTime: z.string(),\n})\n\nexport const verificationParams = z.object({\n  FirstName: z.string(),\n  LastName: z.string(),\n  DeviceGPS: GPSProps,\n  DateOfBirth: z.string(),\n  // Must supply address atm, but we could also use ID info\n  AddressLine1: z.string(),\n  AddressLine2: z.string().optional(),\n  City: z.string(),\n  StateCode: z.string(),\n  PostalCode: z.string(),\n  IdentificationTypeCode: z.number().gte(1).lte(4).optional(),\n  IdentificationNumber: z.string().optional(),\n  EmailAddress: z.string().optional(),\n  ReferralCode: z.string().optional(),\n  // only used when ENABLE_FAKE_CUSTOMER is true\n  DeviceIpAddress: z.string().optional(),\n  MobilePhoneNumber: z.string().optional(),\n})\nconst BillingAddress = z.object({\n  City: z.string(),\n  AddressLine1: z.string(),\n  StateCode: z.string(),\n  PostalCode: z.string(),\n  CountryCode: z.string(),\n})\nexport const checkoutParams = {\n  MerchantTransactionID: z.string(),\n  MerchantSessionID: z.string(),\n  PaymentAmount: z.object({\n    mana: z.number(),\n    priceInDollars: z.number(),\n    bonusInDollars: z.number(),\n  }),\n  PaymentMethod: z.object({\n    Type: z.enum(['CC']), // TODO: add 'ACH'\n    NameOnAccount: z.string(),\n    SavePaymentMethod: z.boolean(),\n    BillingAddress,\n    // CC specific fields,\n    creditCard: z.object({\n      CardNumber: z.string(),\n      CVV: z.string(),\n      ExpirationDate: z.string(),\n    }),\n    // .optional(),\n    // ach: z\n    //   .object({\n    //     AccountNumber: z.string(),\n    //     RoutingNumber: z.string(),\n    //   })\n    //   .optional(),\n    // For saved payment methods:\n    saved: z\n      .object({\n        Token: z.string(),\n        DisplayName: z.string(),\n      })\n      .optional(),\n  }),\n}\n\nexport const cashoutRequestParams = {\n  ...checkoutParams,\n  PaymentAmount: z.object({\n    manaCash: z.number().gte(MIN_CASHOUT_AMOUNT),\n    dollars: z\n      .number()\n      .gte((1 - SWEEPIES_CASHOUT_FEE) * (MIN_CASHOUT_AMOUNT / 100)),\n  }),\n  SavePaymentMethod: z.boolean(),\n  PaymentMethod: z.object({\n    Type: z.enum(['ACH']),\n    NameOnAccount: z.string(),\n    AccountNumber: z.string(),\n    RoutingNumber: z.string(),\n    BillingAddress: BillingAddress,\n  }),\n  DeviceGPS: GPSProps,\n}\n\nexport const cashoutParams = {\n  ...cashoutRequestParams,\n  userId: z.string(),\n  ip: z.string(),\n  txnId: z.string(),\n}\n\nexport type DocumentRegistrationResponse = {\n  ResponseCode: number\n  ResponseMessage: string\n  MerchantCustomerID: string\n  Document: GIDXDocument\n}\nexport type GIDXDocument = {\n  DocumentID: string\n  CategoryType: number\n  DocumentStatus: number\n  FileName: string\n  FileSize: number\n  DateTime: string\n  DocumentNotes: DocumentNote[]\n}\n\nexport type DocumentNote = {\n  AuthorName: string\n  NoteText: string\n  DateTime: string\n}\n\nexport type GPSData = {\n  Radius: number\n  Altitude: number\n  Latitude: number\n  Longitude: number\n  Speed: number\n  DateTime: string\n}\n\nexport const idNameToCategoryType = {\n  'Drivers License': 2,\n  Passport: 3,\n  'Military Id': 4,\n  'Government Photo Id': 5,\n  'Utility Bill': 7,\n  Other: 1,\n}\n\nexport type GIDXCustomerProfile = {\n  MerchantCustomerID: string\n  ReasonCodes: string[]\n  ProfileVerificationStatus: string\n  FraudConfidenceScore: number\n  IdentityConfidenceScore: number\n  ResponseCode: number\n  ResponseMessage: string\n  // There are many more at https://www.tsevo.com/Docs/CustomerIdentity\n}\n\nexport type GIDXRegistrationResponse = {\n  MerchantCustomerID: string\n  ReasonCodes: string[]\n  WatchChecks: WatchCheckType[]\n  ProfileMatch: ProfileMatchType\n  IdentityConfidenceScore: number\n  FraudConfidenceScore: number\n  CustomerRegistrationLink: string\n  LocationDetail: LocationDetailType\n  ResponseCode: number\n  ResponseMessage: string\n  ProfileMatches: ProfileMatchType[]\n}\n\ntype WatchCheckType = {\n  SourceCode: string\n  SourceScore: number\n  MatchResult: boolean\n  MatchScore: number\n}\n\ntype ProfileMatchType = {\n  NameMatch: boolean\n  AddressMatch: boolean\n  EmailMatch: boolean\n  IdDocumentMatch: boolean\n  PhoneMatch: boolean\n  MobilePhoneMatch: boolean\n  DateOfBirthMatch: boolean\n  CitizenshipMatch: boolean\n}\n\ntype LocationDetailType = {\n  Latitude: number\n  Longitude: number\n  Radius: number\n  Altitude: number\n  Speed: number\n  LocationDateTime: string\n  LocationStatus: number\n  LocationServiceLevel: string\n  ReasonCodes: string[]\n  ComplianceLocationStatus: boolean\n  ComplianceLocationServiceStatus: string\n  IdentifierType: string\n  IdentifierUsed: string\n}\n\nexport type GIDXMonitorResponse = {\n  ApiKey: string\n  MerchantCustomerID: string\n  ReasonCodes: string[]\n  WatchChecks: WatchCheckType[]\n  ProfileVerificationStatus: string\n  IdentityConfidenceScore: number\n  FraudConfidenceScore: number\n  LocationDetail: LocationDetailType\n  ResponseCode: number\n  ResponseMessage: string\n}\nexport type CashierLimit = {\n  MinAmount: number\n  MaxAmount: number\n}\n\nexport type PaymentAmount = {\n  mana: number\n  priceInDollars: number\n  bonusInDollars: number\n}\nexport type PaymentMethod = {\n  Token: string\n  DisplayName: string\n  Type: 'CC' | 'ACH' | 'Paypal' | 'ApplePay' | 'GooglePay'\n  NameOnAccount: string\n  BillingAddress: {\n    AddressLine1: string\n    City: string\n    StateCode: string\n    PostalCode: string\n    CountryCode: string\n  }\n  PhoneNumber?: string\n  // CC specific fields\n  CardNumber?: string\n  CVV?: string\n  ExpirationDate?: string\n  Network?: string\n  AVSResult?: string\n  CVVResult?: string\n  ThreeDS?: {\n    CAVV: string\n    ECI: string\n    DSTransactionID: string\n  }\n  // ACH specific fields\n  AccountNumber?: string\n  RoutingNumber?: string\n  // ApplePay specific fields\n  Payment?: string\n  WalletToken?: string\n  // GooglePay specific fields\n  PaymentData?: string\n}\nexport type PaymentMethodSetting =\n  | {\n      Type: 'CC' | 'ACH' | 'ApplePay'\n    }\n  | {\n      Type: 'Paypal'\n      ClientID: string\n    }\n  | {\n      Type: 'GooglePay'\n      Environment: string\n      Gateway: string\n      GatewayMerchantID: string\n      MerchantID: string\n    }\n\nexport type CheckoutSession = {\n  MerchantTransactionID: string\n  MerchantSessionID: string\n  CashierLimits: CashierLimit[]\n  PaymentAmounts: PaymentAmount[]\n  PaymentMethods: PaymentMethod[]\n  PaymentMethodSettings: PaymentMethodSetting[]\n  CustomerProfile: {\n    Address: Address\n    Name: Name\n  }\n}\n\nexport type CheckoutSessionResponse = {\n  ApiKey: string\n  ApiVersion: number\n  SessionID: string\n  MerchantID: string\n  MerchantSessionID: string\n  ResponseCode: number\n  ResponseMessage: string\n  ReasonCodes: string[]\n} & CheckoutSession\n\nexport const ID_ERROR_MSG =\n  'Confidence in identity too low. Double check your information or upload documents to verify your identity.'\n\nexport const IDENTITY_THRESHOLD = 80\nexport const FRAUD_THRESHOLD = 60\nexport const ENABLE_FAKE_CUSTOMER = false\nexport const exampleCustomers = [\n  {\n    EmailAddress: 'mradamgibbs@gmail.com',\n    MobilePhoneNumber: '5785785789',\n    DeviceIpAddress: '194.207.197.157',\n    FirstName: 'Adam',\n    LastName: 'Gibbs',\n    DateOfBirth: '01/11/1979',\n    CountryCode: 'GB',\n    IdentificationTypeCode: 2,\n    IdentificationNumber: '123456789',\n    AddressLine1: '133 Hall Road',\n    City: 'Hull',\n    StateCode: '',\n    PostalCode: 'Hu6 8qj',\n    DeviceGPS: {\n      Latitude: 53.744339,\n      Longitude: -0.33244,\n      Radius: 11.484,\n      Altitude: 0,\n      Speed: 0,\n      DateTime: new Date().toISOString(),\n    },\n  },\n  {\n    EmailAddress: 'gochanman@yahoo.com',\n    MobilePhoneNumber: '4042818372',\n    DeviceIpAddress: '24.147.127.6',\n    FirstName: 'Corey',\n    LastName: 'Chandler',\n    DateOfBirth: '09/28/1987',\n    CountryCode: 'US',\n    IdentificationTypeCode: 2,\n    IdentificationNumber: '123456789',\n    AddressLine1: '66 Forest Street',\n    City: 'Reading',\n    StateCode: 'MA',\n    PostalCode: '01867',\n    DeviceGPS: {\n      // new york (5k limit):\n      // Latitude: 40.82024,\n      // Longitude: -73.935944,\n      // florida (5k limit):\n      Latitude: 26.64983,\n      Longitude: -81.847878,\n      // utah (blocked):\n      // Latitude: 40.7608,\n      // Longitude: -111.891,\n      // Massachusetts:\n      // Latitude: 39.615342,\n      // Longitude: -112.183449,\n      Radius: 11.484,\n      Altitude: 0,\n      Speed: 0,\n      DateTime: new Date().toISOString(),\n    },\n  },\n  {\n    EmailAddress: 'andsief123@yahoo.com',\n    MobilePhoneNumber: '4042818372',\n    DeviceIpAddress: '73.16.248.173',\n    FirstName: 'Andrew',\n    LastName: 'Siegfried',\n    DateOfBirth: '01/27/1978',\n    CountryCode: 'US',\n    IdentificationTypeCode: 2,\n    IdentificationNumber: '123456789',\n    AddressLine1: '321 Greenwood Lane',\n    City: 'Williston',\n    StateCode: 'VT',\n    PostalCode: '05495',\n    DeviceGPS: {\n      Latitude: 44.064107,\n      Longitude: -72.545022,\n      Radius: 11.484,\n      Altitude: 0,\n      Speed: 0,\n      DateTime: new Date().toISOString(),\n    },\n  },\n  {\n    EmailAddress: 'playfree9800@gmail.com',\n    MobilePhoneNumber: '4042818372',\n    DeviceIpAddress: '99.100.24.160',\n    FirstName: 'Antron',\n    LastName: 'Hurt',\n    DateOfBirth: '11/06/1986',\n    CountryCode: 'US',\n    IdentificationTypeCode: 2,\n    IdentificationNumber: '123456789',\n    AddressLine1: '214 Rosemont Ave',\n    City: 'Modesto',\n    StateCode: 'CA',\n    PostalCode: '95351',\n    DeviceGPS: {\n      Latitude: 37.774929,\n      Longitude: -122.419418,\n      Radius: 11.484,\n      Altitude: 0,\n      Speed: 0,\n      DateTime: new Date().toISOString(),\n    },\n  },\n]\nexport const FAKE_CUSTOMER_BODY = {\n  ...exampleCustomers[1],\n}\n\ntype Action = {\n  Type: string\n  URL: string\n  ClientID: string\n  OrderID: string\n}\nexport type PaymentDetail = {\n  PaymentStatusCode: string\n  PaymentStatusMessage: string\n  PaymentAmountType: string\n  PaymentAmount: number\n  CurrencyCode: string\n  PaymentAmountCode: string\n  PaymentMethodType: string\n  PaymentMethodAccount: string\n  PaymentApprovalDateTime: string\n  PaymentStatusDateTime: string\n  PaymentProcessDateTime: string\n  ProcessorName: string\n  ProcessorTransactionID: string\n  ProcessorResponseCode: number\n  ProcessorResponseMessage: string\n  Action: Action\n  FinancialConfidenceScore: number\n  Recurring: boolean\n  RecurringInterval?: string\n  NextRecurringDate?: string\n}\nexport type CompleteSessionDirectCashierResponse = {\n  ReasonCodes: string[]\n  SessionID: string\n  SessionStatusCode: number | null\n  SessionStatusMessage: string | null\n  MerchantTransactionID: string\n  AllowRetry: boolean\n  Action: Action | null\n  FinancialConfidenceScore: number\n  PaymentDetails: PaymentDetail[]\n  ResponseCode: number\n  ResponseMessage: string\n  ApiKey: string\n  MerchantID: string\n  MerchantSessionID: string\n  SessionScore: number\n  CustomerRegistration: any | null\n  LocationDetail: any | null\n  ApiVersion: number\n}\n\ntype Address = {\n  AddressLine1: string\n  AddressLine2: string\n  City: string\n  State: string\n  StateCode: string\n  PostalCode: string\n  Country: string\n  IdentityConfidenceScore: number\n  Primary: boolean\n}\n\ntype Name = {\n  FirstName: string\n  LastName: string\n  MiddleName: string\n  IdentityConfidenceScore: number\n  Primary: boolean\n}\nexport type CustomerProfileResponse = {\n  MerchantCustomerID: string\n  ReasonCodes: string[]\n  WatchChecks: WatchCheckType[]\n  Name: Name[]\n  Address: Address[]\n  Citizenship: {\n    CountryCode: string\n    IdentityConfidenceScore: number\n    DateAcquired: string\n  }[]\n  DateOfBirth: {\n    PlaceOfBirth: string\n    DateOfBirth: string\n    IdentityConfidenceScore: number\n  }[]\n}\n\nexport const ProcessSessionCode = (\n  SessionStatusCode: number | null,\n  SessionStatusMessage: string | null,\n  AllowRetry: boolean\n) => {\n  if (SessionStatusCode === 1) {\n    return {\n      status: 'error',\n      message: 'Your information could not be succesfully validated',\n      gidxMessage: SessionStatusMessage,\n    }\n  } else if (SessionStatusCode === 2) {\n    return {\n      status: 'error',\n      message: 'Your information is incomplete',\n      gidxMessage: SessionStatusMessage,\n    }\n  } else if (SessionStatusCode === 3 && AllowRetry) {\n    return {\n      status: 'error',\n      message: 'Payment timeout, please try again',\n      gidxMessage: SessionStatusMessage,\n    }\n  } else if (SessionStatusCode === 3 && !AllowRetry) {\n    return {\n      status: 'error',\n      message: 'Payment timeout',\n      gidxMessage: SessionStatusMessage,\n    }\n  } else if (SessionStatusCode && SessionStatusCode >= 4) {\n    return {\n      status: 'pending',\n      message: 'Please complete next step',\n      gidxMessage: SessionStatusMessage,\n    }\n  }\n  return {\n    status: 'success',\n  }\n}\n\nexport type CashoutStatusData = {\n  user: {\n    id: string\n    name: string\n    username: string\n    avatarUrl: string\n  }\n  txn: {\n    id: string\n    amount: number\n    createdTime: string\n    gidxStatus: string\n    data: {\n      sessionId: string\n      transactionId: string\n      type: 'gidx'\n      payoutInDollars: number\n    }\n  }\n}\n\nexport type TemporaryPaymentData = Omit<\n  PaymentMethod,\n  'Token' | 'DisplayName'\n> & {\n  ip?: string\n  gps?: GPSData\n  txnId?: string\n}\n\nexport type PendingCashoutStatusData = {\n  user: CashoutStatusData['user']\n  txn: Omit<CashoutStatusData['txn'], 'data'> & {\n    payoutInDollars: number\n    transactionId: string | undefined\n  }\n  data: TemporaryPaymentData | undefined\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 6249, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6256, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/api/schema.ts"],"sourcesContent":["import { z } from 'zod'\nimport {\n  Group,\n  MAX_ID_LENGTH,\n  MySearchGroupShape,\n  LiteGroup,\n  SearchGroupParams,\n  SearchGroupShape,\n  Topic,\n} from 'common/group'\nimport {\n  createMarketProps,\n  resolveMarketProps,\n  type LiteMarket,\n  FullMarket,\n  updateMarketProps,\n} from './market-types'\nimport { type Answer } from 'common/answer'\nimport { MAX_COMMENT_LENGTH, type ContractComment } from 'common/comment'\nimport { CandidateBet } from 'common/new-bet'\nimport type { Bet, LimitBet } from 'common/bet'\nimport { coerceBoolean, contentSchema } from 'common/api/zod-types'\nimport { Lover } from 'common/love/lover'\nimport { AIGeneratedMarket, Contract, MarketContract } from 'common/contract'\nimport { CompatibilityScore } from 'common/love/compatibility-score'\nimport type { Txn, ManaPayTxn } from 'common/txn'\nimport { LiquidityProvision } from 'common/liquidity-provision'\nimport { DisplayUser, FullUser } from './user-types'\nimport { League } from 'common/leagues'\nimport { searchProps } from './market-search-types'\nimport { MAX_ANSWER_LENGTH } from 'common/answer'\nimport { type LinkPreview } from 'common/link-preview'\nimport { Headline } from 'common/news'\nimport { Row } from 'common/supabase/utils'\nimport { LikeData, ShipData } from './love-types'\nimport { AnyBalanceChangeType } from 'common/balance-change'\nimport { Dashboard } from 'common/dashboard'\nimport { ChatMessage, PrivateChatMessage } from 'common/chat-message'\nimport { PrivateUser, User } from 'common/user'\nimport { ManaSupply } from 'common/stats'\nimport { Repost } from 'common/repost'\nimport { adContract } from 'common/boost'\nimport { PERIODS } from 'common/period'\nimport { SWEEPS_MIN_BET } from 'common/economy'\nimport {\n  LivePortfolioMetrics,\n  PortfolioMetrics,\n} from 'common/portfolio-metrics'\nimport { ModReport } from '../mod-report'\n\nimport { RegistrationReturnType } from 'common/reason-codes'\nimport {\n  CheckoutSession,\n  GIDXDocument,\n  GPSProps,\n  PaymentDetail,\n  checkoutParams,\n  verificationParams,\n  cashoutRequestParams,\n  PendingCashoutStatusData,\n  cashoutParams,\n} from 'common/gidx/gidx'\nimport { notification_preference } from 'common/user-notification-preferences'\nimport { PrivateMessageChannel } from 'common/supabase/private-messages'\nimport { Notification } from 'common/notification'\nimport { NON_POINTS_BETS_LIMIT } from 'common/supabase/bets'\nimport { ContractMetric } from 'common/contract-metric'\n\nimport { JSONContent } from '@tiptap/core'\n// mqp: very unscientific, just balancing our willingness to accept load\n// with user willingness to put up with stale data\nexport const DEFAULT_CACHE_STRATEGY =\n  'public, max-age=5, stale-while-revalidate=10'\n\ntype APIGenericSchema = {\n  // GET is for retrieval, POST is to mutate something, PUT is idempotent mutation (can be repeated safely)\n  method: 'GET' | 'POST' | 'PUT'\n  //private APIs can only be called from manifold. undocumented endpoints can change or be deleted at any time!\n  visibility: 'public' | 'undocumented' | 'private'\n  // whether the endpoint requires authentication\n  authed: boolean\n  // zod schema for the request body (or for params for GET requests)\n  props: z.ZodType\n  // note this has to be JSON serializable\n  returns?: Record<string, any>\n  // Cache-Control header. like, 'max-age=60'\n  cache?: string\n  // whether the endpoint should prefer authentication even if not required\n  preferAuth?: boolean\n}\n\nlet _apiTypeCheck: { [x: string]: APIGenericSchema }\nexport const API = (_apiTypeCheck = {\n  'refresh-all-clients': {\n    method: 'POST',\n    visibility: 'public',\n    props: z.object({ message: z.string().optional() }),\n    authed: true,\n  },\n  'toggle-system-trading-status': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    props: z\n      .object({\n        token: z.enum(['MANA', 'CASH']),\n      })\n      .strict(),\n    returns: {} as { status: boolean },\n  },\n  'create-cash-contract': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: {} as LiteMarket,\n    props: z\n      .object({\n        manaContractId: z.string(),\n        subsidyAmount: z.number().positive(),\n      })\n      .strict(),\n  },\n  comment: {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: {} as ContractComment,\n    props: z\n      .object({\n        contractId: z.string(),\n        content: contentSchema.optional(),\n        html: z.string().optional(),\n        markdown: z.string().optional(),\n        replyToCommentId: z.string().optional(),\n        replyToAnswerId: z.string().optional(),\n        replyToBetId: z.string().optional(),\n      })\n      .strict(),\n  },\n\n  'follow-contract': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: {} as { success: true },\n    props: z\n      .object({\n        contractId: z.string(),\n        follow: z.boolean(),\n      })\n      .strict(),\n  },\n  'get-contract': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: true,\n    returns: {} as Contract,\n    props: z\n      .object({\n        contractId: z.string(),\n      })\n      .strict(),\n  },\n  'answer/:answerId': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    returns: {} as Answer,\n    props: z.object({ answerId: z.string() }).strict(),\n  },\n  'market/:contractId/answers': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    returns: [] as Answer[],\n    props: z.object({ contractId: z.string() }).strict(),\n  },\n  'hide-comment': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z.object({ commentPath: z.string() }).strict(),\n  },\n  'pin-comment': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    props: z.object({ commentPath: z.string() }).strict(),\n  },\n  comments: {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: [] as ContractComment[],\n    props: z\n      .object({\n        contractId: z.string().optional(),\n        contractSlug: z.string().optional(),\n        limit: z.coerce.number().gte(0).lte(1000).default(1000),\n        page: z.coerce.number().gte(0).default(0),\n        userId: z.string().optional(),\n        isPolitics: coerceBoolean.optional(),\n      })\n      .strict(),\n  },\n  bet: {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: {} as CandidateBet & { betId: string },\n    props: z\n      .object({\n        contractId: z.string(),\n        amount: z.number().gte(SWEEPS_MIN_BET),\n        replyToCommentId: z.string().optional(),\n        limitProb: z.number().gte(0.01).lte(0.99).optional(),\n        expiresAt: z.number().optional(),\n        // Used for binary and new multiple choice contracts (cpmm-multi-1).\n        outcome: z.enum(['YES', 'NO']).default('YES'),\n        //Multi\n        answerId: z.string().optional(),\n        dryRun: z.boolean().optional(),\n        deps: z.array(z.string()).optional(),\n        deterministic: z.boolean().optional(),\n      })\n      .strict(),\n  },\n  createuser: {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: {} as { user: User; privateUser: PrivateUser },\n    props: z\n      .object({\n        deviceToken: z.string().optional(),\n        adminToken: z.string().optional(),\n        visitedContractIds: z.array(z.string()).optional(),\n      })\n      .strict(),\n  },\n  'multi-bet': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    returns: [] as (CandidateBet & { betId: string })[],\n    props: z\n      .object({\n        contractId: z.string(),\n        amount: z.number().gte(1),\n        limitProb: z.number().gte(0).lte(1).optional(),\n        expiresAt: z.number().optional(),\n        answerIds: z.array(z.string()).min(1),\n        deterministic: z.boolean().optional(),\n      })\n      .strict(),\n  },\n  'multi-sell': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    returns: [] as (CandidateBet & { betId: string })[],\n    props: z\n      .object({\n        contractId: z.string(),\n        answerIds: z.array(z.string()).min(1),\n        deterministic: z.boolean().optional(),\n      })\n      .strict(),\n  },\n  leaderboard: {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: [] as { userId: string; score: number }[],\n    props: z\n      .object({\n        groupId: z.string().optional(),\n        limit: z.coerce.number().min(1).max(100).default(50),\n        token: z.enum(['MANA', 'CASH']).default('MANA'),\n        kind: z.enum(['creator', 'profit', 'loss', 'volume', 'referral']),\n      })\n      .strict(),\n  },\n  'verify-phone-number': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    returns: {} as { status: string },\n    props: z\n      .object({\n        phoneNumber: z.string(),\n        code: z.string(),\n      })\n      .strict(),\n  },\n  'request-otp': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: true,\n    returns: {} as { status: string },\n    props: z\n      .object({\n        phoneNumber: z.string(),\n      })\n      .strict(),\n  },\n  'bet/cancel/:betId': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z.object({ betId: z.string() }).strict(),\n    returns: {} as LimitBet,\n  },\n  // sell shares\n  'market/:contractId/sell': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: {} as CandidateBet & { betId: string },\n    props: z\n      .object({\n        contractId: z.string(),\n        shares: z.number().positive().optional(), // leave it out to sell all shares\n        outcome: z.enum(['YES', 'NO']),\n        answerId: z.string().optional(), // Required for multi binary markets\n        deterministic: z.boolean().optional(),\n        deps: z.array(z.string()).optional(),\n      })\n      .strict(),\n  },\n  'get-user-limit-orders-with-contracts': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    returns: {} as {\n      betsByContract: { [contractId: string]: LimitBet[] }\n      contracts: Contract[]\n    },\n    props: z\n      .object({\n        userId: z.string(),\n        count: z.coerce.number().lte(5000),\n      })\n      .strict(),\n  },\n  'get-interesting-groups-from-views': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    returns: {} as (Group & { hasBet: boolean })[],\n    props: z\n      .object({\n        userId: z.string(),\n        contractIds: z.array(z.string()).optional(),\n      })\n      .strict(),\n  },\n  bets: {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: [] as Bet[],\n    props: z\n      .object({\n        id: z.string().optional(),\n        userId: z.string().optional(),\n        username: z.string().optional(),\n        contractId: z.string().or(z.array(z.string())).optional(),\n        contractSlug: z.string().optional(),\n        answerId: z.string().optional(),\n        // market: z.string().optional(), // deprecated, synonym for `contractSlug`\n        limit: z.coerce\n          .number()\n          .gte(0)\n          .lte(50000)\n          .default(NON_POINTS_BETS_LIMIT),\n        before: z.string().optional(),\n        after: z.string().optional(),\n        beforeTime: z.coerce.number().optional(),\n        afterTime: z.coerce.number().optional(),\n        order: z.enum(['asc', 'desc']).optional(),\n        kinds: z.enum(['open-limit']).optional(),\n        // undocumented fields. idk what a good api interface would be\n        filterRedemptions: coerceBoolean.optional(),\n        includeZeroShareRedemptions: coerceBoolean.optional(),\n        commentRepliesOnly: coerceBoolean.optional(),\n        count: coerceBoolean.optional(),\n        points: coerceBoolean.optional(),\n      })\n      .strict(),\n  },\n  'unique-bet-group-count': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: {} as { count: number },\n    props: z\n      .object({\n        contractId: z.string(),\n      })\n      .strict(),\n  },\n  'get-daily-changed-metrics-and-contracts': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: true,\n    cache: 'public, max-age=900, stale-while-revalidate=90', // 15 minute cache\n    props: z\n      .object({\n        limit: z.coerce.number(),\n        userId: z.string(),\n      })\n      .strict(),\n    returns: {} as {\n      manaMetrics: ContractMetric[]\n      cashMetrics: ContractMetric[]\n      contracts: MarketContract[]\n      manaProfit: number\n      cashProfit: number\n      manaInvestmentValue: number\n      cashInvestmentValue: number\n    },\n  },\n  // deprecated. use /bets?username= instead\n  'user/:username/bets': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: [] as Bet[],\n    props: z\n      .object({\n        username: z.string(),\n        limit: z.coerce.number().gte(0).lte(1000).default(1000),\n      })\n      .strict(),\n  },\n  'group/:slug': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: {} as Group,\n    props: z.object({ slug: z.string() }),\n  },\n  'group/:slug/groups': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: {} as { above: LiteGroup[]; below: LiteGroup[] },\n    props: z.object({ slug: z.string() }).strict(),\n  },\n  'group/:slug/dashboards': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: [] as {\n      id: string\n      title: string\n      slug: string\n      creatorId: string\n    }[],\n    props: z.object({ slug: z.string() }).strict(),\n  },\n  'group/by-id/:id/groups': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: {} as { above: LiteGroup[]; below: LiteGroup[] },\n    props: z.object({ id: z.string() }).strict(),\n  },\n  'group/by-id/:id': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: {} as Group,\n    props: z.object({ id: z.string() }).strict(),\n  },\n  // deprecated. use /markets?groupId= instead\n  'group/by-id/:id/markets': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: [] as LiteMarket[],\n    props: z\n      .object({\n        id: z.string(),\n        limit: z.coerce.number().gte(0).lte(1000).default(500),\n      })\n      .strict(),\n  },\n  'group/:slug/delete': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z.object({ slug: z.string() }),\n  },\n  'group/by-id/:id/delete': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z.object({ id: z.string() }),\n  },\n  'group/:slug/block': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z.object({ slug: z.string() }),\n  },\n  'group/:slug/unblock': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z.object({ slug: z.string() }).strict(),\n  },\n  'group/by-id/:topId/group/:bottomId': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z\n      .object({\n        topId: z.string(),\n        bottomId: z.string(),\n        remove: z.boolean().optional(),\n      })\n      .strict(),\n    returns: {} as { status: 'success' },\n  },\n  groups: {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: [] as Group[],\n    props: z\n      .object({\n        availableToUserId: z.string().optional(),\n        beforeTime: z.coerce.number().int().optional(),\n        limit: z.coerce.number().gte(0).lte(1000).default(500),\n      })\n      .strict(),\n  },\n  'market/:id': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    returns: {} as LiteMarket | FullMarket,\n    cache: DEFAULT_CACHE_STRATEGY,\n    props: z.object({ id: z.string(), lite: coerceBoolean.optional() }),\n  },\n  'markets-by-ids': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    returns: [] as Contract[],\n    props: z\n      .object({\n        ids: z.array(z.string()).max(100),\n      })\n      .strict(),\n  },\n  // deprecated. use /market/:id?lite=true instead\n  'market/:id/lite': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    returns: {} as LiteMarket,\n    cache: DEFAULT_CACHE_STRATEGY,\n    props: z.object({ id: z.string() }),\n  },\n  'slug/:slug': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    returns: {} as LiteMarket | FullMarket,\n    cache: DEFAULT_CACHE_STRATEGY,\n    props: z.object({ slug: z.string(), lite: coerceBoolean.optional() }),\n  },\n  market: {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: {} as LiteMarket,\n    props: createMarketProps,\n  },\n  'market/:contractId/update': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: updateMarketProps,\n    returns: {} as { success: true },\n  },\n  'market/:contractId/close': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    // returns: {} as LiteMarket,\n    props: z\n      .object({\n        contractId: z.string(),\n        closeTime: z.number().int().nonnegative().optional(),\n      })\n      .strict(),\n  },\n  'market/:contractId/resolve': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: {} as { message: string },\n    props: resolveMarketProps,\n  },\n  'market/:contractId/add-liquidity': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: {} as LiquidityProvision,\n    props: z\n      .object({\n        contractId: z.string(),\n        amount: z.number().gt(0).finite(),\n      })\n      .strict(),\n  },\n  'market/:contractId/remove-liquidity': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: {} as LiquidityProvision,\n    props: z\n      .object({\n        contractId: z.string(),\n        amount: z.number().gt(0).finite(),\n      })\n      .strict(),\n  },\n  'market/:contractId/add-bounty': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: {} as Txn,\n    props: z\n      .object({\n        contractId: z.string(),\n        amount: z.number().gt(0).finite(),\n      })\n      .strict(),\n  },\n  'market/:contractId/award-bounty': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: {} as Txn,\n    props: z\n      .object({\n        contractId: z.string(),\n        commentId: z.string(),\n        amount: z.number().gt(0).finite(),\n      })\n      .strict(),\n  },\n  'market/:contractId/group': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z\n      .object({\n        contractId: z.string(),\n        groupId: z.string(),\n        remove: z.boolean().default(false),\n      })\n      .strict(),\n    returns: {} as { success: true },\n  },\n  'market/:contractId/groups': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    props: z.object({ contractId: z.string() }),\n    returns: [] as LiteGroup[],\n  },\n  'market/:contractId/answer': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: {} as { newAnswerId: string },\n    props: z\n      .object({\n        contractId: z.string().max(MAX_ANSWER_LENGTH),\n        text: z.string().min(1).max(MAX_ANSWER_LENGTH),\n      })\n      .strict(),\n  },\n  'market/:contractId/block': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z.object({ contractId: z.string() }).strict(),\n  },\n  'market/:contractId/unblock': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z.object({ contractId: z.string() }).strict(),\n  },\n  unresolve: {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    returns: {} as { success: true },\n    props: z\n      .object({\n        contractId: z.string().max(MAX_ANSWER_LENGTH),\n        answerId: z.string().max(MAX_ANSWER_LENGTH).optional(),\n      })\n      .strict(),\n  },\n  leagues: {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: [] as League[],\n    props: z\n      .object({\n        userId: z.string().optional(),\n        cohort: z.string().optional(),\n        season: z.coerce.number().optional(),\n      })\n      .strict(),\n  },\n  markets: {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: [] as LiteMarket[],\n    props: z\n      .object({\n        limit: z.coerce.number().gte(0).lte(1000).default(500),\n        sort: z\n          .enum([\n            'created-time',\n            'updated-time',\n            'last-bet-time',\n            'last-comment-time',\n          ])\n          .optional(),\n        order: z.enum(['asc', 'desc']).optional(),\n        before: z.string().optional(),\n        userId: z.string().optional(),\n        groupId: z.string().optional(),\n      })\n      .strict(),\n  },\n  'search-markets': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: [] as LiteMarket[],\n    props: searchProps,\n  },\n  'search-markets-full': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    preferAuth: true,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: [] as Contract[],\n    props: searchProps,\n  },\n  managram: {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z\n      .object({\n        amount: z.number().finite(),\n        toIds: z.array(z.string()),\n        message: z.string().max(MAX_COMMENT_LENGTH),\n        groupId: z.string().max(MAX_ID_LENGTH).optional(),\n        token: z.enum(['M$', 'CASH']).default('M$'),\n      })\n      .strict(),\n  },\n  manalink: {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: {} as { slug: string },\n    props: z\n      .object({\n        amount: z.number().positive().finite().safe(),\n        expiresTime: z.number().optional(),\n        maxUses: z.number().optional(),\n        message: z.string().optional(),\n      })\n      .strict(),\n  },\n  donate: {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z\n      .object({\n        amount: z.number().positive().finite().safe(),\n        to: z.string(),\n      })\n      .strict(),\n  },\n  'convert-sp-to-mana': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z.object({ amount: z.number().positive().finite().safe() }).strict(),\n  },\n  'convert-cash-to-mana': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z.object({ amount: z.number().positive().finite().safe() }).strict(),\n  },\n  'request-loan': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: true,\n    props: z.object({}),\n    returns: {} as { payout: number },\n  },\n  // deprecated. use /txns instead\n  managrams: {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    returns: [] as ManaPayTxn[],\n    props: z\n      .object({\n        toId: z.string().optional(),\n        fromId: z.string().optional(),\n        limit: z.coerce.number().gte(0).lte(100).default(100),\n        before: z.coerce.number().optional(),\n        after: z.coerce.number().optional(),\n      })\n      .strict(),\n  },\n  'market/:id/positions': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: [] as ContractMetric[],\n    props: z\n      .object({\n        id: z.string(),\n        userId: z.string().optional(),\n        answerId: z.string().optional(),\n        summaryOnly: z.boolean().optional(),\n        top: z.undefined().or(z.coerce.number()),\n        bottom: z.undefined().or(z.coerce.number()),\n        order: z.enum(['shares', 'profit']).optional(),\n      })\n      .strict(),\n  },\n  me: {\n    method: 'GET',\n    visibility: 'public',\n    authed: true,\n    cache: DEFAULT_CACHE_STRATEGY,\n    props: z.object({}),\n    returns: {} as FullUser,\n  },\n  'me/update': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z.object({\n      name: z.string().trim().min(1).optional(),\n      username: z.string().trim().min(1).optional(),\n      avatarUrl: z.string().optional(),\n      bio: z.string().optional(),\n      website: z.string().optional(),\n      twitterHandle: z.string().optional(),\n      discordHandle: z.string().optional(),\n      // settings\n      optOutBetWarnings: z.boolean().optional(),\n      isAdvancedTrader: z.boolean().optional(),\n      //internal\n      shouldShowWelcome: z.boolean().optional(),\n      hasSeenContractFollowModal: z.boolean().optional(),\n      hasSeenLoanModal: z.boolean().optional(),\n    }),\n    returns: {} as FullUser,\n  },\n  'me/delete': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z.object({\n      username: z.string(), // just so you're sure\n    }),\n  },\n  'me/private': {\n    method: 'GET',\n    visibility: 'public',\n    authed: true,\n    props: z.object({}),\n    returns: {} as PrivateUser,\n  },\n  'me/private/update': {\n    method: 'POST',\n    visibility: 'private',\n    authed: true,\n    props: z\n      .object({\n        email: z.string().email().optional(),\n        apiKey: z.string().optional(),\n        pushToken: z.string().optional(),\n        rejectedPushNotificationsOn: z.number().optional(),\n        lastPromptedToEnablePushNotifications: z.number().optional(),\n        interestedInPushNotifications: z.boolean().optional(),\n        hasSeenAppBannerInNotificationsOn: z.number().optional(),\n        installedAppPlatforms: z.array(z.string()).optional(),\n        paymentInfo: z.string().optional(),\n      })\n      .strict(),\n  },\n  'user/:username': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: {} as FullUser,\n    props: z.object({ username: z.string() }).strict(),\n  },\n  'user/:username/lite': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: {} as DisplayUser,\n    props: z.object({ username: z.string() }).strict(),\n  },\n  'user/by-id/:id': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    // Do not add a caching strategy here. New users need up-to-date data.\n    returns: {} as FullUser,\n    props: z.object({ id: z.string() }).strict(),\n  },\n  'user/by-id/:id/lite': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: {} as DisplayUser,\n    props: z.object({ id: z.string() }).strict(),\n  },\n  'user/by-id/:id/block': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z.object({ id: z.string() }).strict(),\n  },\n  'user/by-id/:id/unblock': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z.object({ id: z.string() }).strict(),\n  },\n  users: {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: [] as FullUser[],\n    props: z\n      .object({\n        limit: z.coerce.number().gte(0).lte(1000).default(500),\n        before: z.string().optional(),\n      })\n      .strict(),\n  },\n  'search-users': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: [] as FullUser[],\n    props: z\n      .object({\n        term: z.string(),\n        limit: z.coerce.number().gte(0).lte(1000).default(500),\n        page: z.coerce.number().gte(0).default(0),\n      })\n      .strict(),\n  },\n  'search-contract-positions': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: [] as DisplayUser[],\n    props: z\n      .object({\n        term: z.string(),\n        contractId: z.string(),\n        limit: z.coerce.number().gte(0).lte(100).default(10),\n      })\n      .strict(),\n  },\n  'save-twitch': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    props: z\n      .object({\n        twitchInfo: z.object({\n          twitchName: z.string().optional(),\n          controlToken: z.string().optional(),\n          botEnabled: z.boolean().optional(),\n          needsRelinking: z.boolean().optional(),\n        }),\n      })\n      .strict(),\n  },\n  'set-push-token': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    props: z.object({ pushToken: z.string() }).strict(),\n  },\n  'update-notif-settings': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    props: z.object({\n      type: z.string() as z.ZodType<notification_preference>,\n      medium: z.enum(['email', 'browser', 'mobile']),\n      enabled: z.boolean(),\n    }),\n  },\n  headlines: {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    returns: [] as Headline[],\n    props: z.object({\n      slug: z.enum(['politics', 'ai', 'news']).optional(),\n    }),\n  },\n  'politics-headlines': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    returns: [] as Headline[],\n    props: z.object({}),\n  },\n  'set-news': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    returns: {} as { success: true },\n    props: z\n      .object({\n        dashboardIds: z.array(z.string()),\n        endpoint: z.enum(['politics', 'ai', 'news']),\n      })\n      .strict(),\n  },\n  react: {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    props: z\n      .object({\n        contentId: z.string(),\n        contentType: z.enum(['comment', 'contract']),\n        remove: z.boolean().optional(),\n        reactionType: z.enum(['like', 'dislike']).optional().default('like'),\n      })\n      .strict(),\n    returns: { success: true },\n  },\n  'compatible-lovers': {\n    method: 'GET',\n    visibility: 'private',\n    authed: false,\n    props: z.object({ userId: z.string() }),\n    returns: {} as {\n      lover: Lover\n      compatibleLovers: Lover[]\n      loverCompatibilityScores: {\n        [userId: string]: CompatibilityScore\n      }\n    },\n  },\n  post: {\n    method: 'POST',\n    visibility: 'private',\n    authed: true,\n    returns: {} as ContractComment,\n    props: z\n      .object({\n        contractId: z.string(),\n        betId: z.string().optional(),\n        commentId: z.string().optional(),\n        content: contentSchema.optional(),\n      })\n      .strict(),\n  },\n  'fetch-link-preview': {\n    method: 'GET',\n    visibility: 'private',\n    authed: false,\n    props: z.object({ url: z.string() }).strict(),\n    cache: 'max-age=86400, stale-while-revalidate=86400',\n    returns: {} as LinkPreview,\n  },\n  'remove-pinned-photo': {\n    method: 'POST',\n    visibility: 'private',\n    authed: true,\n    returns: { success: true },\n    props: z\n      .object({\n        userId: z.string(),\n      })\n      .strict(),\n  },\n  'get-related-markets': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    props: z\n      .object({\n        contractId: z.string(),\n        limit: z.coerce.number().gte(0).lte(100),\n        userId: z.string().optional(),\n      })\n      .strict(),\n    returns: {} as {\n      marketsFromEmbeddings: Contract[]\n    },\n    cache: 'public, max-age=3600, stale-while-revalidate=10',\n  },\n  'get-related-markets-by-group': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    cache: 'public, max-age=3600, stale-while-revalidate=10',\n    returns: {} as {\n      groupContracts: Contract[]\n    },\n    props: z\n      .object({\n        contractId: z.string(),\n        limit: z.coerce.number().gte(0).lte(100),\n        offset: z.coerce.number().gte(0),\n      })\n      .strict(),\n  },\n  'unlist-and-cancel-user-contracts': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    props: z\n      .object({\n        userId: z.string(),\n      })\n      .strict(),\n  },\n  'get-ad-analytics': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: false,\n    props: z\n      .object({\n        contractId: z.string(),\n      })\n      .strict(),\n    returns: {} as {\n      uniqueViewers: number\n      totalViews: number\n      uniquePromotedViewers: number\n      totalPromotedViews: number\n      redeemCount: number\n      isBoosted: boolean\n      totalFunds: number\n      adCreatedTime: string\n    },\n  },\n  'get-seen-market-ids': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    props: z.object({\n      contractIds: z.array(z.string()),\n      types: z.array(z.enum(['page', 'card', 'promoted'])).optional(),\n      since: z.number(),\n    }),\n    returns: [] as string[],\n  },\n  'get-compatibility-questions': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    props: z.object({}),\n    returns: {} as {\n      status: 'success'\n      questions: (Row<'love_questions'> & {\n        answer_count: number\n        score: number\n      })[]\n    },\n  },\n  'like-lover': {\n    method: 'POST',\n    visibility: 'private',\n    authed: true,\n    props: z.object({\n      targetUserId: z.string(),\n      remove: z.boolean().optional(),\n    }),\n    returns: {} as {\n      status: 'success'\n    },\n  },\n  'ship-lovers': {\n    method: 'POST',\n    visibility: 'private',\n    authed: true,\n    props: z.object({\n      targetUserId1: z.string(),\n      targetUserId2: z.string(),\n      remove: z.boolean().optional(),\n    }),\n    returns: {} as {\n      status: 'success'\n    },\n  },\n\n  'get-likes-and-ships': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    props: z\n      .object({\n        userId: z.string(),\n      })\n      .strict(),\n    returns: {} as {\n      status: 'success'\n      likesReceived: LikeData[]\n      likesGiven: LikeData[]\n      ships: ShipData[]\n    },\n  },\n  'has-free-like': {\n    method: 'GET',\n    visibility: 'private',\n    authed: true,\n    props: z.object({}).strict(),\n    returns: {} as {\n      status: 'success'\n      hasFreeLike: boolean\n    },\n  },\n  'star-lover': {\n    method: 'POST',\n    visibility: 'private',\n    authed: true,\n    props: z.object({\n      targetUserId: z.string(),\n      remove: z.boolean().optional(),\n    }),\n    returns: {} as {\n      status: 'success'\n    },\n  },\n  'get-lovers': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    props: z.object({}).strict(),\n    returns: {} as {\n      status: 'success'\n      lovers: Lover[]\n    },\n  },\n  'get-lover-answers': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    props: z.object({ userId: z.string() }).strict(),\n    returns: {} as {\n      status: 'success'\n      answers: Row<'love_compatibility_answers'>[]\n    },\n  },\n  'search-groups': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    // Is there a way to infer return { lite:[] as LiteGroup[] } if type is 'lite'?\n    returns: {\n      full: [] as Group[],\n      lite: [] as LiteGroup[],\n    },\n    props: SearchGroupParams(SearchGroupShape),\n  },\n  'search-my-groups': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: true,\n    returns: {\n      full: [] as Group[],\n      lite: [] as LiteGroup[],\n    },\n    props: SearchGroupParams(MySearchGroupShape),\n  },\n  'get-groups-with-top-contracts': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: true,\n    returns: [] as { topic: Topic; contracts: Contract[] }[],\n    props: z.object({}),\n  },\n  'get-balance-changes': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    returns: [] as AnyBalanceChangeType[],\n    props: z\n      .object({\n        before: z.coerce.number().optional(),\n        after: z.coerce.number().default(0),\n        userId: z.string(),\n      })\n      .strict(),\n  },\n  'get-partner-stats': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    props: z\n      .object({\n        userId: z.string(),\n      })\n      .strict(),\n    returns: {} as {\n      status: 'success' | 'error'\n      username: string\n      numContractsCreated: number\n      numUniqueBettors: number\n      numReferrals: number\n      numReferralsWhoRetained: number\n      totalTraderIncome: number\n      totalReferralIncome: number\n      dollarsEarned: number\n    },\n  },\n  'record-contract-view': {\n    method: 'POST',\n    visibility: 'public',\n    authed: false,\n    props: z.object({\n      userId: z.string().optional(),\n      contractId: z.string(),\n      kind: z.enum(['page', 'card', 'promoted']),\n    }),\n    returns: {} as { status: 'success' },\n  },\n  'record-comment-view': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z.object({\n      contractId: z.string(),\n      commentId: z.string(),\n    }),\n    returns: {} as { status: 'success' },\n  },\n  'record-contract-interaction': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z.object({\n      contractId: z.string(),\n      kind: z.enum([\n        'page bet',\n        'page comment',\n        'page repost',\n        'page like',\n        'card bet',\n        'card click',\n        'promoted click',\n        'card like',\n        'page share',\n        'browse click',\n      ]),\n      commentId: z.string().optional(),\n      feedReasons: z.array(z.string()).optional(),\n      feedType: z.string().optional(),\n      betGroupId: z.string().optional(),\n      betId: z.string().optional(),\n    }),\n    returns: {} as { status: 'success' },\n  },\n  'get-dashboard-from-slug': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    props: z.object({\n      dashboardSlug: z.string(),\n    }),\n    cache: DEFAULT_CACHE_STRATEGY,\n    returns: {} as Dashboard,\n  },\n  'create-public-chat-message': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    returns: {} as ChatMessage,\n    props: z.object({\n      content: contentSchema,\n      channelId: z.string(),\n    }),\n  },\n  'get-followed-groups': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    props: z.object({\n      userId: z.string(),\n    }),\n    returns: {} as {\n      groups: Group[]\n    },\n  },\n  'get-user-portfolio': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    props: z.object({\n      userId: z.string(),\n    }),\n    returns: {} as LivePortfolioMetrics,\n  },\n  'get-user-portfolio-history': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    props: z.object({\n      userId: z.string(),\n      period: z.enum(PERIODS),\n    }),\n    returns: {} as PortfolioMetrics[],\n  },\n  'get-channel-memberships': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: true,\n    props: z.object({\n      channelId: z.coerce.number().optional(),\n      createdTime: z.string().optional(),\n      lastUpdatedTime: z.string().optional(),\n      limit: z.coerce.number(),\n    }),\n    returns: {\n      channels: [] as PrivateMessageChannel[],\n      memberIdsByChannelId: {} as { [channelId: string]: string[] },\n    },\n  },\n  'get-channel-messages': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: true,\n    props: z.object({\n      channelId: z.coerce.number(),\n      limit: z.coerce.number(),\n      id: z.coerce.number().optional(),\n    }),\n    returns: [] as PrivateChatMessage[],\n  },\n  'get-channel-seen-time': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: true,\n    props: z.object({\n      channelIds: z.array(z.coerce.number()),\n    }),\n    returns: [] as [number, string][],\n  },\n  'set-channel-seen-time': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    props: z.object({\n      channelId: z.coerce.number(),\n    }),\n  },\n  'get-feed': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    returns: {} as {\n      contracts: Contract[]\n      comments: ContractComment[]\n      ads: adContract[]\n      bets: Bet[]\n      reposts: Repost[]\n      idsToReason: { [id: string]: string }\n    },\n    props: z\n      .object({\n        userId: z.string(),\n        limit: z.coerce.number().gt(0).lte(100).default(100),\n        offset: z.coerce.number().gte(0).default(0),\n        ignoreContractIds: z.array(z.string()).optional(),\n      })\n      .strict(),\n  },\n  'get-mana-supply': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    returns: {} as ManaSupply,\n    props: z.object({}).strict(),\n  },\n  'get-notifications': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: true,\n    returns: [] as Notification[],\n    props: z\n      .object({\n        after: z.coerce.number().optional(),\n        limit: z.coerce.number().gte(0).lte(1000).default(100),\n      })\n      .strict(),\n  },\n  'update-mod-report': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    props: z\n      .object({\n        reportId: z.number(),\n        updates: z\n          .object({\n            status: z\n              .enum(['new', 'under review', 'resolved', 'needs admin'])\n              .optional(),\n            mod_note: z.string().optional(),\n          })\n          .partial(),\n      })\n      .strict(),\n    returns: {} as { status: string; report: ModReport },\n  },\n  'get-mod-reports': {\n    method: 'GET',\n    visibility: 'public',\n    authed: true,\n    props: z\n      .object({\n        statuses: z.array(\n          z.enum(['new', 'under review', 'resolved', 'needs admin'])\n        ),\n        limit: z.coerce.number().gte(0).lte(100).default(25),\n        offset: z.coerce.number().gte(0).default(0),\n        count: coerceBoolean.optional(),\n      })\n      .strict(),\n    returns: {} as {\n      status: string\n      count?: number\n      reports: ModReport[]\n    },\n  },\n  'get-txn-summary-stats': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    returns: {} as Row<'txn_summary_stats'>[],\n    props: z\n      .object({\n        ignoreCategories: z.array(z.string()).optional(),\n        fromType: z.string().optional(),\n        toType: z.string().optional(),\n        limitDays: z.coerce.number(),\n      })\n      .strict(),\n  },\n  'get-mana-summary-stats': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: false,\n    returns: {} as Row<'mana_supply_stats'>[],\n    props: z\n      .object({\n        limitDays: z.coerce.number(),\n      })\n      .strict(),\n  },\n  'register-gidx': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    props: verificationParams,\n    returns: {} as RegistrationReturnType,\n  },\n  'get-verification-status-gidx': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    returns: {} as {\n      status: string\n      documents?: GIDXDocument[]\n      message?: string\n      documentStatus?: string\n    },\n    props: z.object({}),\n  },\n  'get-monitor-status-gidx': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    returns: {} as {\n      status: string\n      message?: string\n    },\n    props: z.object({\n      DeviceGPS: GPSProps,\n    }),\n  },\n  'get-checkout-session-gidx': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    returns: {} as {\n      status: string\n      message?: string\n      session?: CheckoutSession\n    },\n    props: z.object({\n      PayActionCode: z.enum(['PAY', 'PAYOUT']).default('PAY'),\n      DeviceGPS: GPSProps,\n      userId: z.string().optional(),\n      ip: z.string().optional(),\n    }),\n  },\n  'complete-checkout-session-gidx': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    returns: {} as {\n      status: string\n      message?: string\n      gidxMessage?: string | null\n      details?: PaymentDetail[]\n    },\n    props: z.object(checkoutParams),\n  },\n  'complete-cashout-session-gidx': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    returns: {} as {\n      status: string\n      message?: string\n      gidxMessage?: string | null\n      details?: PaymentDetail[]\n    },\n    props: z.object(cashoutParams),\n  },\n  'complete-cashout-request': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    returns: {} as {\n      status: string\n      message?: string\n      gidxMessage?: string | null\n      details?: PaymentDetail[]\n    },\n    props: z.object(cashoutRequestParams),\n  },\n  'get-verification-documents-gidx': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    returns: {} as {\n      status: string\n      documents: GIDXDocument[]\n      utilityDocuments: GIDXDocument[]\n      idDocuments: GIDXDocument[]\n      rejectedDocuments: GIDXDocument[]\n    },\n    props: z.object({}),\n  },\n  'upload-document-gidx': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: true,\n    returns: {} as { status: string },\n    props: z.object({\n      CategoryType: z.number().gte(1).lte(7),\n      fileName: z.string(),\n      fileUrl: z.string(),\n    }),\n  },\n  'identity-callback-gidx': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: false,\n    returns: {} as { Accepted: boolean },\n    props: z.object({\n      MerchantCustomerID: z.string(),\n      NotificationType: z.string(),\n    }),\n  },\n  'payment-callback-gidx': {\n    method: 'POST',\n    visibility: 'undocumented',\n    authed: false,\n    returns: {} as { MerchantTransactionID: string },\n    props: z\n      .object({\n        MerchantTransactionID: z.string(),\n        TransactionStatusCode: z.coerce.number(),\n        TransactionStatusMessage: z.string(),\n        StatusCode: z.coerce.number(),\n        SessionID: z.string(),\n        MerchantSessionID: z.string(),\n        SessionScore: z.coerce.number(),\n        ReasonCodes: z.array(z.string()).optional(),\n        ServiceType: z.string(),\n        StatusMessage: z.string(),\n      })\n      .strict(),\n  },\n  'get-best-comments': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: true,\n    returns: {} as { comments: ContractComment[]; contracts: Contract[] },\n    props: z.object({\n      limit: z.coerce.number().gte(0).lte(100).default(20),\n      offset: z.coerce.number().gte(0).default(0),\n      ignoreContractIds: z.array(z.string()).optional(),\n      justLikes: z.coerce.number().optional(),\n    }),\n  },\n  'get-redeemable-prize-cash': {\n    method: 'GET',\n    visibility: 'public',\n    authed: true,\n    returns: {} as { redeemablePrizeCash: number },\n    props: z.object({}),\n  },\n  'get-total-redeemable-prize-cash': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    returns: {} as { total: number },\n    props: z.object({}),\n  },\n  'get-cashouts': {\n    method: 'GET',\n    visibility: 'undocumented',\n    authed: true,\n    returns: [] as PendingCashoutStatusData[],\n    props: z\n      .object({\n        limit: z.coerce.number().gte(0).lte(100).default(10),\n        offset: z.coerce.number().gte(0).default(0),\n        userId: z.string().optional(),\n      })\n      .strict(),\n  },\n  'get-kyc-stats': {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    props: z.object({}),\n    returns: {} as {\n      initialVerifications: {\n        count: number\n        day: string\n      }[]\n      phoneVerifications: {\n        count: number\n        day: string\n      }[]\n    },\n  },\n  txns: {\n    method: 'GET',\n    visibility: 'public',\n    authed: false,\n    props: z\n      .object({\n        token: z.string().optional(),\n        offset: z.coerce.number().default(0),\n        limit: z.coerce.number().gte(0).lte(100).default(100),\n        before: z.coerce.number().optional(),\n        after: z.coerce.number().optional(),\n        toId: z.string().optional(),\n        fromId: z.string().optional(),\n        category: z.string().optional(),\n        ignoreCategories: z.array(z.string()).optional(),\n      })\n      .strict(),\n    returns: [] as Txn[],\n  },\n  'generate-ai-market-suggestions': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: [] as AIGeneratedMarket[],\n    props: z\n      .object({\n        prompt: z.string(),\n        existingTitles: z.array(z.string()).optional(),\n      })\n      .strict(),\n  },\n  'generate-ai-market-suggestions-2': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: [] as AIGeneratedMarket[],\n    props: z\n      .object({\n        prompt: z.string(),\n        existingTitles: z.array(z.string()).optional(),\n      })\n      .strict(),\n  },\n  'generate-ai-description': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: {} as { description: JSONContent | undefined },\n    props: z\n      .object({\n        question: z.string(),\n        description: z.string().optional(),\n        answers: z.array(z.string()).optional(),\n        outcomeType: z.string().optional(),\n        shouldAnswersSumToOne: coerceBoolean.optional(),\n        addAnswersMode: z\n          .enum(['DISABLED', 'ONLY_CREATOR', 'ANYONE'])\n          .optional(),\n      })\n      .strict(),\n  },\n  'generate-ai-answers': {\n    method: 'POST',\n    visibility: 'public',\n    authed: true,\n    returns: {} as {\n      answers: string[]\n      addAnswersMode: 'DISABLED' | 'ONLY_CREATOR' | 'ANYONE'\n    },\n    props: z\n      .object({\n        question: z.string(),\n        answers: z.array(z.string()),\n        shouldAnswersSumToOne: coerceBoolean,\n        description: z.string().optional(),\n      })\n      .strict(),\n  },\n  'get-monthly-bets-2024': {\n    method: 'GET',\n    visibility: 'public',\n    authed: true,\n    props: z.object({ userId: z.string() }),\n    returns: [] as { month: string; bet_count: number; total_amount: number }[],\n  },\n  'get-max-min-profit-2024': {\n    method: 'GET',\n    visibility: 'public',\n    authed: true,\n    props: z.object({ userId: z.string() }),\n    returns: [] as {\n      profit: number\n      data: Contract\n      answer_id: string | null\n      has_no_shares: boolean\n      has_yes_shares: boolean\n    }[],\n  },\n  'get-next-loan-amount': {\n    method: 'GET',\n    visibility: 'undocumented',\n    cache: DEFAULT_CACHE_STRATEGY,\n    authed: false,\n    returns: {} as { amount: number },\n    props: z.object({\n      userId: z.string(),\n    }),\n  },\n} as const)\n\nexport type APIPath = keyof typeof API\nexport type APISchema<N extends APIPath> = (typeof API)[N]\n\nexport type APIParams<N extends APIPath> = z.input<APISchema<N>['props']>\nexport type ValidatedAPIParams<N extends APIPath> = z.output<\n  APISchema<N>['props']\n>\n\nexport type APIResponse<N extends APIPath> = APISchema<N> extends {\n  returns: Record<string, any>\n}\n  ? APISchema<N>['returns']\n  : void\n\nexport type APIResponseOptionalContinue<N extends APIPath> =\n  | { continue: () => Promise<void>; result: APIResponse<N> }\n  | APIResponse<N>\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 7982, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7989, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/util/api.ts"],"sourcesContent":["import { API, APIParams, APIPath, APIResponse } from 'common/api/schema'\nimport { APIError, getApiUrl } from 'common/api/utils'\nimport { forEach } from 'lodash'\nimport { removeUndefinedProps } from 'common/util/object'\nimport { User } from 'firebase/auth'\n\nexport function unauthedApi<P extends APIPath>(path: P, params: APIParams<P>) {\n  return baseApiCall(\n    formatApiUrlWithParams(path, params),\n    API[path].method,\n    params,\n    null\n  ) as Promise<APIResponse<P>>\n}\n\nexport const formatApiUrlWithParams = (\n  path: APIPath,\n  params: APIParams<APIPath>\n) => {\n  // parse any params that should part of the path (like market/:id)\n  let url = getApiUrl(path)\n  forEach(params, (v, k) => {\n    if (url.includes(`:${k}`)) {\n      url = url.replace(`:${k}`, v + '')\n      delete (params as any)[k]\n    }\n  })\n  return url\n}\n\nfunction appendQuery(url: string, props: Record<string, any>) {\n  const [base, query] = url.split(/\\?(.+)/)\n  const params = new URLSearchParams(query)\n  forEach(removeUndefinedProps(props ?? {}), (v, k) => {\n    if (Array.isArray(v)) {\n      v.forEach((item) => params.append(k + '[]', item))\n    } else {\n      params.set(k, v)\n    }\n  })\n  return `${base}?${params.toString()}`\n}\n\nexport async function baseApiCall(\n  url: string,\n  method: 'POST' | 'PUT' | 'GET',\n  params: any,\n  user: User | null\n) {\n  const actualUrl = method === 'POST' ? url : appendQuery(url, params)\n  const headers: HeadersInit = {\n    'Content-Type': 'application/json',\n  }\n  if (user) {\n    const token = await user.getIdToken()\n    headers.Authorization = `Bearer ${token}`\n  }\n  const req = new Request(actualUrl, {\n    headers,\n    method: method,\n    body:\n      params == null || method === 'GET' ? undefined : JSON.stringify(params),\n  })\n  return fetch(req).then(async (resp) => {\n    const json = (await resp.json()) as { [k: string]: any }\n    if (!resp.ok) {\n      throw new APIError(resp.status as any, json?.message, json?.details)\n    }\n    return json\n  })\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;AACA;AAEA;;;;;;;;;;AAGO,SAAS,YAA+B,IAAO,EAAE,MAAoB;IAC1E,OAAO,YACL,uBAAuB,MAAM,SAC7B,uHAAA,CAAA,MAAG,CAAC,KAAK,CAAC,MAAM,EAChB,QACA;AAEJ;AAEO,MAAM,yBAAyB,CACpC,MACA;IAEA,kEAAkE;IAClE,IAAI,MAAM,CAAA,GAAA,sHAAA,CAAA,YAAS,AAAD,EAAE;IACpB,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,QAAQ,CAAC,GAAG;QAClB,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG;YACzB,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI;YAC/B,OAAO,AAAC,MAAc,CAAC,EAAE;QAC3B;IACF;IACA,OAAO;AACT;AAEA,SAAS,YAAY,GAAW,EAAE,KAA0B;IAC1D,MAAM,CAAC,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC;IAChC,MAAM,SAAS,IAAI,gBAAgB;IACnC,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wHAAA,CAAA,uBAAoB,AAAD,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG;QAC7C,IAAI,MAAM,OAAO,CAAC,IAAI;YACpB,EAAE,OAAO,CAAC,CAAC,OAAS,OAAO,MAAM,CAAC,IAAI,MAAM;QAC9C,OAAO;YACL,OAAO,GAAG,CAAC,GAAG;QAChB;IACF;IACA,OAAO,GAAG,KAAK,CAAC,EAAE,OAAO,QAAQ,IAAI;AACvC;AAEO,eAAe,YACpB,GAAW,EACX,MAA8B,EAC9B,MAAW,EACX,IAAiB;IAEjB,MAAM,YAAY,WAAW,SAAS,MAAM,YAAY,KAAK;IAC7D,MAAM,UAAuB;QAC3B,gBAAgB;IAClB;IACA,IAAI,MAAM;QACR,MAAM,QAAQ,MAAM,KAAK,UAAU;QACnC,QAAQ,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;IAC3C;IACA,MAAM,MAAM,IAAI,QAAQ,WAAW;QACjC;QACA,QAAQ;QACR,MACE,UAAU,QAAQ,WAAW,QAAQ,YAAY,KAAK,SAAS,CAAC;IACpE;IACA,OAAO,MAAM,KAAK,IAAI,CAAC,OAAO;QAC5B,MAAM,OAAQ,MAAM,KAAK,IAAI;QAC7B,IAAI,CAAC,KAAK,EAAE,EAAE;YACZ,MAAM,IAAI,sHAAA,CAAA,WAAQ,CAAC,KAAK,MAAM,EAAS,MAAM,SAAS,MAAM;QAC9D;QACA,OAAO;IACT;AACF"}},
    {"offset": {"line": 8055, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8062, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/boost.ts"],"sourcesContent":["// number normal markets to show between boosted markets\nimport { Contract } from 'common/contract'\n\nexport const AD_PERIOD = 5\n\nexport const AD_WAIT_SECONDS = 4 // Time with ad visible before allowing the user to claim.\n\nexport const AD_RATE_LIMIT = 10 * 1000 // 10 seconds\n\n// cost in mana\nexport const DEFAULT_AD_COST_PER_VIEW = 10\nexport const MIN_AD_COST_PER_VIEW = 10\nexport const AD_REDEEM_REWARD = 3\n\nexport type adContract = {\n  contract: Contract\n  adId: string\n}\n"],"names":[],"mappings":"AAAA,wDAAwD;;;;;;;;;AAGjD,MAAM,YAAY;AAElB,MAAM,kBAAkB,EAAE,0DAA0D;;AAEpF,MAAM,gBAAgB,KAAK,KAAK,aAAa;;AAG7C,MAAM,2BAA2B;AACjC,MAAM,uBAAuB;AAC7B,MAAM,mBAAmB"}},
    {"offset": {"line": 8079, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8085, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/web/lib/api/api.ts"],"sourcesContent":["import { auth } from '../firebase/users'\nimport { getApiUrl } from 'common/api/utils'\nimport { JSONContent } from '@tiptap/core'\nimport { Group, PrivacyStatusType } from 'common/group'\nimport { AD_RATE_LIMIT } from 'common/boost'\nimport { ContractComment } from 'common/comment'\nimport { ReportProps } from 'common/report'\nimport { BaseDashboard, DashboardItem } from 'common/dashboard'\nimport { Bet } from 'common/bet'\nimport { API, APIParams, APIPath, APIResponse } from 'common/api/schema'\nimport { baseApiCall, formatApiUrlWithParams } from 'common/util/api'\nimport { sleep } from 'common/util/time'\nimport { Contract } from 'common/contract'\nexport { APIError } from 'common/api/utils'\n\nexport async function call(\n  url: string,\n  method: 'POST' | 'PUT' | 'GET',\n  params?: any\n) {\n  return baseApiCall(url, method, params, auth.currentUser)\n}\n\n// This is the preferred way of using the api going forward\nexport async function api<P extends APIPath>(\n  path: P,\n  params: APIParams<P> = {}\n) {\n  const pathProps = API[path]\n  const preferAuth = 'preferAuth' in pathProps && pathProps.preferAuth\n  // If the api is authed and the user is not loaded, wait for the user to load.\n  if ((pathProps.authed || preferAuth) && !auth.currentUser) {\n    let i = 0\n    while (!auth.currentUser) {\n      i++\n      await sleep(i * 10)\n      if (i > 30) {\n        console.error('User did not load after 30 iterations')\n        break\n      }\n    }\n  }\n\n  return (await call(\n    formatApiUrlWithParams(path, params),\n    pathProps.method,\n    params\n  )) as Promise<APIResponse<P>>\n}\n\n// helper function for the old apis so we don't have to migrate them\nfunction curriedAPI<P extends APIPath>(path: P) {\n  return (params: APIParams<P>) => api(path, params)\n}\n\nexport function createAnswer(params: any) {\n  return call(getApiUrl('createanswer'), 'POST', params)\n}\n\nexport function claimDestinySub(params: any) {\n  return call(getApiUrl('claimdestinysub'), 'POST', params)\n}\n\nexport function createUser(params: any) {\n  return call(getApiUrl('createuser'), 'POST', params)\n}\n\nexport function swapCert(params: any) {\n  return call(getApiUrl('swapcert'), 'POST', params)\n}\n\nexport function dividendCert(params: any) {\n  return call(getApiUrl('dividendcert'), 'POST', params)\n}\n\nexport function claimManalink(params: any) {\n  return call(getApiUrl('claimmanalink'), 'POST', params)\n}\n\nexport function createGroup(params: any) {\n  return call(getApiUrl('creategroup'), 'POST', params)\n}\n\nexport function updateGroup(params: { id: string } & Partial<Group>) {\n  return call(getApiUrl('updategroup'), 'POST', params)\n}\n\nexport function acceptChallenge(params: any) {\n  return call(getApiUrl('acceptchallenge'), 'POST', params)\n}\n\nexport function boostMarket(params: any) {\n  return call(getApiUrl('boost-market'), 'POST', params)\n}\n\nlet nonce = 0\nexport function redeemBoost(params: any) {\n  const now = Date.now()\n  if (now - nonce < AD_RATE_LIMIT - 500) {\n    throw Error(\n      `Please wait ${AD_RATE_LIMIT / 1000} seconds between redeeming boosts.`\n    )\n  }\n  nonce = now\n  return call(getApiUrl('redeem-boost'), 'POST', params)\n}\n\nexport function validateIapReceipt(params: any) {\n  return call(getApiUrl('validateiap'), 'POST', params)\n}\n\nexport function markAllNotifications(params: any) {\n  return call(getApiUrl('markallnotifications'), 'POST', params)\n}\n\nexport function updateMemberRole(params: {\n  groupId: string\n  memberId: string\n  role: string\n}) {\n  return call(getApiUrl('updatememberrole'), 'POST', params)\n}\n\nexport function updateGroupPrivacy(params: {\n  groupId: string\n  privacy: PrivacyStatusType\n}) {\n  return call(getApiUrl('updategroupprivacy'), 'POST', params)\n}\n\nexport function registerDiscordId(params: any) {\n  return call(getApiUrl('registerdiscordid'), 'POST', params)\n}\n\nexport function getUserIsFollowingTopic(params: { groupSlug: string }) {\n  return call(getApiUrl('getuserisgroupmember'), 'POST', params)\n}\n\nexport function completeQuest(params: any) {\n  return call(getApiUrl('completequest'), 'POST', params)\n}\n\nexport function getSupabaseToken() {\n  return call(getApiUrl('getsupabasetoken'), 'GET')\n}\n\nexport function updateUserDisinterestEmbedding(params: {\n  contractId: string\n  creatorId: string\n  feedId?: number\n  removeContract?: boolean\n}) {\n  return call(getApiUrl('update-user-disinterest-embedding'), 'POST', params)\n}\n\nexport const searchContracts = curriedAPI('search-markets-full')\n\nexport function deleteMarket(params: { contractId: string }) {\n  return call(getApiUrl('delete-market'), 'POST', params) as Promise<{\n    status: 'success'\n  }>\n}\n\nexport function saveTopic(params: { topic: string }) {\n  return call(getApiUrl('save-topic'), 'POST', params) as Promise<{\n    status: 'success'\n  }>\n}\n\nexport function setTV(params: {\n  streamId: string\n  slug: string\n  source: string\n  title: string\n  startTime: string\n  endTime: string\n}) {\n  return call(getApiUrl('settv'), 'POST', params) as Promise<{\n    status: 'success'\n  }>\n}\n\nexport function deleteTV(id: string) {\n  return call(getApiUrl('deletetv'), 'POST', { id }) as Promise<{\n    status: 'success'\n  }>\n}\n\nexport function joinGroupThroughInvite(params: { inviteId: string }) {\n  return call(getApiUrl('joingroupthroughinvite'), 'POST', params)\n}\n\nexport function followTopic(params: { groupId: string }) {\n  return call(getApiUrl('follow-topic'), 'POST', params)\n}\n\nexport const searchGroups = curriedAPI('search-groups')\n\nexport function leagueActivity(params: { season: number; cohort: string }) {\n  return call(getApiUrl('league-activity'), 'POST', params) as Promise<{\n    bets: Bet[]\n    comments: ContractComment[]\n    contracts: Contract[]\n  }>\n}\n\nexport function cancelBounty(params: { contractId: string }) {\n  return call(getApiUrl('cancel-bounty'), 'POST', params)\n}\n\nexport function searchGiphy(params: { term: string; limit: number }) {\n  return call(getApiUrl('searchgiphy'), 'POST', params)\n}\n\nexport function tweetFromManaChan(params: { tweet: string }) {\n  return call(getApiUrl('manachantweet'), 'POST', params)\n}\n\nexport function leaveReview(params: any) {\n  return call(getApiUrl('leave-review'), 'POST', params)\n}\nexport function getUserContractsMetricsWithContracts(params: {\n  userId: string\n  offset: number\n  limit: number\n}) {\n  return call(\n    getApiUrl('get-user-contract-metrics-with-contracts'),\n    'POST',\n    params\n  )\n}\n\nexport function castPollVote(params: { contractId: string; voteId: string }) {\n  return call(getApiUrl('cast-poll-vote'), 'POST', params)\n}\n\nexport function getSimilarGroupsToContract(params: { question: string }) {\n  return call(getApiUrl('get-similar-groups-to-contract'), 'POST', params)\n}\n\nexport function bidForLeague(params: {\n  season: number\n  division: number\n  cohort: string\n  amount: number\n}) {\n  return call(getApiUrl('bidforleague'), 'POST', params)\n}\n\nexport function followUser(userId: string) {\n  return call(getApiUrl('follow-user'), 'POST', { userId, follow: true })\n}\n\nexport function unfollowUser(userId: string) {\n  return call(getApiUrl('follow-user'), 'POST', { userId, follow: false })\n}\n\nexport function report(params: ReportProps) {\n  return call(getApiUrl('report'), 'POST', params)\n}\n\nexport function createDashboard(params: {\n  title: string\n  items: DashboardItem[]\n  topics: string[]\n}) {\n  return call(getApiUrl('createdashboard'), 'POST', params)\n}\n\nexport function getYourDashboards() {\n  return call(getApiUrl('getyourdashboards'), 'POST')\n}\n\nexport function followDashboard(params: { dashboardId: string }) {\n  return call(getApiUrl('followdashboard'), 'POST', params)\n}\n\nexport function supabaseSearchDashboards(params: {\n  term: string\n  offset: number\n  limit: number\n}) {\n  return call(getApiUrl('supabasesearchdashboards'), 'POST', params) as Promise<\n    BaseDashboard[]\n  >\n}\n\nexport function getYourFollowedDashboards() {\n  return call(getApiUrl('getyourfolloweddashboards'), 'POST')\n}\n\nexport function updateDashboard(params: {\n  title: string\n  dashboardId: string\n  items: DashboardItem[]\n  topics?: string[]\n}) {\n  return call(getApiUrl('updatedashboard'), 'POST', params)\n}\n\nexport function deleteDashboard(params: { dashboardId: string }) {\n  return call(getApiUrl('delete-dashboard'), 'POST', params)\n}\n\nexport const updateMarket = curriedAPI('market/:contractId/update')\n\nexport const updateUser = curriedAPI('me/update')\n\nexport function banUser(params: { userId: string; unban?: boolean }) {\n  return call(getApiUrl('ban-user'), 'POST', params)\n}\nexport function createPrivateMessageChannelWithUsers(params: {\n  userIds: string[]\n}) {\n  return call(getApiUrl('create-private-user-message-channel'), 'POST', params)\n}\n\nexport function sendUserPrivateMessage(params: {\n  channelId: number\n  content: JSONContent\n}) {\n  return call(getApiUrl('create-private-user-message'), 'POST', params)\n}\nexport function leavePrivateMessageChannel(params: { channelId: number }) {\n  return call(getApiUrl('leave-private-user-message-channel'), 'POST', params)\n}\nexport function updatePrivateMessageChannel(params: {\n  channelId: number\n  notifyAfterTime: number\n}) {\n  return call(getApiUrl('update-private-user-message-channel'), 'POST', params)\n}\nexport function editAnswerCpmm(params: {\n  answerId: string\n  text?: string\n  color?: string\n  contractId: string\n}) {\n  return call(getApiUrl('edit-answer-cpmm'), 'POST', params)\n}\n\nexport function createChartAnnotation(params: {\n  eventTime: number\n  contractId: string\n  text?: string\n  commentId?: string\n  thumbnailUrl?: string\n  externalUrl?: string\n  answerId?: string\n  probChange?: number\n}) {\n  return call(getApiUrl('create-chart-annotation'), 'POST', params)\n}\n\nexport function deleteChartAnnotation(params: { id: number }) {\n  return call(getApiUrl('delete-chart-annotation'), 'POST', params)\n}\nexport function getAdAnalytics(params: { contractId: string }) {\n  return call(getApiUrl('get-ad-analytics'), 'POST', params)\n}\n\nexport function requestLoan() {\n  return call(getApiUrl('request-loan'), 'GET')\n}\n\nexport function getMonthlyBets2024(params: { userId: string }) {\n  return call(getApiUrl('get-monthly-bets-2024'), 'POST', params)\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 8379, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8401, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/common/src/native-message.ts"],"sourcesContent":["import { GPSData } from 'common/gidx/gidx'\nimport { Notification } from 'common/notification'\n\nexport type nativeToWebMessageType =\n  | 'iapReceipt'\n  | 'iapError'\n  | 'nativeFbUser'\n  | 'pushNotificationPermissionStatus'\n  | 'pushToken'\n  | 'notification'\n  | 'link'\n  | 'location'\n  | 'locationPermissionStatus'\n  | 'hasReviewAction'\n  | 'version'\nexport type nativeToWebMessage = {\n  type: nativeToWebMessageType\n  data: any\n}\n\nexport type webToNativeMessage = {\n  type: webToNativeMessageType\n  data: any\n}\n\nexport type webToNativeMessageType =\n  | 'checkout'\n  | 'openUrl'\n  | 'tryToGetPushTokenWithoutPrompt'\n  | 'loginClicked'\n  | 'copyToClipboard'\n  | 'promptEnablePushNotifications'\n  | 'signOut'\n  | 'users'\n  | 'error'\n  | 'onPageVisit'\n  | 'share'\n  | 'theme'\n  | 'log'\n  | 'startedListening'\n  | 'locationRequested'\n  | 'locationPermissionStatusRequested'\n  | 'storeReviewRequested'\n  | 'hasReviewActionRequested'\n  | 'versionRequested'\n  | 'setAppUrl'\nexport const IS_NATIVE_KEY = 'is-native'\nexport const PLATFORM_KEY = 'native-platform'\n\nexport type MesageTypeMap = {\n  version: {\n    version: string | undefined\n  }\n  hasReviewAction: {\n    hasAction: boolean\n    isAvailable: boolean\n  }\n  locationPermissionStatus: {\n    status: 'granted' | 'denied' | 'undetermined'\n  }\n  location: GPSData | { error: string }\n  iapReceipt: { receipt: string }\n  iapError: object\n  nativeFbUser: object\n  pushNotificationPermissionStatus: {\n    status: 'denied' | 'undetermined'\n  }\n  pushToken: {\n    token: string\n  }\n  notification: Notification\n  link: {\n    url: string\n  }\n}\n"],"names":[],"mappings":";;;;AA8CO,MAAM,gBAAgB;AACtB,MAAM,eAAe"}},
    {"offset": {"line": 8407, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8413, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/web/lib/native/is-native.ts"],"sourcesContent":["import { IS_NATIVE_KEY, PLATFORM_KEY } from 'common/native-message'\nimport { PrivateUser } from 'common/user'\nimport { uniq } from 'lodash'\nimport { safeLocalStorage, safeSessionStorage } from 'web/lib/util/local'\nimport { api } from '../api/api'\n\n/**@deprecated, use useNativeInfo() instead */\nexport const getIsNative = () => {\n  const { isNative } = getNativeInfo()\n  return isNative\n}\n\n/**@deprecated, use useNativeInfo() instead */\nexport const getNativePlatform = () => {\n  return getNativeInfo()\n}\n\nconst getNativeInfo = () => {\n  if (typeof window === 'undefined') return { isNative: false, platform: '' }\n  const local = safeLocalStorage\n  const ss = safeSessionStorage\n  const isNative = local?.getItem(IS_NATIVE_KEY) || ss?.getItem(IS_NATIVE_KEY)\n  const platform = local?.getItem(PLATFORM_KEY) || ss?.getItem(PLATFORM_KEY)\n  return { isNative: isNative === 'true', platform }\n}\n\nexport const setIsNativeOld = (isNative: boolean, platform: string) => {\n  const local = safeLocalStorage\n  const ss = safeSessionStorage\n  local?.setItem(IS_NATIVE_KEY, isNative ? 'true' : 'false')\n  ss?.setItem(IS_NATIVE_KEY, isNative ? 'true' : 'false')\n  if (platform) {\n    local?.setItem(PLATFORM_KEY, platform)\n    ss?.setItem(PLATFORM_KEY, platform)\n  }\n}\n\nexport const setInstalledAppPlatform = (\n  privateUser: PrivateUser,\n  platform: string\n) => {\n  if (privateUser.installedAppPlatforms?.includes(platform)) return\n  api('me/private/update', {\n    installedAppPlatforms: uniq([\n      ...(privateUser.installedAppPlatforms ?? []),\n      platform,\n    ]),\n  })\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AAJA;AAIA;;;;;;;;;;AAGO,MAAM,cAAc;IACzB,MAAM,EAAE,QAAQ,EAAE,GAAG;IACrB,OAAO;AACT;AAGO,MAAM,oBAAoB;IAC/B,OAAO;AACT;AAEA,MAAM,gBAAgB;IACpB,wCAAmC,OAAO;QAAE,UAAU;QAAO,UAAU;IAAG;;IAC1E,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;AAER;AAEO,MAAM,iBAAiB,CAAC,UAAmB;IAChD,MAAM,QAAQ,oHAAA,CAAA,mBAAgB;IAC9B,MAAM,KAAK,oHAAA,CAAA,qBAAkB;IAC7B,OAAO,QAAQ,2HAAA,CAAA,gBAAa,EAAE,WAAW,SAAS;IAClD,IAAI,QAAQ,2HAAA,CAAA,gBAAa,EAAE,WAAW,SAAS;IAC/C,IAAI,UAAU;QACZ,OAAO,QAAQ,2HAAA,CAAA,eAAY,EAAE;QAC7B,IAAI,QAAQ,2HAAA,CAAA,eAAY,EAAE;IAC5B;AACF;AAEO,MAAM,0BAA0B,CACrC,aACA;IAEA,IAAI,YAAY,qBAAqB,EAAE,SAAS,WAAW;IAC3D,CAAA,GAAA,iIAAA,CAAA,MAAG,AAAD,EAAE,qBAAqB;QACvB,uBAAuB,CAAA,GAAA,iIAAA,CAAA,UAAI,AAAD,EAAE;eACtB,YAAY,qBAAqB,IAAI,EAAE;YAC3C;SACD;IACH;AACF"}},
    {"offset": {"line": 8470, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8477, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/stonks/lib/firebase/init.ts"],"sourcesContent":["import { getStorage } from 'firebase/storage'\nimport { getApp, getApps, initializeApp } from 'firebase/app'\nimport { FIREBASE_CONFIG } from 'common/envs/constants'\n\n// Initialize Firebase\nexport const app = getApps().length ? getApp() : initializeApp(FIREBASE_CONFIG)\nexport const storage = getStorage()\nexport const privateStorage = getStorage(\n  app,\n  'gs://' + FIREBASE_CONFIG.privateBucket\n)\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;;;;;AAGO,MAAM,MAAM,CAAA,GAAA,8HAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,8HAAA,CAAA,SAAM,AAAD,MAAM,CAAA,GAAA,8HAAA,CAAA,gBAAa,AAAD,EAAE,2HAAA,CAAA,kBAAe;AACvE,MAAM,UAAU,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD;AACzB,MAAM,iBAAiB,CAAA,GAAA,sIAAA,CAAA,aAAU,AAAD,EACrC,KACA,UAAU,2HAAA,CAAA,kBAAe,CAAC,aAAa"}},
    {"offset": {"line": 8496, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8503, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/stonks/lib/firebase/users.ts"],"sourcesContent":["import { Contract } from 'common/contract'\nimport { PrivateUser, User } from 'common/user'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport {\n  GoogleAuthProvider,\n  OAuthProvider,\n  getAuth,\n  signInWithPopup,\n} from 'firebase/auth'\nimport { getIsNative } from 'web/lib/native/is-native'\nimport { nativeSignOut } from 'web/lib/native/native-messages'\nimport { app } from './init'\nimport { postMessageToNative } from 'web/lib/native/post-message'\n\ndayjs.extend(utc)\n\nexport type { User }\n\nexport const auth = getAuth(app)\n\nexport const CACHED_REFERRAL_USERNAME_KEY = 'CACHED_REFERRAL_KEY'\nconst CACHED_REFERRAL_CONTRACT_ID_KEY = 'CACHED_REFERRAL_CONTRACT_KEY'\n\nexport async function firebaseLogin() {\n  if (getIsNative()) {\n    // Post the message back to expo\n    postMessageToNative('loginClicked', {})\n    return\n  }\n  const provider = new GoogleAuthProvider()\n  return signInWithPopup(auth, provider).then(async (result) => {\n    return result\n  })\n}\n\nexport async function loginWithApple() {\n  const provider = new OAuthProvider('apple.com')\n  provider.addScope('email')\n  provider.addScope('name')\n\n  return signInWithPopup(auth, provider)\n    .then((result) => {\n      return result\n    })\n    .catch((error) => {\n      console.error(error)\n    })\n}\n\nexport async function firebaseLogout() {\n  if (getIsNative()) nativeSignOut()\n\n  await auth.signOut()\n}\n\nexport const isContractBlocked = (\n  privateUser: PrivateUser | undefined | null,\n  contract: Contract\n) => {\n  if (!privateUser) return false\n\n  const {\n    blockedContractIds,\n    blockedByUserIds,\n    blockedUserIds,\n    blockedGroupSlugs,\n  } = privateUser\n\n  return (\n    blockedContractIds?.includes(contract.id) ||\n    contract.groupSlugs?.some((slug) => blockedGroupSlugs?.includes(slug)) ||\n    blockedByUserIds?.includes(contract.creatorId) ||\n    blockedUserIds?.includes(contract.creatorId)\n  )\n}\n"],"names":[],"mappings":";;;;;;;;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAEA,mGAAA,CAAA,UAAK,CAAC,MAAM,CAAC,iJAAA,CAAA,UAAG;AAIT,MAAM,OAAO,CAAA,GAAA,gIAAA,CAAA,UAAO,AAAD,EAAE,0HAAA,CAAA,MAAG;AAExB,MAAM,+BAA+B;AAC5C,MAAM,kCAAkC;AAEjC,eAAe;IACpB,IAAI,CAAA,GAAA,6HAAA,CAAA,cAAW,AAAD,KAAK;QACjB,gCAAgC;QAChC,CAAA,GAAA,gIAAA,CAAA,sBAAmB,AAAD,EAAE,gBAAgB,CAAC;QACrC;IACF;IACA,MAAM,WAAW,IAAI,gIAAA,CAAA,qBAAkB;IACvC,OAAO,CAAA,GAAA,gIAAA,CAAA,kBAAe,AAAD,EAAE,MAAM,UAAU,IAAI,CAAC,OAAO;QACjD,OAAO;IACT;AACF;AAEO,eAAe;IACpB,MAAM,WAAW,IAAI,gIAAA,CAAA,gBAAa,CAAC;IACnC,SAAS,QAAQ,CAAC;IAClB,SAAS,QAAQ,CAAC;IAElB,OAAO,CAAA,GAAA,gIAAA,CAAA,kBAAe,AAAD,EAAE,MAAM,UAC1B,IAAI,CAAC,CAAC;QACL,OAAO;IACT,GACC,KAAK,CAAC,CAAC;QACN,QAAQ,KAAK,CAAC;IAChB;AACJ;AAEO,eAAe;IACpB,IAAI,CAAA,GAAA,6HAAA,CAAA,cAAW,AAAD,KAAK,CAAA,GAAA,mIAAA,CAAA,gBAAa,AAAD;IAE/B,MAAM,KAAK,OAAO;AACpB;AAEO,MAAM,oBAAoB,CAC/B,aACA;IAEA,IAAI,CAAC,aAAa,OAAO;IAEzB,MAAM,EACJ,kBAAkB,EAClB,gBAAgB,EAChB,cAAc,EACd,iBAAiB,EAClB,GAAG;IAEJ,OACE,oBAAoB,SAAS,SAAS,EAAE,KACxC,SAAS,UAAU,EAAE,KAAK,CAAC,OAAS,mBAAmB,SAAS,UAChE,kBAAkB,SAAS,SAAS,SAAS,KAC7C,gBAAgB,SAAS,SAAS,SAAS;AAE/C"}},
    {"offset": {"line": 8567, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8574, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/stonks/lib/api/api.ts"],"sourcesContent":["import { getApiUrl } from 'common/api/utils'\nimport { JSONContent } from '@tiptap/core'\nimport { Group, PrivacyStatusType } from 'common/group'\nimport { AD_RATE_LIMIT } from 'common/boost'\nimport { ContractComment } from 'common/comment'\nimport { ReportProps } from 'common/report'\nimport { BaseDashboard, DashboardItem } from 'common/dashboard'\nimport { Bet } from 'common/bet'\nimport { API, APIParams, APIPath, APIResponse } from 'common/api/schema'\nimport { baseApiCall, formatApiUrlWithParams } from 'common/util/api'\nimport { sleep } from 'common/util/time'\nimport { Contract } from 'common/contract'\nimport { auth } from '../firebase/users'\nexport { APIError } from 'common/api/utils'\n\nexport async function call(\n  url: string,\n  method: 'POST' | 'PUT' | 'GET',\n  params?: any\n) {\n  return baseApiCall(url, method, params, auth.currentUser)\n}\n\n// This is the preferred way of using the api going forward\nexport async function api<P extends APIPath>(\n  path: P,\n  params: APIParams<P> = {}\n) {\n  const pathProps = API[path]\n  const preferAuth = 'preferAuth' in pathProps && pathProps.preferAuth\n  // If the api is authed and the user is not loaded, wait for the user to load.\n  if ((pathProps.authed || preferAuth) && !auth.currentUser) {\n    let i = 0\n    while (!auth.currentUser) {\n      i++\n      await sleep(i * 10)\n      if (i > 30) {\n        console.error('User did not load after 30 iterations')\n        break\n      }\n    }\n  }\n\n  return (await call(\n    formatApiUrlWithParams(path, params),\n    pathProps.method,\n    params\n  )) as Promise<APIResponse<P>>\n}\n\n// helper function for the old apis so we don't have to migrate them\nfunction curriedAPI<P extends APIPath>(path: P) {\n  return (params: APIParams<P>) => api(path, params)\n}\n\nexport const searchContracts = curriedAPI('search-markets-full')\n"],"names":[],"mappings":";;;;;AASA;AAGA;AAJA;AAEA;;;;;;;;;;;;AAKO,eAAe,KACpB,GAAW,EACX,MAA8B,EAC9B,MAAY;IAEZ,OAAO,CAAA,GAAA,qHAAA,CAAA,cAAW,AAAD,EAAE,KAAK,QAAQ,QAAQ,2HAAA,CAAA,OAAI,CAAC,WAAW;AAC1D;AAGO,eAAe,IACpB,IAAO,EACP,SAAuB,CAAC,CAAC;IAEzB,MAAM,YAAY,uHAAA,CAAA,MAAG,CAAC,KAAK;IAC3B,MAAM,aAAa,gBAAgB,aAAa,UAAU,UAAU;IACpE,8EAA8E;IAC9E,IAAI,CAAC,UAAU,MAAM,IAAI,UAAU,KAAK,CAAC,2HAAA,CAAA,OAAI,CAAC,WAAW,EAAE;QACzD,IAAI,IAAI;QACR,MAAO,CAAC,2HAAA,CAAA,OAAI,CAAC,WAAW,CAAE;YACxB;YACA,MAAM,CAAA,GAAA,sHAAA,CAAA,QAAK,AAAD,EAAE,IAAI;YAChB,IAAI,IAAI,IAAI;gBACV,QAAQ,KAAK,CAAC;gBACd;YACF;QACF;IACF;IAEA,OAAQ,MAAM,KACZ,CAAA,GAAA,qHAAA,CAAA,yBAAsB,AAAD,EAAE,MAAM,SAC7B,UAAU,MAAM,EAChB;AAEJ;AAEA,oEAAoE;AACpE,SAAS,WAA8B,IAAO;IAC5C,OAAO,CAAC,SAAyB,IAAI,MAAM;AAC7C;AAEO,MAAM,kBAAkB,WAAW"}},
    {"offset": {"line": 8619, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8641, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/stonks/components/StonksList.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { LiteMarket } from 'common/api/market-types'\nimport { api } from 'stonks/lib/api/api'\n\nexport function StonksList() {\n  const [stonks, setStonks] = useState<LiteMarket[]>([])\n  const [error, setError] = useState<string>()\n\n  useEffect(() => {\n    const fetchStonks = async () => {\n      try {\n        const data = await api('search-markets', {\n          contractType: 'STONK',\n          sort: 'prob-descending',\n          limit: 100,\n        })\n        setStonks(data)\n      } catch (e) {\n        setError('Failed to load stonks')\n        console.error(e)\n      }\n    }\n    fetchStonks()\n  }, [])\n\n  if (error) return <div>Error: {error}</div>\n\n  return (\n    <div>\n      <ul>\n        {stonks.map((stonk) => (\n          <li key={stonk.id}>\n            {stonk.question}: <StonkPrice contract={stonk} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;AAAA;;;;;;;;;AAEO,SAAS;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IACrD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD;IAEjC,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc;YAClB,IAAI;gBACF,MAAM,OAAO,MAAM,CAAA,GAAA,oIAAA,CAAA,MAAG,AAAD,EAAE,kBAAkB;oBACvC,cAAc;oBACd,MAAM;oBACN,OAAO;gBACT;gBACA,UAAU;YACZ,EAAE,OAAO,GAAG;gBACV,SAAS;gBACT,QAAQ,KAAK,CAAC;YAChB;QACF;QACA;IACF,GAAG,EAAE;IAEL,IAAI,OAAO,qBAAO,qKAAC;;YAAI;YAAQ;;;;;;;IAE/B,qBACE,qKAAC;kBACC,cAAA,qKAAC;sBACE,OAAO,GAAG,CAAC,CAAC,sBACX,qKAAC;;wBACE,MAAM,QAAQ;wBAAC;sCAAE,qKAAC;4BAAW,UAAU;;;;;;;mBADjC,MAAM,EAAE;;;;;;;;;;;;;;;AAO3B"}},
    {"offset": {"line": 8715, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8722, "column": 0}, "map": {"version":3,"sources":["file:///Users/ingawei/Documents/Manifold/manifold/stonks/stonks/pages/index.tsx"],"sourcesContent":["import { StonksList } from '../components/StonksList'\n\nexport default function Home() {\n  return (\n    <div>\n      <h1>Stonks Tracker</h1>\n      <StonksList />\n    </div>\n  )\n} "],"names":[],"mappings":";;;;AAAA;;;;;;;AAEe,SAAS;IACtB,qBACE,qKAAC;;0BACC,qKAAC;0BAAG;;;;;;0BACJ,qKAAC,4HAAA,CAAA,aAAU;;;;;;;;;;;AAGjB"}},
    {"offset": {"line": 8755, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}